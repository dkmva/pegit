"""
Django settings for prime project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

import yaml

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
with open(os.path.join(BASE_DIR, 'CONF_local.yaml')) as f:
    conf = yaml.full_load(f)

if conf['DATABASES']['default']['ENGINE'] == 'django.db.backends.sqlite3' and not conf['DATABASES']['default']['NAME'].startswith('/'):
    conf['DATABASES']['default']['NAME'] = os.path.join(BASE_DIR, conf['DATABASES']['default']['NAME'])

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(conf['DEBUG']))
ALLOWED_HOSTS = conf['ALLOWED_HOSTS']
# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = conf['DATABASES']
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'design.apps.DesignConfig',
    'rest_framework',
    #'corsheaders',
]

if DEBUG:
    INSTALLED_APPS.append('debug_toolbar')

MIDDLEWARE = [
    #'corsheaders.middleware.CorsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'prime.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prime.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,

    'DEFAULT_RENDERER_CLASSES': (
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
        'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer',
    ),

    'DEFAULT_PARSER_CLASSES': (
        'djangorestframework_camel_case.parser.CamelCaseFormParser',
        'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',
        'djangorestframework_camel_case.parser.CamelCaseJSONParser',
    ),

    'JSON_UNDERSCOREIZE': {
        'no_underscore_before_number': True,
    },
}

#CORS_ORIGIN_WHITELIST = [
#    "http://127.0.0.1:3000",
#    "http://localhost:3000",
#]

INTERNAL_IPS = [
    # ...
    '127.0.0.1',
    # ...
]

DESIGN_TWO_BIT_TO_FA_PATH = conf['DESIGN_TWO_BIT_TO_FA_PATH']
DESIGN_BOWTIE_PATH = conf['DESIGN_BOWTIE_PATH']
DESIGN_PRIMER3_PATH = conf['DESIGN_PRIMER3_PATH']
DESIGN_PRIMER3_CONFIG_PATH = conf['DESIGN_PRIMER3_CONFIG_PATH']
DESIGN_ASSEMBLIES_FOLDER = conf['DESIGN_ASSEMBLIES_FOLDER']
DESIGN_BOWTIE_GENOMES_FOLDER = conf['DESIGN_BOWTIE_GENOMES_FOLDER']
DESIGN_CODON_USAGE_FOLDER = conf['DESIGN_CODON_USAGE_FOLDER']
DESIGN_OUTPUT_FOLDER = conf['DESIGN_OUTPUT_FOLDER']
DESIGN_ENTREZ_EMAIL = conf['DESIGN_ENTREZ_EMAIL']
DESIGN_CLINVAR_ORGANISM = conf['DESIGN_CLINVAR_ORGANISM']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO'
        },
    },
}

# Celery base setup
CELERY_BROKER_URL = conf['CELERY_BROKER_URL']
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

CELERY_TASK_ACKS_LATE = True
CELERY_PREFETCH_MULTIPLIER = 1
CELERY_WORKER_CONCURRENCY = 1
CELERY_PREFETCH_COUNT = 1

DESIGN_CONF = conf['CONF']
