{"version":3,"sources":["seqvizcustom/utils/parser.js","seqvizcustom/utils/sequence.js","seqvizcustom/io/parsers/snapgene.js","assets/logo.png","seqvizcustom/utils/colors.js","seqvizcustom/utils/randomid.js","api.js","state/organisms.js","state/edits.js","state/home.js","state/customsequence.js","state/gene.js","state/region.js","state/transcript.js","state/job.js","state/routes.js","state/rootReducer.js","state/sagas.js","configureStore.js","view/Loading/index.js","view/Submission/EditsForm.js","seqvizcustom/io/parsers/benchling.js","seqvizcustom/io/parsers/biobrick.js","seqvizcustom/io/parsers/fasta.js","seqvizcustom/io/parsers/genbank.js","seqvizcustom/io/parsers/jbei.js","seqvizcustom/io/parsers/sbol.v1.js","seqvizcustom/io/parsers/sbol.v2.js","seqvizcustom/io/parsers/sbol.js","seqvizcustom/io/parsers/seqbuilder.js","seqvizcustom/io/filesToParts.js","seqvizcustom/io/igemBackbones.js","seqvizcustom/io/externalToPart.js","seqvizcustom/utils/enzymes.js","seqvizcustom/utils/isEqual.js","seqvizcustom/utils/digest.js","seqvizcustom/utils/search.js","seqvizcustom/SeqViz/handlers/centralIndex.js","seqvizcustom/SeqViz/handlers/selection.jsx","seqvizcustom/utils/bindingSites.js","seqvizcustom/SeqViz/elementsToRows.js","seqvizcustom/utils/debounce.js","seqvizcustom/SeqViz/handlers/events.jsx","seqvizcustom/SeqViz/handlers/index.js","seqvizcustom/SeqViz/Circular/Annotations.jsx","seqvizcustom/SeqViz/Circular/CutSites.jsx","seqvizcustom/SeqViz/Circular/Find.jsx","seqvizcustom/SeqViz/Circular/Index.jsx","seqvizcustom/SeqViz/Circular/WrappedGroupLabel.jsx","seqvizcustom/SeqViz/Circular/Labels.jsx","seqvizcustom/SeqViz/Circular/Primers.jsx","seqvizcustom/SeqViz/Circular/Selection.jsx","seqvizcustom/SeqViz/Circular/Circular.jsx","seqvizcustom/SeqViz/Linear/InfiniteScroll.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Annotations.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/CutSites.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Index.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Find.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Primers.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Selection.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/Translations.jsx","seqvizcustom/SeqViz/Linear/SeqBlock/SeqBlock.jsx","seqvizcustom/SeqViz/Linear/Linear.jsx","seqvizcustom/SeqViz/SeqViewer.jsx","seqvizcustom/SeqViz/SeqViz.jsx","seqvizcustom/parts/pUC.js","view/Shared/SequenceBox.js","view/Shared/OrganismBox.js","view/Submission/Submission.js","view/Submission/Gene.js","view/Submission/Region.js","view/Home/components/LogoRow.js","view/Home/components/TranscriptPlot.js","view/Home/components/TranscriptList.js","view/Home/components/ClinVarSelection.js","view/Home/components/AdvancedOptions.js","view/Home/components/SelectedEdits.js","view/Home/index.js","view/Job/components/JobStatusBox.js","view/Job/Summary.js","view/Job/components/OligosBox.js","view/Job/components/EditBox.js","view/Job/components/formatters.js","view/Job/functions/positionCalculations.js","view/Job/List.js","view/Job/components/columns.js","view/Job/components/Image.js","view/Job/Detail.js","view/Job/NickingDetail.js","view/Submission/Transcript.js","view/Submission/CustomSequence.js","view/Routes.js","view/About.js","view/Contact.js","view/FAQ.js","view/Instructions.js","view/App.js","serviceWorker.js","index.js"],"names":["DNAComplement","a","t","c","g","A","T","C","G","r","R","y","Y","S","s","W","w","d","D","h","H","k","K","m","M","v","V","b","B","N","n","X","x","U","u","dnaComplement","origSeq","seq","compSeq","i","origLength","length","reverseComplement","inputSeq","split","reverse","join","trimCarriageReturn","untrimmed","replace","extractDate","data","date","Date","now","forEach","other","parse","firstElement","arr","Array","isArray","fwd","Set","rev","directionality","direction","has","partFactory","name","getTime","tags","annotations","primers","cutSites","note","nucleotides","nucleotideWildCards","codon2AA","AAA","AAT","AAG","AAC","ATA","ATT","ATG","ATC","AGA","AGT","AGG","AGC","ACA","ACT","ACG","ACC","TAA","TAT","TAG","TAC","TTA","TTT","TTG","TTC","TGA","TGT","TGG","TGC","TCA","TCT","TCG","TCC","GAA","GAT","GAG","GAC","GTA","GTT","GTG","GTC","GGA","GGT","GGG","GGC","GCA","GCT","GCG","GCC","CAA","CAT","CAG","CAC","CTA","CTT","CTG","CTC","CGA","CGT","CGG","CGC","CCA","CCT","CCG","CCC","translateWildNucleotides","nucleotideSequence","toLowerCase","map","letter","Object","keys","getMismatchIndices","sequence","match","nucleotide","filter","e","returnRanges","indices","currStart","currCount","ranges","index","push","calcGC","gcPerc","parseFloat","toFixed","calcTm","numberbps","numbergcs","numberats","numbermismatches","gcpercent","slice","Math","round","annotationFactory","annName","color","chooseRandomColor","colorByIndex","id","randomid","type","start","end","primerFactory","overhang","complementId","gc","tm","any","dimer","hairpin","stability","penalty","vector","strict","translateDNA","seqInput","toUpperCase","seqLength","aaSeq","j","createLinearTranslations","translations","dnaSeq","minPos","min","offset","offsetReturn","startFrom","AAIndex","upstream","translation","substring","remaining","floor","AAseq","firstAAIndex","fileArrayBuffer","options","fileName","read","size","fmt","buffer","Buffer","from","StringDecoder","write","unpack","mode","bufferpack","undefined","unpacked","title","Error","isDNA","exportVersion","importVersion","byteLength","nextByte","blockSize","ordOfNB","ord","props","binaryRep","dec2bin","circular","isFirstBitA1","blockContent","editMD","notes","description","directionalityDict","xml","Features","Feature","attrs","$","Segment","minStart","maxEnd","seg","range","max","string","toString","charCodeAt","dec","num","Number","pop","str","Promise","resolve","reject","xml2js","parseString","err","result","module","exports","COLORS","COLOR_BORDER_MAP","colors","choices","randIndex","random","borderColorByIndex","darkerColorCache","darkerColor","pSBC","p","c0","c1","l","P","f","parseInt","pSBCr","add","pow","number","String","headers","get","endpoint","axios","method","url","post","search","query","loadOrganisms","watchRequestOrganisms","FETCH_ORGANISMS","FETCH_ORGANISMS_FAILED","INITIAL_STATE","values","loading","error","selectedOrganism","store","getState","organisms","put","call","api","response","results","takeLatest","loadEdits","watchRequestEdits","FETCH_EDITS","FETCH_EDITS_SUCCEEDED","FETCH_EDITS_FAILED","edits","geneSearch","watchSearchGenes","clinVarSearch","watchSearchClinVar","validateEditAndAdd","watchRequestAddEdit","validateMultipleAndAdd","watchRequestAddMultiple","loadAdvancedOptions","watchRequestAdvancedOptions","SELECT_GENE","SEARCH_GENES","SEARCH_CLINVAR","ADD_EDIT","REMOVE_EDIT","genes","selectedGene","clinvar","searching","validated","errors","addEdit","submitting","advancedOptions","pbsMinLength","pbsMaxLength","rtMinLength","rtMaxLength","nickingRange","spacerSearchRange","productMinSize","productMaxSize","primerMinLength","primerMaxLength","primerOptLength","primerMinTm","primerMaxTm","primerOptTm","numPegs","searchGenesSuccess","searchGenesFailure","requestAddEdit","edit","addEditSuccess","addEditFailure","addMultipleSuccess","addMultipleFailure","action","organism","route","changeRoute","home","jsonEdit","JSON","stringify","identical","obj","some","message","routeHome","takeEvery","loadCustomSequence","SET_CUSTOM_SEQUENCE","customsequence","loadGene","loadRouteGene","watchRequestGene","FETCH_GENE","FETCH_GENE_FAILED","gene","requestGene","fetchGene","location","payload","geneId","loadRegion","loadRouteRegion","watchRequestRegion","FETCH_REGION","FETCH_REGION_FAILED","requestRegion","organismId","region","loadTranscript","loadRouteTranscript","watchRequestTranscript","FETCH_TRANSCRIPT","FETCH_TRANSCRIPT_SUCCEEDED","FETCH_TRANSCRIPT_FAILED","transcript","requestTranscript","fetchTranscript","transcriptId","loadSummary","loadRouteSummary","loadDetail","loadRouteDetail","doSubmitJob","watchSubmitJob","doSubmitClinVar","watchSubmitClinVar","ADD_QUEUE_POSITION","REQUESTED_DETAIL","SUBMIT_JOB","SUBMIT_JOB_FAILED","SUBMIT_CLINVAR","summary","detail","requestSummary","requestSummarySuccess","requestSummaryFailure","requestDetail","requestDetailFailure","status","includes","jobId","position","delay","jobData","job","routeJobSummary","routes","ROUTE_GENE","routesMap","connectRoutes","reducer","middleware","enhancer","routeTranscript","routeJobDetail","routePegRNADetail","pegRNA","routeNickingDetail","nicking","routeType","state","sideEffectsRoutesMap","select","initialRoute","spawn","take","rootReducer","combineReducers","nonFieldErrors","alert","val","value","option","statusText","warning","queuePosition","rootSaga","all","fork","sagasMiddleware","createSagaMiddleware","composeMiddlewares","applyMiddleware","routesMiddleware","composeEnhancers","compose","createStore","routesEnhancer","run","Loading","styles","beforeAfter","content","display","width","height","borderRadius","margin","padding","boxSizing","before","backgroundColor","transform","WebkitTransform","animation","WebkitAnimation","verticalAlign","lineHeight","after","style","textAlign","count","_","Fragment","key","animationDelay","marginRight","defaultProps","LoadingCard","Card","Body","selectedEdit","editChange","optionChange","staticOptionChange","handleSubmit","canSubmit","isSubmitting","Form","onSubmit","Row","className","Group","as","Col","Label","OverlayTrigger","placement","overlay","Popover","Content","trigger","Title","source","docstring","Control","onChange","disabled","entries","target","required","pattern","selected","md","Check","checked","inline","label","defaultChecked","Button","variant","text","partJSON","bases","part","_id","modifiedAt","strand","file","backbone","rejectBioBrick","errType","rsbpml","part_list","sequences","part_name","featureArray","features","seq_data","feature","backboneName","startpos","endpos","newPart","trim","startsWith","substr","indexOf","newlineBeforeSeq","lastIndexOf","lastChar","tagNameList","tagColorList","fileInput","HEADER_ROW","headerRest","parsedName","accessionName","accession","FEATURES_LINE","FEATURES_NEW_LINE","ORIGIN_LINE","FEATURES_ROWS","primerFlag","row_i","currLine","rangeString","rangeRegex","startSearch","exec","endSearch","forward","tag","tagName","tagValue","lastAnnIndex","find","JBEI","fileString","xmlns","attrkey","tagNameProcessors","processors","stripPrefix","parsedJBEI","parsedSeq","parsedSeq2","parsedCompSeq","parsedCircular","complement","genbankStart","dnaComponentToPart","DnaComponent","displayId","dnaSequence","annotation","DnaSequence","SequenceAnnotation","bioStart","bioEnd","subComponent","annType","annId","sequenceToPart","Seq","seqOrig","elements","findDnaComponentNodes","acc","doc","nestedNode","findSequenceNodes","sbol","setTimeout","parsedSBOL","RDF","Collection","partList","component","nestedDnaComponent","validPart","dnaComponentAccumulator","attemptedParts","dnaSequenceAccumulator","sequenceNodes","first","elArr","ComponentDefinition","Sequence","sequenceAnnotation","ann","Range","seqID","xml_tag","partSeq","persistentIdentity","sbolV1","sbolV2","files","partsList","fileToParts","reader","FileReader","onload","fileOptions","endsWith","readAsArrayBuffer","readAsText","partLists","reduce","concat","firstLine","dnaCharLength","dnaOnlyFile","sourceName","path","sep","isBenchling","benchlingJSON","benchlingJSONKeys","every","parseSnapgene","parts","parseFASTA","then","parsedFasta","parseGenbank","parseSeqBuilder","parseBioBrick","parseBenchling","parseSBOL","parseJBEI","console","fetchBBB","lookupName","BBB","igemBackbones","warn","PSB1A3","PSB1C3","PSB1K3","PSB1T3","PSB1A7","PSB1AC3","PSB1AK3","PSB1AT3","BBA_K1362091","BBA_K823055","igem","localStorage","getItem","fetch","Request","catch","igemBackbone","setItem","rseq","rcut","fcut","AscI","AsiSI","FseI","NotI","PacI","PmeI","PspXI","SbfI","SfiI","SgrAI","SrfI","SwaI","BaeI","BbvCI","BspQI","CspCI","PpuMI","RsrII","SapI","SexAI","AatII","Acc65I","AccI","AclI","AcuI","AfeI","AflII","AflIII","AgeI","AhdI","AleI","AlwNI","ApaI","ApaLI","ApoI","AseI","AvaI","AvrII","BaeGI","BamHI","BanI","BanII","BbsI","BcgI","BciVI","BclI","BfuAI","BglI","BglII","BlpI","BmgBI","BmrI","BmtI","BpmI","Bpu10I","BpuEI","BsaAI","BsaBI","BsaHI","BsaI","BsaWI","BsaXI","BseRI","BseYI","BsgI","BsiEI","BsiHKAI","BsiWI","BsmBI","BsmI","BsoBI","Bsp1286I","BspDI","BspEI","BspHI","BspMI","BsrBI","BsrDI","BsrFI","BsrGI","BssHII","BssSI","BstAPI","BstBI","BstEII","BstXI","BstYI","BstZ17I","Bsu36I","BtgI","BtgZI","BtsI","ClaI","DraI","DraIII","DrdI","EaeI","EagI","EarI","EciI","Eco53kI","EcoNI","EcoO109I","EcoRI","EcoRV","Esp3I","FspI","HaeII","HincII","HindIII","HpaI","KasI","KpnI","MfeI","MluI","MmeI","MscI","MslI","MspA1I","NaeI","NarI","NcoI","NdeI","NgoMIV","NheI","NmeAIII","NruI","NsiI","NspI","PaeR7I","PciI","PflFI","PflMI","PluTI","PmlI","PshAI","PsiI","PspOMI","PstI","PvuI","PvuII","SacI","SacII","SalI","ScaI","SfcI","SfoI","SmaI","SmlI","SnaBI","SpeI","SphI","SspI","StuI","StyI","TspMI","Tth111I","XbaI","XcmI","XhoI","XmaI","XmnI","ZraI","AlwI","ApeKI","AvaII","BbvI","BccI","BceAI","BcoDI","BsmAI","BsmFI","BspCNI","BsrI","BstNI","BtsCI","BtsIMutI","DpnI","FauI","FokI","HgaI","HphI","Hpy99I","HpyAV","LpnPI","MboII","MlyI","NciI","PleI","PspGI","SfaNI","TfiI","TseI","Tsp45I","TspRI","AciI","AluI","BfaI","BsaJI","BslI","BstUI","Cac8I","CviAII","CviQI","DdeI","DpnII","FatI","Fnu4HI","HaeIII","HhaI","HinP1I","HinfI","HpaII","Hpy166II","Hpy188I","Hpy188III","HpyCH4III","HpyCH4IV","HpyCH4V","MboI","MluCI","MnlI","MseI","MspI","MwoI","NlaIII","NlaIV","RsaI","Sau3AI","Sau96I","ScrFI","StyD4I","TaqI","AbaSI","FspEI","MspJI","isEqual","prop","hasOwnProperty","cutSitesInRows","enzymeList","seqToCut","enzymes","cuts","findCutSites","recogStrand","recogStart","recogEnd","enzyme","seqToSearch","seqToCutLength","enzymeName","recogSeq","recogLength","nucAmbig","RegExp","test","regTest","cutSiteIndices","startIndex","cutEnzymes","recogComp","inverComp","fcutComp","rcutComp","uniqueCuts","sort","mismatch","compIndices","subject","searchWithMismatch","translatedQuery","regex","missed","targetChar","queryChar","CentralIndexContext","React","linear","setCentralIndex","displayName","defaultSelection","ref","clockwise","SelectionContext","WrappedComp","previousBase","fullSelectionLength","dragEvent","selectionStarted","shiftSelection","idToRange","Map","componentDidMount","document","addEventListener","stopDrag","componentWillUnmount","removeEventListener","resetCircleDragVars","inputRef","selectRange","set","removeMountedBlock","delete","mouseEvent","Circular","Linear","knownRange","currentTarget","element","selectionStart","selectionEnd","setSelection","linearSeqEvent","circularSeqEvent","selection","currBase","calculateBaseLinear","clockwiseDrag","shiftKey","currRef","calculateBaseCircular","selStart","lookahead","calcSelectionLength","increased","changeThreshold","change","abs","crossedZero","lengthChange","sameDirectionMove","check","sameDirectionDrag","fullSelection","hitFullSelection","bpsPerBlock","adjustedWidth","block","getBoundingClientRect","percFromLeft","clientX","left","bpsFromLeft","center","centralIndex","yDiff","distFromLeft","distFromTop","clientY","top","riseToRun","posInDeg","atan","PI","posInPerc","newSelection","getSelectedSequence","clock","base","this","onUnmount","withSelectionHandler","vectorSeq","vectorComp","findBindingSites","findMismatches","subVector","annealSequence","mismatches","remainingMismatches","matchLength","minTm","primerBindingSites","primer","sequenceLength","vectorSequence","vectorLength","expandedVectorSequence","matchSeq","combinedSequence","tailCrossZero","headCrossZero","crossZero","endIndex","matchTm","repeat","uniqMismatch","primerName","last","stackElements","seqL","sortedElements","insertIndex","findIndex","elems","newAcc","createMultiRows","rowLength","rowCount","newArr","createSingleRows","duplicateIdsAllowed","rowEnd","el","func","wait","timeout","immediate","context","args","arguments","later","apply","callNow","clearTimeout","clickedOnce","clickedTwice","window","handleKeyPress","setEventRouter","eventRouter","keyType","keypressMap","handleSeqInteraction","copyEvent","selectAllHotkey","handleCopy","newPos","selLength","formerFocus","activeElement","tempNode","createElement","innerText","body","appendChild","execCommand","remove","focus","handleTripleClick","resetClicked","debounce","handleMouseEvent","button","ctrlKey","ctxMenuClick","handleScrollEvent","delta","deltaY","newCentralIndex","rest","onKeyDown","onMouseMove","onWheel","role","contextType","withEventRouter","WrappedViewer","withEventHandler","Annotations","hoverAnnotation","opacity","getElementsByClassName","fillOpacity","radius","rowsToSkip","currBRadius","currTRadius","annStyle","strokeWidth","shapeRendering","cursor","strokeLinejoin","transparentPath","stroke","fill","labelStyle","Consumer","anns","calcBorderColor","SingleAnnotation","getRotation","generateArc","inlinedAnnotations","annLength","rotation","mid","bottomHalf","innerRadius","outerRadius","largeArc","sweepFWD","arrowFWD","arrowREV","namePath","circAnnID","onMouseOver","onMouseOut","onFocus","onBlur","dy","textAnchor","startOffset","dominantBaseline","xlinkHref","CutSites","calculateLinePath","startRadius","endRadius","findCoor","lineStart","lineEnd","displayCutSite","cutSite","cutSiteLength","topR","recogAreaPath","cutLinePath","connectorLinePath","hangLinePath","cutSiteStyle","lineStyle","CircularFind","createHighlight","resultLength","findPath","threshold","Index","ticks","indexInc","renderBasepairs","seqForCircular","compSeqForCircular","firstBase","lastBase","basepairsToRender","charAt","totalRows","showIndex","mostInwardElementRadius","nameSpans","nameIndex","nameYAdjust","nameCoor","tickCoorStart","tickCoorEnd","nameStyle","fontSize","fontWeight","indexCircleStyle","tickLineStyle","tickTextStyle","indexCurve","getDerivedStateFromProps","nextProps","increments","toPrecision","tickTolerance","WrappedGroupLabel","group","setHoveredGroup","calcRowWidth","row","CHAR_WIDTH","lastRow","labelRows","labels","nameWidth","maxCharPerRow","splitRegex","splitLabelNameRows","splitLabel","groupHeight","groupWidth","rectHeight","rectWidth","forkCoor","textCoor","linePath","lineCoor","groupCoor","rectCoor","onMouseLeave","i2","tabIndex","Labels","labelGroups","hoveredGroup","setState","hovered","fC","labelLines","grouped","onMouseEnter","prevState","groupOverlappingLabels","textRadius","labelsWithCoordinates","labelRow","annCenter","groupOverflows","nameLength","overflow","heightYPos","labelsGrouped","overlapIndex","leftNeighbor","rightNeighbor","newLabels","xDelta","yDelta","newTextCoor","firstName","restLength","Primers","hoverPrimer","Zoom","showPrimers","primerRows","SinglePrimer","primerStyle","primerLength","isInsert","CircularSelection","bottomR","lineTop","lineBottom","edgePath","sFlagF","lArc","selectPath","edgeStrokeWidth","edgeStyle","annotationsInRows","primersInRows","inlinedLabels","outerLabels","shouldComponentUpdate","rotate","rotatedIndex","lengthPerc","lengthPercCentered","radians","xAdjust","cos","yAdjust","sin","rotateCoor","coor","degrees","angle","xDiff","leftBottom","leftTop","rightBottom","rightTop","leftArrow","rightArrow","centralAngle","centralAngleDeg","lArrowC","rArrowC","sFlagR","general","primerRowsToSkip","plasmidId","onMouseDown","onMouseUp","selectionRows","bindingSites","cutSiteLabels","circumf","annNameLengthPixels","annLengthBases","withViewerHOCs","InfiniteScroll","handleScrollOrResize","componentDidUpdate","prevProps","snapshot","scroller","seqBlocks","visibleBlocks","scrollToCentralIndex","restoreSnapshot","getSnapshotBeforeUpdate","current","scrollTop","blockHeights","blockIndex","accumulatedY","blockY","totalHeight","clientHeight","scrollHeight","centerBlockIndex","newVisibleBlocks","centerBlock","topAdjust","bottom","total","insideDOM","parentTop","childTop","incrementScroller","incAmount","stopIncrementingScroller","timeoutID","handleMouseOver","buttons","scrollerBlock","percFromTop","scaledPerc","scaledScroll","firstRendered","spaceAbove","onScroll","AnnotationRows","annotationRows","findXAndWidth","seqBlockRef","fullSeq","elementHeight","AnnotationRow","hoverOtherAnnotationRows","renderAnnotation","origX","endFWD","endREV","overflowLeft","overflowRight","strokeColor","textProps","textRendering","cH","topLeft","topRight","bottomRight","bottomLeft","annotationPath","nameFits","gTranslate","hoverCutSite","on","zoom","cutSiteRows","sitesWithX","cutX","hangX","highlightX","highlightWidth","recogContiguous","sequenceCutSite","complementCutSite","getConnectorXAndWidth","connectorX","connectorWidth","strokeDasharray","genTicks","tickInc","tickIndexes","tickStyle","textStyle","leftDist","tickFromLeft","textFromLeft","digits","ceil","log10","textWidth","transTick","transText","axisStyle","searchRows","filteredRows","indexYDiff","compYDiff","listenerOnly","findProps","selReference","PrimerRow","renderPrimer","singlePrimer","characterWidth","charWidth","zoomed","primerUUID","primerOverflowLeft","primerOverflowRight","primerPart","crossZeroPre","crossZeroPost","lengthAdjust","mismatchPathes","mismatchStart","mismatchLength","mismatchOverflowLeft","mismatchOverflowRight","mismatchOverflow","characters","drawMismatches","mismatchRow","mismatchElement","mStart","mEnd","mismatchName","mismatchPath","mismatchEnd","overflowLeftAdjust","overflowRightAdjust","mNameLength","overflowNameAdjust","drawMismatch","primerPath","getMismatchX","overflowL","overflowR","textLength","PrimerRows","forwardPrimerRows","reversePrimerRows","primerRow","rowDiff","Edges","selectEdgeHeight","startEdge","lastEdge","secondEdgeX","rect","Block","selectHeight","secondBlock","secBlockX","secBlockWidth","TranslationRows","TranslationRow","AAs","genPath","multiplier","nW","wA","refStart","aaId","AAStart","AAEnd","textShow","bpCount","aaProps","textProps2","SeqBlock","firstIndex","lastIndex","multiBlock","seqTextSpan","bp","bpColorLookup","bpColors","blockHeight","showComplement","seqFontSize","svgProps","seqRange","forwardPrimerHeight","cutSiteYDiff","cutSiteHeight","indexHeight","compHeight","reversePrimerYDiff","reversePrimerHeight","translationYDiff","translationHeight","annYDiff","annHeight","indexRowYDiff","filteredSearchRows","Selection","Find","forwardPrimers","reversePrimers","arrSize","POSITIVE_INFINITY","ids","seqs","compSeqs","vetAnnotations","translationRows","spacingHeight","SeqViewer","nextState","linearProps","oneLine","circularProps","limitingDim","bpsOnArc","exp","log","sizeMe","monitorHeight","SeqViz","setPart","cut","externalToPart","parseAnnotations","filesToParts","onSearch","onSelection","viewer","viewers","Provider","baseURL","sequenceType","sequenceObject","textTransform","href","rel","Submission","_handleEditChange","_params","_handleSubmit","event","preventDefault","stopPropagation","submitJob","_staticOptions","_handleOptionChange","_handleStaticOptionChange","_updateSelection","selectedSequence","seqvizActive","repairMutation","silencePAM","submitError","sequenceError","fluid","EditsForm","fontFamily","borderRight","OrganismBox","SequenceBox","sequenceSearch","overflowY","toLocaleUpperCase","sele","metaKey","Component","ConnectedGene","connect","sequenceId","ed","allowGenomic","dispatch","ConnectedRegion","chromosome","src","logo","alt","TranscriptPlot","geneLength","exonData","exons","exon","exonStart","exonEnd","customComponent","positionInPixels","globalStyle","strokeStyle","transcripts","transcriptType","to","clinVarResults","handleClinVarSubmit","maxHeight","objType","textOverflow","symbol","variationSet","variationLoc","loc","chr","stop","assemblyName","canonicalSpdi","onClick","Tooltip","pointerEvents","changeAdvancedOption","initial","useState","open","setOpen","useToggleOpen","toggleOpen","aria-controls","aria-expanded","Collapse","in","invalid","editColumns","removeEdit","resetEditList","handleJobSubmit","parseImportFile","isParsing","keyField","idx","columns","formatter","cell","aria-label","float","aria-hidden","exportCSV","ignoreHeader","separator","baseProps","bootstrap4","bordered","striped","hover","rowClasses","dataField","csvType","csvProps","onExport","hidden","AdvancedOptions","Home","_handleOrganismChange","_geneSelector","getInstance","clear","clearSearchGenes","selectOrganism","showSelectedGene","_setCustomSequence","setCustomSequence","dnaSeqInvalid","_handleClinVarSearch","searchClinVar","clinVarQuery","_handleAddClinvar","clinvarId","repair","_handleSearch","searchGenes","_handleGeneSelect","_handleJobSubmit","_handleClinVarSubmit","submitClinVar","_parseImportFile","requestAddMultiple","lines","pasteSequence","organismsLoading","geneLoading","clinVarSearching","clinVar","selectRegion","LogoRow","clearButton","labelKey","filterBy","isLoading","placeholder","renderMenuItemChildren","onKeyPress","isInvalid","scaffolds","Feedback","minLength","useCache","ClinVarSelection","TranscriptList","SelectedEdits","ConnectedHome","requestSearchClinVar","jobStatus","ConnectedSummary","borderLeft","JobStatusBox","isDummyField","OligosBox","sm","oligos","spacer","extension","kind","NickingOligosBox","ExtensionOligosBox","editOptions","par","offTargetFormatter","onTargetFormatter","EPSILON","strandFormatter","spacerURL","Header","column","tooltip","pegRNASpacerPosition","visualSpacer","pegRNAExtensionPosition","pbsLength","rtTemplateLength","visualExtension","Job","selectedTab","pegRNAs","chosenEdit","visualSequence","chosenEditIndex","pegRNAColumns","headerFormatter","pamSilenced","seqvizPegRNAs","custom","ButtonGroup","EditBox","showAnnotations","marginBottom","Nav","activeKey","onSelect","Item","Link","eventKey","ConnectedJob","assembly","nickingOffset","offTargetColumns","alternateColumns","dummyField","splitAt","pbs","rtTemplate","first5","loopfirst","flip","looplast","last5","rtTemplateFragments","enableBackground","version","viewBox","xmlSpace","PegRNADetail","chosenPegRNA","offtargets","alternateExtensions","chosenPegRNAIndex","nickingRNA","nickingGRNASpacerPosition","Image","defaultSorted","order","ConnectedPegRNADetail","visualNicking","NickingDetail","chosenNicking","chosenNickingIndex","ConnectedNickingDetail","ConnectedTranscript","codingSequences","cds","CustomSequence","stateProps","dispatchProps","ownProps","download","NOT_FOUND","Routes","Route","NavItem","isActive","navLinks","App","Navbar","bg","fixed","item","marginTop","paddingTop","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bdb4536.chunk.js","sourcesContent":["/**\n * returns an object with sequence and complement sequence as strings\n *\n * Takes in a sequence \"seqInput\" and returns an object with fields\n * seq and compSeq (done because some input base pairs might not make\n * sense and should be filtered out)\n */\n\n// from http://arep.med.harvard.edu/labgc/adnan/projects/Utilities/revcomp.html\nconst DNAComplement = {\n  a: \"t\",\n  t: \"a\",\n  c: \"g\",\n  g: \"c\",\n  A: \"T\",\n  T: \"A\",\n  C: \"G\",\n  G: \"C\",\n  r: \"y\",\n  R: \"Y\",\n  y: \"r\",\n  Y: \"R\",\n  S: \"S\",\n  s: \"s\",\n  W: \"W\",\n  w: \"w\",\n  d: \"h\",\n  D: \"H\",\n  h: \"d\",\n  H: \"D\",\n  k: \"m\",\n  K: \"M\",\n  m: \"k\",\n  M: \"K\",\n  v: \"b\",\n  V: \"B\",\n  b: \"v\",\n  B: \"V\",\n  N: \"N\",\n  n: \"n\",\n  X: \"X\",\n  x: \"x\",\n  U: \"A\",\n  u: \"a\",\n  \"-\": \"-\",\n};\n\n/**\n * @typedef {Object} SeqReturn\n * @type {object}\n * @property {string} seq the template sequence\n * @property {string} compSeq the complement sequence\n */\n\n/**\n * return the filtered sequence and its complement\n * if its an empty string, return the same for both\n * @param  {string} origSeq the incoming sequence\n * @return {SeqReturn}         the resulting sequence and complement sequence\n */\nexport const dnaComplement = origSeq => {\n  if (!origSeq) {\n    return { seq: \"\", compSeq: \"\" };\n  }\n\n  // filter out unrecognized basepairs and build up the complement\n  let seq = \"\";\n  let compSeq = \"\";\n  for (let i = 0, origLength = origSeq.length; i < origLength; i += 1) {\n    if (DNAComplement[origSeq[i]]) {\n      seq += origSeq[i];\n      compSeq += DNAComplement[origSeq[i]];\n    }\n  }\n  return { seq, compSeq };\n};\n\n/**\n * Return the reverse complement of a DNA sequence\n *\n * @param {string}  seq the seq that we're interested in finding the reverse complement of\n * @return {string}     the reverse complement of the input\n */\nexport const reverseComplement = inputSeq => {\n  const { compSeq } = dnaComplement(inputSeq);\n  return compSeq\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n};\n\nexport const trimCarriageReturn = untrimmed =>\n  untrimmed.replace(/^[\\n\\r]+|[\\n\\r]+$/g, \"\");\n\nexport const extractDate = data => {\n  let date = Date.now();\n  data.forEach(other => {\n    if (Date.parse(other)) {\n      // it's a valid date... ie not NaN\n      date = Date.parse(other);\n    }\n  });\n  return date;\n};\n\nexport const firstElement = arr => {\n  if (!Array.isArray(arr)) return undefined;\n  return arr[0];\n};\n\nconst fwd = new Set([\"FWD\", \"FORWARD\", \"FOR\", \"1\", 1]);\nconst rev = new Set([\"REV\", \"REVERSE\", \"-1\", -1]);\n\n/**\n * Parse the user defined direction, estimate the direction of the element\n *\n * ```js\n * directionality(\"FWD\") => 1\n * directionality(\"FORWARD\") => 1\n * directionaltiy(\"NONSENSE\") => 0\n * ```\n *\n * @param {String} direction user defined direction for a SeqViz element\n */\nexport const directionality = direction => {\n  if (!direction) {\n    return 0;\n  }\n  if (fwd.has(direction)) {\n    return 1;\n  }\n  if (rev.has(direction)) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const partFactory = () => ({\n  name: \"\",\n  date: new Date().getTime(),\n  seq: \"\",\n  compSeq: \"\",\n  tags: [],\n  annotations: [],\n  primers: [],\n  cutSites: [],\n  note: \"\"\n});\n","import { colorByIndex, chooseRandomColor } from \"./colors\";\nimport { dnaComplement } from \"./parser\";\nimport randomid from \"./randomid\";\n\n/**\n * Map of nucleotide bases\n */\nexport const nucleotides = { a: \"a\", c: \"c\", t: \"t\", g: \"g\", u: \"u\" };\n\n/**\n * Map of common nucleotide wildcards to their translations\n */\nexport const nucleotideWildCards = {\n  y: { c: \"c\", t: \"t\" },\n  r: { a: \"a\", g: \"g\" },\n  w: { a: \"a\", t: \"t\" },\n  s: { g: \"g\", c: \"c\" },\n  k: { t: \"t\", g: \"g\" },\n  m: { c: \"c\", a: \"a\" },\n  d: { a: \"a\", g: \"g\", t: \"t\" },\n  v: { a: \"a\", c: \"c\", g: \"g\" },\n  h: { a: \"a\", c: \"c\", t: \"t\" },\n  b: { c: \"c\", g: \"g\", t: \"t\" },\n  x: { a: \"a\", c: \"c\", g: \"g\", t: \"t\" },\n  n: { a: \"a\", c: \"c\", g: \"g\", t: \"t\" }\n};\n\n/**\n * mapping the 64 standard codons to amino acids\n * no synth AA's\n *\n * adapted from: \"https://github.com/keithwhor/NtSeq/blob/master/lib/nt.js\n */\nconst codon2AA = {\n  AAA: \"K\",\n  AAT: \"N\",\n  AAG: \"K\",\n  AAC: \"N\",\n  ATA: \"I\",\n  ATT: \"I\",\n  ATG: \"M\",\n  ATC: \"I\",\n  AGA: \"R\",\n  AGT: \"S\",\n  AGG: \"R\",\n  AGC: \"S\",\n  ACA: \"T\",\n  ACT: \"T\",\n  ACG: \"T\",\n  ACC: \"T\",\n  TAA: \"$\",\n  TAT: \"Y\",\n  TAG: \"$\",\n  TAC: \"Y\",\n  TTA: \"L\",\n  TTT: \"F\",\n  TTG: \"L\",\n  TTC: \"F\",\n  TGA: \"$\",\n  TGT: \"C\",\n  TGG: \"W\",\n  TGC: \"C\",\n  TCA: \"S\",\n  TCT: \"S\",\n  TCG: \"S\",\n  TCC: \"S\",\n  GAA: \"E\",\n  GAT: \"D\",\n  GAG: \"E\",\n  GAC: \"D\",\n  GTA: \"V\",\n  GTT: \"V\",\n  GTG: \"V\",\n  GTC: \"V\",\n  GGA: \"G\",\n  GGT: \"G\",\n  GGG: \"G\",\n  GGC: \"G\",\n  GCA: \"A\",\n  GCT: \"A\",\n  GCG: \"A\",\n  GCC: \"A\",\n  CAA: \"Q\",\n  CAT: \"H\",\n  CAG: \"Q\",\n  CAC: \"H\",\n  CTA: \"L\",\n  CTT: \"L\",\n  CTG: \"L\",\n  CTC: \"L\",\n  CGA: \"R\",\n  CGT: \"R\",\n  CGG: \"R\",\n  CGC: \"R\",\n  CCA: \"P\",\n  CCT: \"P\",\n  CCG: \"P\",\n  CCC: \"P\"\n};\n\n/**\n * Translate common nucleotide wildcards\n *\n * Search string sequence for nucleotide wildcards\n * and replace with proper regex\n *\n * @param {String} query\n * @return {String} [/regex/]\n */\nexport const translateWildNucleotides = nucleotideSequence =>\n  nucleotideSequence\n    .toLowerCase()\n    .split(\"\")\n    .map(letter =>\n      nucleotideWildCards[letter]\n        ? `(${Object.keys(nucleotideWildCards[letter]).join(\"|\")})`\n        : letter\n    )\n    .join(\"\");\n\n/**\n * Find the mismatches\n * @param {string} sequence\n * @param {string} match: match sequence\n * @return {array} mismatches: array of indexes of mismatches\n */\nexport const getMismatchIndices = (sequence, match) =>\n  sequence\n    .split(\"\")\n    .map((nucleotide, i) => {\n      if (nucleotide !== match.split(\"\")[i]) {\n        return i;\n      }\n      return -1;\n    })\n    .filter(e => e !== -1);\n\n/**\n * Combine sequential indices into ranges\n * @param {array} indices\n * @return {array} array of ranges stored as arrays with start [0] and end [1]\n */\nexport const returnRanges = indices => {\n  let currStart = indices[0];\n  let currCount = indices[0] - 1;\n  const ranges = [];\n  indices.forEach((index, i) => {\n    if (index > currCount + 1) {\n      ranges.push([currStart, indices[i - 1]]);\n      currStart = index;\n      currCount = index - 1;\n    }\n    if (index === indices[indices.length - 1]) {\n      ranges.push([currStart, index]);\n    }\n    currCount += 1;\n  });\n  return ranges;\n};\n\n/**\n * Calculate the GC% of a sequence\n * @param {string} sequence\n */\nexport const calcGC = sequence => {\n  if (!sequence) {\n    return 0;\n  }\n  const gcCount = (sequence.match(/[CG]/gi) || []).length;\n  const gcPerc = (gcCount / sequence.length) * 100;\n\n  return parseFloat(gcPerc.toFixed(2));\n};\n\n/**\n * Calculate the melting temp for a given sequence\n * @param {string} sequence\n * @param {string} match: sequence to match against\n */\nexport const calcTm = (sequence, match = sequence) => {\n  const numberbps = sequence.length; // number of base pairs\n  const numbergcs = (sequence.match(/[CG]/gi) || []).length; // number of Gs and Cs\n  const numberats = (sequence.match(/[AT]/gi) || []).length; // number of As and Ts\n  const numbermismatches = getMismatchIndices(sequence, match).length; // # of mismatches\n  const gcpercent = calcGC(sequence);\n  // https://www.biophp.org/minitools/melting_temperature/demo.php?formula=basic\n  // formula valid for bps 0-14\n  if (numberbps < 14) {\n    return 2 * numberats + 4 * numbergcs;\n  }\n\n  // http://depts.washington.edu/bakerpg/primertemp/\n  // formula valid for bps  25-45, gc% > 40 and sequence terminates in one or more G/C\n  if (\n    numberbps > 24 &&\n    numberbps < 46 &&\n    gcpercent > 40 &&\n    sequence.slice(0, 1) in { G: \"G\", C: \"C\" }\n  ) {\n    return (\n      (100 / numberbps) *\n      (0.815 * numberbps + 0.41 * numbergcs - numbermismatches - 6.75)\n    );\n  }\n\n  // https://www.biophp.org/minitools/melting_temperature/demo.php?formula=basic\n  // generic formula for bps 14+ no mismatch\n  return Math.round(64.9 + (41 * (numbergcs - 16.4)) / numberbps);\n};\n\n/**\n * Calculate the length of a sequence\n * @param {number} start: start index of selection\n * @param {number} end: end index of selection\n * @param {number} seqLength: length of sequence\n */\nexport const calcLength = (start, end, seqLength) => {\n  if (end > start) return end - start;\n  if (end === start) return seqLength;\n  return seqLength - start + end;\n};\n\n/**\n * Reverses a string sequence\n * @param {string} sequence\n */\nexport const reverse = sequence =>\n  sequence\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n\n/**\n * an annotation generator\n */\nexport const annotationFactory = (annName, i = -1) => {\n  let color = chooseRandomColor();\n  if (i > -1) {\n    color = colorByIndex(i);\n  }\n\n  return {\n    id: randomid(),\n    color: color,\n    name: annName || \"Untitled\",\n    type: \"\",\n    start: 0,\n    end: 0,\n    direction: \"NONE\"\n  };\n};\n\nexport const primerFactory = () => ({\n  overhang: \"\",\n  name: \"\",\n  id: randomid(),\n  complementId: \"\",\n  gc: 0,\n  tm: 0,\n  any: 0,\n  dimer: 0,\n  hairpin: 0,\n  stability: 0,\n  penalty: 0,\n  vector: \"\",\n  sequence: \"\",\n  strict: false\n});\n\n/**\n * translateDNA\n *\n * given a sequence of DNA, translate it into an AMINO ACID sequence\n */\nexport const translateDNA = seqInput => {\n  const seq = seqInput.toUpperCase();\n  const seqLength = seq.length;\n  let aaSeq = \"\";\n  for (let i = 0, j = 0; i < seqLength; i += 3, j += 1) {\n    if (i + 2 < seqLength) {\n      aaSeq += codon2AA[seq[i] + seq[i + 1] + seq[i + 2]] || \"?\";\n    }\n  }\n  return aaSeq;\n};\n\n/**\n * createLinearTranslations\n *\n * a function used by SeqViewer/Circular to take a \"translation\", as it's stored\n * in the DB (just a start and end point referencing the part sequence) and convert\n * that into elements that are useful for the SeqBlocks\n *\n * the seqBlocks need, at a minimum, to know the direction of the translation, the\n * amino acids relevant to their seqBlock, and the start and end point of the translation\n *\n * the actual start and end point of the translation will usually differ from that in storage,\n * because not all basepairs within the start and end point might be used within the\n * actual translation. For example, if the user selects 5 bps and makes a translation,\n * only the first 3 will be used. so the actual start is 1 and the actual end is 3 (inclusive)\n */\nexport const createLinearTranslations = (translations, dnaSeq) => {\n  // elongate the original sequence to account for translations that cross the zero index\n  const dnaDoubled = dnaSeq + dnaSeq;\n  const minPos = Math.min(0, ...translations.map(t => t.start));\n  let offset = 0;\n  let offsetReturn = 0;\n  let startFrom = 0;\n\n  let AAIndex = translations[0].AAIndex || 0;\n\n  if (translations[0].upstream) {\n    dnaSeq = translations[0].upstream + dnaSeq;\n    offset = 3 - translations[0].upstream.length;\n    if(offset > 0){\n      AAIndex++;\n    }\n  }\n  const translation = translateDNA(\n    translations.map(t => dnaSeq.substring(t.start-minPos + ((minPos % 3 + 3) % 3), t.end-minPos)).join(\"\")\n  );\n  return translations.map((t, i) => {\n    let { start, end } = t;\n    start -= minPos;\n    end -= minPos;\n    let remaining = ((end - start) % 3) - offset;\n    let length = Math.floor((end - start) / 3);\n\n    if (remaining > 0) {\n      length++;\n    }\n    offsetReturn = offset;\n\n    if (offset > 0) {\n      startFrom--;\n      length++;\n    }\n    let AAseq = translation.substring(startFrom, startFrom + length);\n    let firstAAIndex = startFrom + AAIndex;\n    startFrom = startFrom + length;\n\n    offset = (3 - remaining) % 3;\n    return {\n      ...t,\n      id: randomid(),\n      AAseq: AAseq,\n      offset: offsetReturn,\n      remaining,\n      firstAAIndex\n    };\n  });\n\n  return translations.map(t => {\n    const { start, direction } = t;\n    let { end } = t;\n    if (start > end) end += dnaSeq.length;\n\n    // get the DNA sub sequence\n    const subDNASeq =\n      direction === 1\n        ? dnaDoubled.substring(start, end)\n        : dnaComplement(dnaDoubled.substring(start, end))\n            .compSeq.split(\"\")\n            .reverse()\n            .join(\"\"); // get reverse complement\n\n    // translate the DNA sub sequence\n    const AAseq =\n      direction === 1\n        ? translateDNA(subDNASeq)\n        : translateDNA(subDNASeq)\n            .split(\"\")\n            .reverse()\n            .join(\"\"); // translate\n\n    // the starting point for the translation, reading left to right (regardless of translation\n    // direction). this is later needed to calculate the number of bps needed in the first\n    // and last codons\n    const tStart = direction === 1 ? start : end - AAseq.length * 3;\n    let tEnd =\n      direction === 1\n        ? (start + AAseq.length * 3) % dnaSeq.length\n        : end % dnaSeq.length;\n\n    // treating one particular edge case where the start at zero doesn't make sense\n    if (tEnd === 0 && direction === -1) {\n      tEnd += dnaSeq.length;\n    }\n\n    return {\n      ...t,\n      start: tStart,\n      end: tEnd,\n      AAseq: AAseq\n    };\n  });\n};\n","/**\n * Source code for this parser comes from:\n * https://github.com/IsaacLuo/SnapGeneFileReader\n */\n\nimport { StringDecoder } from \"string_decoder\";\nimport bufferpack from \"bufferpack\";\nimport xml2js from \"xml2js\";\n\nimport { dnaComplement, partFactory } from \"../../utils/parser\";\nimport { annotationFactory } from \"../../utils/sequence\";\n\nexport default async (fileArrayBuffer, options) => {\n  const { fileName = \"\" } = options;\n  let offset = 0;\n  const read = (size, fmt) => {\n    const buffer = Buffer.from(fileArrayBuffer.slice(offset, size + offset));\n    offset += size;\n    if (fmt) {\n      const decoder = new StringDecoder(fmt);\n      return decoder.write(buffer);\n    }\n    return buffer;\n  };\n\n  const unpack = async (size, mode) => {\n    const buffer = read(size);\n    const unpacked = await bufferpack.unpack(`>${mode}`, buffer);\n    if (unpacked === undefined) return undefined;\n    return unpacked[0];\n  };\n\n  read(1); // read the first byte\n\n  // READ THE DOCUMENT PROPERTIES\n  const length = await unpack(4, \"I\");\n  const title = read(8, \"ascii\");\n  if (length !== 14 || title !== \"SnapGene\") {\n    throw new Error(\"wrong format for a SnapGene file\");\n  }\n  const data = {};\n  data.isDNA = await unpack(2, \"H\");\n  data.exportVersion = await unpack(2, \"H\");\n  data.importVersion = await unpack(2, \"H\");\n\n  /* eslint-disable no-await-in-loop */\n  while (offset <= fileArrayBuffer.byteLength) {\n    // # READ THE WHOLE FILE, BLOCK BY BLOCK, UNTIL THE END\n    const nextByte = read(1);\n\n    // # next_byte table\n    // # 0: dna sequence\n    // # 1: compressed DNA\n    // # 2: unknown\n    // # 3: unknown\n    // # 5: primers\n    // # 6: notes\n    // # 7: history tree\n    // # 8: additional sequence properties segment\n    // # 9: file Description\n    // # 10: features\n    // # 11: history node\n    // # 13: unknown\n    // # 16: alignable sequence\n    // # 17: alignable sequence\n    // # 18: sequence trace\n    // # 19: Uracil Positions\n    // # 20: custom DNA colors\n\n    const blockSize = await unpack(4, \"I\");\n    const ordOfNB = ord(nextByte);\n    if (ordOfNB === 0) {\n      //  # READ THE SEQUENCE AND ITS PROPERTIES\n      const props = await unpack(1, \"b\");\n      const binaryRep = dec2bin(props);\n\n      data.circular = isFirstBitA1(binaryRep);\n      const size = blockSize - 1;\n      if (size < 0) {\n        throw new Error(\"error parsing sequence data\");\n      }\n      data.seq = read(size, \"ascii\");\n      data.compSeq = dnaComplement(data.seq).compSeq;\n    } else if (ordOfNB === 6) {\n      //  # READ THE NOTES\n      const blockContent = read(blockSize, \"utf8\");\n      const notes = await editMD(blockContent);\n      data.notes = notes ? notes.description : \"\";\n    } else if (ordOfNB === 10) {\n      //  # READ THE FEATURES\n      const directionalityDict = {\n        undefined: \"NONE\",\n        \"0\": \"NONE\",\n        \"1\": 1,\n        \"2\": -1,\n        \"3\": \"BIDIRECTIONAL\"\n      };\n\n      const xml = read(blockSize, \"utf8\");\n      const b = await editMD(xml);\n      const { Features: { Feature = [] } = {} } = b;\n      data.annotations = [];\n      Feature.forEach(({ $: attrs, Segment = [] }) => {\n        let minStart = 0;\n        let maxEnd = 0;\n        if (Segment) {\n          Segment.forEach(({ $: seg }) => {\n            if (!seg) throw new Error(\"Invalid feature definition\");\n            const { range } = seg;\n            const [start, end] = range.split(\"-\");\n            minStart = minStart === 0 ? start : Math.min(minStart, start);\n            maxEnd = Math.max(maxEnd, end);\n          });\n        }\n        const { directionality } = attrs;\n        data.annotations.push({\n          ...annotationFactory(attrs.name),\n          name: attrs.name,\n          type: attrs.type,\n          direction: directionalityDict[directionality],\n          start: minStart - 1,\n          end: maxEnd - 1\n        });\n      });\n    } else {\n      // # UNKNOWN: WE IGNORE THE WHOLE BLOCK\n      read(blockSize);\n    }\n  }\n\n  return [\n    {\n      ...partFactory(),\n      ...data,\n      name: fileName.replace(\".dna\", \"\")\n    }\n  ];\n};\n\nconst ord = string => {\n  //  discuss at: http://locutus.io/php/ord/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: incidence\n  //   example 1: ord('K')\n  //   returns 1: 75\n  //   example 2: ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\n  //   returns 2: 65536\n\n  const str = string.toString();\n  const code = str.charCodeAt(0);\n  return code;\n};\n\nconst dec2bin = dec => (dec >>> 0).toString(2); // eslint-disable-line no-bitwise\n\nconst isFirstBitA1 = num =>\n  Number(\n    num\n      .toString()\n      .split(\"\")\n      .pop()\n  ) === 1;\n\nconst editMD = str =>\n  new Promise((resolve, reject) => {\n    xml2js.parseString(str, (err, result) => {\n      if (err) reject(err);\n      resolve(result);\n    });\n  });\n","module.exports = __webpack_public_path__ + \"static/media/logo.375bc3eb.png\";","/**\n * @typedef {COLORS}\n * @type {Array<String>}\n *\n * a color pallete of colors (for LinearSeq right now)\\\n * generated using:\n * https://material.io/color/#!/?view.left=0&view.right=0&primary.color=FFCC80\n */\nexport const COLORS = [\n  \"#9DEAED\", // cyan\n  \"#8FDE8C\", // green\n  \"#CFF283\", // light green\n  \"#8CDEBD\", // teal\n  \"#F0A3CE\", // pink\n  \"#F7C672\", // orange\n  \"#F07F7F\", // red\n  \"#FAA887\", // red-orange\n  \"#F099F7\", // magenta\n  \"#C59CFF\", // purple\n  \"#6B81FF\", // blue\n  \"#85A6FF\" // light blue\n];\n\nexport const COLOR_BORDER_MAP = {\n  \"#9DEAED\": \"#5EB5B8\", // cyan\n  \"#8FDE8C\": \"#5CA35A\", // green\n  \"#CFF283\": \"#8DB041\", // light green\n  \"#8CDEBD\": \"#4CA17F\", // teal\n  \"#F0A3CE\": \"#BD6295\", // pink\n  \"#F7C672\": \"#BD872B\", // orange\n  \"#F07F7F\": \"#AD4040\", // red\n  \"#FAA887\": \"#B36446\", // red-orange\n  \"#F099F7\": \"#AB63B0\", // magenta\n  \"#C59CFF\": \"#8A60C4\", // purple\n  \"#6B81FF\": \"#2E3B85\", // blue\n  \"#85A6FF\": \"#4C66AD\" // light blue\n};\n\nexport const INSERT_COLORS = [\n  \"#6bdbdc\", // insert 1\n  \"#a066c9\", // insert 2\n  \"#bbd44c\", // insert 3\n  \"#f3995b\" // insert 4\n];\n\n// color generator function\nexport const chooseRandomColor = (colors = []) => {\n  const choices = colors.length ? colors : COLORS;\n  const randIndex = Math.floor(Math.random() * choices.length);\n  return choices[randIndex];\n};\n\n/** get an \"indexed\" color from the colors array */\nexport const colorByIndex = i => COLORS[i % COLORS.length];\n\n/** get an \"indexed\" color from the colors array */\nexport const borderColorByIndex = i =>\n  COLOR_BORDER_MAP[COLORS[i % COLORS.length]];\n\n/** cache for input color to those 50% darker */\nconst darkerColorCache = {};\n\n/** darken a HEX color by 50% */\nexport const darkerColor = c => {\n  if (darkerColorCache[c]) {\n    return darkerColorCache[c];\n  }\n\n  const darkerColor = pSBC(-0.5, c);\n  darkerColorCache[c] = darkerColor;\n  return darkerColor;\n};\n\n// Version 4.0\n// from: https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)\nconst pSBC = (p, c0, c1, l) => {\n  let r,\n    g,\n    b,\n    P,\n    f,\n    t,\n    h,\n    i = parseInt,\n    m = Math.round,\n    a = typeof c1 == \"string\";\n\n  if (\n    typeof p !== \"number\" ||\n    p < -1 ||\n    p > 1 ||\n    typeof c0 !== \"string\" ||\n    (c0[0] !== \"r\" && c0[0] !== \"#\") ||\n    (c1 && !a)\n  ) {\n    return null;\n  }\n\n  const pSBCr = d => {\n    let n = d.length;\n    let x = {};\n    if (n > 9) {\n      [r, g, b, a] = d = d.split(\",\");\n      n = d.length;\n\n      if (n < 3 || n > 4) return null;\n\n      x.r = i(r[3] === \"a\" ? r.slice(5) : r.slice(4));\n      x.g = i(g);\n      x.b = i(b);\n      x.a = a ? parseFloat(a) : -1;\n    } else {\n      if (n === 8 || n === 6 || n < 4) return null;\n      if (n < 6) {\n        d =\n          \"#\" +\n          d[1] +\n          d[1] +\n          d[2] +\n          d[2] +\n          d[3] +\n          d[3] +\n          (n > 4 ? d[4] + d[4] : \"\");\n      }\n      d = i(d.slice(1), 16);\n\n      if (n === 9 || n === 5) {\n        x.r = (d >> 24) & 255;\n        x.g = (d >> 16) & 255;\n        x.b = (d >> 8) & 255;\n        x.a = m((d & 255) / 0.255) / 1000;\n      } else {\n        x.r = d >> 16;\n        x.g = (d >> 8) & 255;\n        x.b = d & 255;\n        x.a = -1;\n      }\n    }\n\n    return x;\n  };\n\n  h = c0.length > 9;\n  h = a ? (c1.length > 9 ? true : c1 === \"c\" ? !h : false) : h;\n  f = pSBCr(c0);\n  P = p < 0;\n  t =\n    c1 && c1 !== \"c\"\n      ? pSBCr(c1)\n      : P\n      ? { r: 0, g: 0, b: 0, a: -1 }\n      : { r: 255, g: 255, b: 255, a: -1 };\n  p = P ? p * -1 : p;\n  P = 1 - p;\n  if (!f || !t) return null;\n\n  if (l) {\n    r = m(P * f.r + p * t.r);\n    g = m(P * f.g + p * t.g);\n    b = m(P * f.b + p * t.b);\n  } else {\n    r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5);\n    g = m((P * f.g ** 2 + p * t.g ** 2) ** 0.5);\n    b = m((P * f.b ** 2 + p * t.b ** 2) ** 0.5);\n  }\n\n  a = f.a;\n  t = t.a;\n  f = a >= 0 || t >= 0;\n  a = f ? (a < 0 ? t : t < 0 ? a : a * P + t * p) : 0;\n\n  if (h) {\n    return (\n      \"rgb\" +\n      (f ? \"a(\" : \"(\") +\n      r +\n      \",\" +\n      g +\n      \",\" +\n      b +\n      (f ? \",\" + m(a * 1000) / 1000 : \"\") +\n      \")\"\n    );\n  } else {\n    return (\n      \"#\" +\n      (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0))\n        .toString(16)\n        .slice(1, f ? undefined : -2)\n    );\n  }\n};\n","/**\n * Create a random 7 digit string ID\n *\n * Lazily copied from StackOverflow: https://stackoverflow.com/a/57355127\n */\nexport default (n = 7) => {\n  const add = 1;\n  let max = 12 - add;\n  max = Math.pow(10, n + add);\n  const min = max / 10; // Math.pow(10, n) basically\n  const number = Math.floor(Math.random() * (max - min + 1)) + min;\n  return String(number).substring(add);\n};\n","import axios from 'axios';\n\nconst ROOT_URL = '/api';\n\nconst headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n  };\n\nconst get = (endpoint) => (\n    axios({\n        method: 'get',\n        headers,\n        url: `${ROOT_URL}/${endpoint}`\n    })\n);\n\nconst post = (endpoint, data) => (\n    axios({\n        method: 'post',\n        headers,\n        url: `${ROOT_URL}/${endpoint}`,\n        data: data\n    })\n);\n\nconst search = (endpoint, query) => {\n    let url = `${ROOT_URL}/${endpoint}`;\n    if(url.split('?').length - 1 ) {\n        url += `&search=${query}`\n    } else {\n        url += `?search=${query}`\n    }\n    return axios({\n        method: 'get',\n        url\n    })\n};\n\nexport { get, post, search }","import * as api from \"api\";\nimport { put, call } from 'redux-saga/effects'\n\nimport { store } from 'configureStore'\nimport {takeLatest} from \"@redux-saga/core/effects\";\n\n// Actions\nconst REQUESTED_ORGANISMS = 'pegit/state/organisms/REQUESTED_ORGANISMS';\nconst FETCH_ORGANISMS = 'pegit/state/organisms/FETCH_ORGANISMS';\nconst FETCH_ORGANISMS_SUCCEEDED = 'pegit/state/organisms/FETCH_ORGANISMS_SUCCEEDED';\nconst FETCH_ORGANISMS_FAILED = 'pegit/state/organisms/FETCH_ORGANISMS_FAILED';\n\n\n// Reducer\nconst INITIAL_STATE = {\n    values: [],\n    loading: false,\n    error: null,\n    selectedOrganism: null,\n};\n\n\nexport default function reducer(state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch (action.type) {\n\n        case FETCH_ORGANISMS:\n            return { ...state, values: [], loading: true, error };\n\n        case FETCH_ORGANISMS_SUCCEEDED:\n            return { ...state , values: action.organisms, loading: false, error };\n\n        case FETCH_ORGANISMS_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, values: [], error, loading: false };\n\n        default:\n            return state;\n    }\n}\n\n// Action creators\n\nconst requestOrganisms = () => ({ type: REQUESTED_ORGANISMS });\nconst fetchOrganisms = () => ({ type: FETCH_ORGANISMS });\nconst fetchOrganismsSuccess = (organisms) => ({ type: FETCH_ORGANISMS_SUCCEEDED, organisms});\nconst fetchOrganismsFailure = (error) => ({ type: FETCH_ORGANISMS_FAILED, error });\n\n// Side effects\n\nfunction * loadOrganisms () {\n    if (store.getState().organisms.values.length === 0) {\n        try {\n            yield put(fetchOrganisms());\n            const response = yield call(api.get, 'organisms');\n            yield put(fetchOrganismsSuccess(response.data.results));\n        } catch (error) {\n            yield put(fetchOrganismsFailure(error));\n        }\n    }\n}\n\nfunction* watchRequestOrganisms() {\n    yield takeLatest(REQUESTED_ORGANISMS, loadOrganisms)\n}\n\nexport { requestOrganisms, watchRequestOrganisms }","import *  as api from 'api'\nimport {call, put, takeLatest} from \"@redux-saga/core/effects\";\nimport { store } from \"configureStore\";\n\n// Actions\nconst REQUESTED_EDITS = 'prime_design/state/edits/REQUESTED_EDITS';\nconst FETCH_EDITS = 'prime_design/state/edits/FETCH_EDITS';\nconst FETCH_EDITS_SUCCEEDED = 'prime_design/state/edits/FETCH_EDITS_SUCCEEDED';\nconst FETCH_EDITS_FAILED = 'prime_design/state/edits/FETCH_EDITS_FAILED';\n\n// Reducer\nconst INITIAL_STATE = {\n    edits: [],\n    loading: false,\n    error: null,\n};\n\nexport default function reducer (state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch(action.type) {\n        case FETCH_EDITS:\n            return { ...state, edits: INITIAL_STATE.edits, loading: true, error: null };\n        case FETCH_EDITS_SUCCEEDED:\n            return { ...state, edits: action.edits, loading: false, error: null };\n        case FETCH_EDITS_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, edits: INITIAL_STATE.edits, error };\n        default:\n            return state;\n    }\n};\n// Action creators\nconst requestEdits = () => ({type: REQUESTED_EDITS});\nconst fetchEdits = () => ({type: FETCH_EDITS});\nconst fetchEditsSuccess = (edits) => ({type: FETCH_EDITS_SUCCEEDED, edits});\nconst fetchEditsFailure = (error) => ({type: FETCH_EDITS_FAILED, error});\n\n// Side effects\nfunction* loadEdits () {\n    if (store.getState().edits.edits.length === 0) {\n        try {\n            yield put(fetchEdits());\n            const response = yield call(api.get, 'edits/');\n            yield put(fetchEditsSuccess(response.data));\n        } catch (error) {\n            yield put(fetchEditsFailure(error));\n        }\n    }\n}\n\nfunction* watchRequestEdits() {\n    yield takeLatest(REQUESTED_EDITS, loadEdits)\n}\n\nexport { requestEdits, watchRequestEdits }","import * as api from \"api\";\nimport { put, call, takeLatest, takeEvery } from 'redux-saga/effects'\nimport {routeHome} from \"./routes\";\nimport { store } from \"configureStore\";\n\n// Actions\nconst SELECT_GENE = 'pegit/api/Genes/SELECT_GENE';\n\nconst SEARCH_GENES = 'pegit/api/home/SEARCH_GENES';\nconst SEARCH_GENES_SUCCEEDED = 'pegit/api/home/SEARCH_GENES_SUCCEEDED';\nconst SEARCH_GENES_FAILED = 'pegit/api/home/SEARCH_GENES_FAILED';\n\nconst SEARCH_CLINVAR = 'pegit/api/home/SEARCH_CLINVAR';\nconst SEARCH_CLINVAR_SUCCEEDED = 'pegit/api/home/SEARCH_CLINVAR_SUCCEEDED';\nconst SEARCH_CLINVAR_FAILED = 'pegit/api/home/SEARCH_CLINVAR_FAILED';\n\nconst CLEAR_SEARCH_GENES = 'pegit/home/CLEAR_GENES';\n\nconst SELECT_ORGANISM = 'pegit/home/SELECT_ORGANISM';\n\nconst REQUEST_ADD_EDIT = 'pegit/home/REQUEST_ADD_EDIT';\nconst ADD_EDIT = 'pegit/home/ADD_EDIT';\nconst ADD_EDIT_SUCCEEDED = 'pegit/home/ADD_EDIT_SUCCEEDED';\nconst ADD_EDIT_FAILED = 'pegit/home/ADD_EDIT_FAILED';\nconst REMOVE_EDIT = 'pegit/home/REMOVE_EDIT';\nconst RESET_EDIT_LIST = 'pegit/home/RESET_EDIT_LIST';\n\nconst REQUEST_ADD_MULTIPLE = 'pegit/home/REQUEST_ADD_MULTIPLE';\nconst ADD_MULTIPLE = 'pegit/home/ADD_MULTIPLE';\nconst ADD_MULTIPLE_SUCCEEDED = 'pegit/home/ADD_MULTIPLE_SUCCEEDED';\nconst ADD_MULTIPLE_FAILED = 'pegit/home/ADD_MULTIPLE_FAILED';\n\nconst REQUESTED_ADVANCED_OPTIONS = 'prime_design/state/edits/REQUESTED_ADVANCED_OPTIONS';\nconst FETCH_ADVANCED_OPTIONS = 'prime_design/state/edits/FETCH_ADVANCED_OPTIONS';\nconst FETCH_ADVANCED_OPTIONS_SUCCEEDED = 'prime_design/state/edits/FETCH_ADVANCED_OPTIONS_SUCCEEDED';\nconst FETCH_ADVANCED_OPTIONS_FAILED = 'prime_design/state/edits/FETCH_ADVANCED_OPTIONS_FAILED';\n\nconst CHANGE_ADVANCED_OPTION = 'pegit/home/CHANGE_ADVANCED_OPTION';\n\n\n// Reducer\nconst INITIAL_STATE = {\n    genes: {values: {}, loading: false, error: null},\n    selectedOrganism: undefined,\n    selectedGene: undefined,\n    clinvar: {results: [], searching: false, error: null},\n    edits: {validated: [], errors: []},\n    addEdit: {submitting: false, error: null},\n    advancedOptions: {\n        pbsMinLength: 13,\n        pbsMaxLength: 20,\n        rtMinLength: 10,\n        rtMaxLength: 34,\n        nickingRange: 100,\n        spacerSearchRange: 100,\n        productMinSize: 150,\n        productMaxSize: 300,\n        primerMinLength: 18,\n        primerMaxLength: 25,\n        primerOptLength: 22,\n        primerMinTm: 57,\n        primerMaxTm: 63,\n        primerOptTm: 60,\n        numPegs: 5,\n    }\n};\n\n\nexport default function reducer(state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch (action.type) {\n\n        case SELECT_GENE:\n            return { ...state, selectedGene: action.gene };\n\n        case SEARCH_GENES:\n            return { ...state, genes: { ...state.genes, loading: true, error: null  } };\n\n        case SEARCH_GENES_SUCCEEDED:\n            return { ...state, genes: { ...state.genes, values: { ...state.genes.values, [action.query]: action.genes }, loading: false, error: null } };\n\n        case SEARCH_GENES_FAILED:\n            error = action.error || { message: action.error.message };\n            return { ...state, genes: { ...state.genes, values: { ...state.genes.values, [action.query]: []}, loading: false, error } };\n\n        case SEARCH_CLINVAR:\n            return { ...state, clinvar: { ...state.clinvar, searching: true, error: null  } };\n\n        case SEARCH_CLINVAR_SUCCEEDED:\n            return { ...state, clinvar: { ...state.clinvar, results: action.results, searching: false, error: null } };\n\n        case SEARCH_CLINVAR_FAILED:\n            error = action.error || { message: action.error.message };\n            return { ...state, clinvar: { ...state.clinvar, results: [], searching: false, error } };\n\n        case CLEAR_SEARCH_GENES:\n            return { ...state, genes: INITIAL_STATE.genes };\n\n        case ADD_EDIT:\n        case ADD_MULTIPLE:\n            return { ...state, addEdit: {submitting: true, error: null} };\n\n        case ADD_EDIT_SUCCEEDED:\n            return { ...state, edits: {validated: [...state.edits.validated, action.edit]}, addEdit: { submitting: false, error: null }};\n\n        case ADD_EDIT_FAILED:\n            error = (action.error.response && action.error.response.status === 400) ? action.error.response.data.nonFieldErrors[0] : action.error.message;\n            return { ...state, addEdit: { submitting: false, error }};\n\n            case ADD_MULTIPLE_FAILED:\n            error = (action.error.response && action.error.response.status === 400) ? action.error.response.data.error : action.error.message;\n            alert(error);\n            return { ...state, addEdit: { submitting: false, error }};\n\n        case ADD_MULTIPLE_SUCCEEDED:\n            return { ...state, edits: {validated: action.edits, errors: action.errors}, addEdit: { submitting: false, error: null }};\n\n        case REMOVE_EDIT:\n            return { ...state, edits: {validated: state.edits.validated.filter((val, index) => index !== action.index)} };\n\n        case SELECT_ORGANISM:\n            return { ...state, selectedOrganism: state.edits.length > 0 ? state.selectedOrganism : action.organism };\n\n        case RESET_EDIT_LIST:\n            return { ...state, selectedOrganism: undefined, edits: {validated: [], errors: []} };\n\n        case FETCH_ADVANCED_OPTIONS_SUCCEEDED:\n            return { ...state, advancedOptions: action.options };\n\n        case CHANGE_ADVANCED_OPTION:\n            if(action.value === ''){return state}\n            return { ...state, advancedOptions: { ...state.advancedOptions, [action.option]: parseInt(action.value) } };\n\n        default:\n            return state;\n    }\n}\n\n// Action creators\nconst selectGene = (gene) => ({ type: SELECT_GENE, gene });\n\nconst searchGenes = (organism, query) => ({ type: SEARCH_GENES, organism, query });\nconst searchGenesSuccess = (genes, query) => ({ type: SEARCH_GENES_SUCCEEDED, genes, query});\nconst searchGenesFailure = (error, query) => ({ type: SEARCH_GENES_FAILED, error, query});\nconst clearSearchGenes = () => ({ type: CLEAR_SEARCH_GENES });\n\nconst requestSearchClinVar = (query) => ({ type: SEARCH_CLINVAR, query });\nconst searchClinVarSuccess = (results) => ({ type: SEARCH_CLINVAR_SUCCEEDED, results});\nconst searchClinVarFailure = (error) => ({ type: SEARCH_CLINVAR_FAILED, error});\n\nconst requestAddEdit = (edit) => ({type: REQUEST_ADD_EDIT, edit});\nconst addEdit = () => ({type: ADD_EDIT});\nconst addEditSuccess = (edit) => ({type: ADD_EDIT_SUCCEEDED, edit});\nconst addEditFailure = (error) => ({type: ADD_EDIT_FAILED, error});\nconst removeEdit = (index) => ({type: REMOVE_EDIT, index});\n\nconst selectOrganism = (organism) => ({ type: SELECT_ORGANISM, organism });\n\nconst resetEditList = () => ({ type: RESET_EDIT_LIST });\n\n\nconst requestAddMultiple = (edits) => ({type: REQUEST_ADD_MULTIPLE, edits});\nconst addMultiple = () => ({type: ADD_MULTIPLE});\nconst addMultipleSuccess = (edits, errors) => ({type: ADD_MULTIPLE_SUCCEEDED, edits, errors});\nconst addMultipleFailure = (error) => ({type: ADD_MULTIPLE_FAILED, error});\n\nconst changeAdvancedOption = (option, value) => ({type: CHANGE_ADVANCED_OPTION, option, value});\nconst requestAdvancedOptions = () => ({type: REQUESTED_ADVANCED_OPTIONS});\nconst fetchAdvancedOptions = () => ({type: FETCH_ADVANCED_OPTIONS});\nconst fetchAdvancedOptionsSuccess = (options) => ({type: FETCH_ADVANCED_OPTIONS_SUCCEEDED, options});\nconst fetchAdvancedOptionsFailure = (error) => ({type: FETCH_ADVANCED_OPTIONS_FAILED, error});// Side effects\n\n// Here we would do checks for existing data and load whatever we need for this view. Also manage\n// generic tasks such as showing/hiding loaders based on UI needs.\n\nfunction* geneSearch(action) {\n    let { organism, query } = action;\n    let route = 'genes/';\n    if(organism) {\n        route += '?organism=' + organism.id\n    }\n    try {\n        const response = yield call(api.search, route, query);\n        yield put(searchGenesSuccess(response.data, query));\n    } catch (error) {\n        yield put(searchGenesFailure(error, query));\n    }\n}\n\nfunction* watchSearchGenes() {\n    yield takeLatest(SEARCH_GENES, geneSearch);\n}\n\nfunction* clinVarSearch(action) {\n    try {\n        const response = yield call(api.post, 'clinvar/', { query: action.query });\n        yield put(searchClinVarSuccess(response.data.results))\n    } catch (error) {\n        yield put(searchClinVarFailure(error))\n    }\n\n}\n\nfunction* watchSearchClinVar() {\n    yield takeLatest(SEARCH_CLINVAR, clinVarSearch)\n}\n\nfunction* validateEditAndAdd (action) {\n    const { edit, changeRoute=true } = action;\n    const home = store.getState().home;\n    const organism = home.selectedOrganism.id;\n    const edits = home.edits;\n    yield put(addEdit());\n    const jsonEdit = JSON.stringify(edit);\n    const identical = obj => JSON.stringify(obj) === jsonEdit;\n    if (edits.validated.some(identical)){\n        yield put(addEditFailure({message: 'Edit already added'}))\n    } else {\n        if(!organism){\n            // ClinVar mode\n            yield put(addEditSuccess(edit))\n        } else {\n            // Regular mode\n            try {\n                yield call(api.post, 'edits/validate/', { ...edit, organism });\n                yield put(addEditSuccess(edit));\n                if(changeRoute) {\n                    yield put(routeHome());\n                }\n            } catch (error) {\n                yield put(addEditFailure(error));\n            }\n        }\n    }\n}\n\nfunction* watchRequestAddEdit () {\n    yield takeEvery(REQUEST_ADD_EDIT, validateEditAndAdd)\n}\n\nfunction* validateMultipleAndAdd (action) {\n    const organism = store.getState().home.selectedOrganism.id;\n    yield put(addMultiple());\n    if(!organism){\n        // ClinVar mode\n        try {\n            const response = yield call(api.post, 'clinvar/validate_list/', action.edits);\n            yield put(addMultipleSuccess(response.data.edits, response.data.errors));\n        } catch (error) {\n            yield put(addMultipleFailure(error));\n        }\n    } else {\n        // Regular mode\n        try {\n            const response = yield call(api.post, 'edits/validate_list/', { edits: action.edits, organism });\n            yield put(addMultipleSuccess(response.data.edits, response.data.errors));\n        } catch (error) {\n            yield put(addMultipleFailure(error));\n        }\n    }\n}\n\nfunction* watchRequestAddMultiple () {\n    yield takeEvery(REQUEST_ADD_MULTIPLE, validateMultipleAndAdd)\n}\n\nfunction* loadAdvancedOptions () {\n    yield put(fetchAdvancedOptions());\n    try {\n        const response = yield call(api.get, 'edits/advanced_options/');\n        yield put(fetchAdvancedOptionsSuccess(response.data));\n    } catch (error) {\n        yield put(fetchAdvancedOptionsFailure(error));\n    }\n}\n\nfunction* watchRequestAdvancedOptions () {\n    yield takeEvery(REQUESTED_ADVANCED_OPTIONS, loadAdvancedOptions)\n}\n\nexport { searchGenes, watchSearchGenes,\n    requestSearchClinVar, watchSearchClinVar,\n    selectGene, clearSearchGenes, selectOrganism,\n    removeEdit, resetEditList, watchRequestAddEdit, requestAddEdit, watchRequestAddMultiple, requestAddMultiple,\n    changeAdvancedOption, requestAdvancedOptions, watchRequestAdvancedOptions }","import { put } from \"@redux-saga/core/effects\";\n\nimport { routeHome } from \"./routes\";\nimport { store } from \"configureStore\";\n\n\n// Actions\nconst SET_CUSTOM_SEQUENCE = 'pegit/customsequence/SET_CUSTOM_SEQUENCE';\n\n// Reducer\nconst INITIAL_STATE = {\n    sequence: '',\n    name: '',\n    organism: '',\n};\n\nexport default function reducer (state = INITIAL_STATE, action) {\n\n    switch(action.type) {\n        case SET_CUSTOM_SEQUENCE:\n            return { ...state, sequence: action.sequence, name: action.name, organism: action.organism };\n        default:\n            return state;\n    }\n};\n// Action creators\nconst setCustomSequence = (name, sequence, organism) => ({ type: SET_CUSTOM_SEQUENCE, name, sequence, organism });\n\n// Side effects\nfunction* loadCustomSequence() {\n    const sequence = store.getState().customsequence.sequence;\n    if(!sequence.length){\n        yield put(routeHome())\n    }\n}\n\nexport { loadCustomSequence, setCustomSequence };","import *  as api from 'api'\nimport { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { store } from \"configureStore\";\n\nimport { requestEdits } from \"./edits\";\nimport { routeHome } from \"./routes\";\n\n// Actions\nconst REQUESTED_GENE = 'pegit/state/gene/REQUESTED_GENE';\nconst FETCH_GENE = 'pegit/state/gene/FETCH_GENE';\nconst FETCH_GENE_SUCCEEDED = 'pegit/state/gene/FETCH_GENE_SUCCEEDED';\nconst FETCH_GENE_FAILED = 'pegit/state/gene/FETCH_GENE_FAILED';\n\n// Reducer\nconst INITIAL_STATE = {\n    gene: {},\n    loading: false,\n    error: null,\n};\n\nexport default function reducer (state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch(action.type) {\n        case FETCH_GENE:\n            return { ...state, gene: {}, loading: true, error: null };\n        case FETCH_GENE_SUCCEEDED:\n            return { ...state, gene: action.gene, loading: false, error: null };\n        case FETCH_GENE_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, gene: INITIAL_STATE.gene, error };\n        default:\n            return state;\n    }\n};\n// Action creators\nconst requestGene = (id) => ({type: REQUESTED_GENE, id});\nconst fetchGene = (id) => ({type: FETCH_GENE, id});\nconst fetchGeneSuccess = (gene) => ({type: FETCH_GENE_SUCCEEDED, gene});\nconst fetchGeneFailure = (error) => ({type: FETCH_GENE_FAILED, error});\n\n// Side effects\nfunction* loadGene (action) {\n    const { id } = action;\n    if (store.getState().gene.gene.id !== id) {\n        yield put(fetchGene(id));\n        try {\n            const response = yield call(api.get, 'genes/' + id);\n            yield put(fetchGeneSuccess(response.data));\n        } catch (error) {\n            yield put(fetchGeneFailure(error));\n        }\n    }\n}\n\nfunction* loadRouteGene() {\n    const id = store.getState().location.payload.geneId;\n    const selectedOrganism = store.getState().home.selectedOrganism;\n\n    if(!selectedOrganism){\n        yield put(routeHome())\n    }\n    yield put(requestEdits());\n    yield put(requestGene(id));\n}\n\nfunction* watchRequestGene() {\n    yield takeLatest(REQUESTED_GENE, loadGene)\n}\n\nexport { requestGene, loadRouteGene, watchRequestGene };","import *  as api from 'api'\nimport { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { store } from \"configureStore\";\n\nimport { routeHome } from \"./routes\";\n\n// Actions\nconst REQUESTED_REGION = 'pegit/state/region/REQUESTED_REGION';\nconst FETCH_REGION = 'pegit/state/region/FETCH_REGION';\nconst FETCH_REGION_SUCCEEDED = 'pegit/state/region/FETCH_REGION_SUCCEEDED';\nconst FETCH_REGION_FAILED = 'pegit/state/region/FETCH_REGION_FAILED';\n\n// Reducer\nconst INITIAL_STATE = {\n    sequence: '',\n    loading: false,\n    error: null,\n};\n\nexport default function reducer (state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch(action.type) {\n        case FETCH_REGION:\n            return { ...state, sequence: '', loading: true, error: null };\n        case FETCH_REGION_SUCCEEDED:\n            return { ...state, sequence: action.sequence, loading: false, error: null };\n        case FETCH_REGION_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, loading: false, sequence: '', error };\n        default:\n            return state;\n    }\n};\n// Action creators\nconst requestRegion = (organismId, region) => ({type: REQUESTED_REGION, organismId, region});\nconst fetchRegion = () => ({type: FETCH_REGION});\nconst fetchRegionSuccess = (sequence) => ({type: FETCH_REGION_SUCCEEDED, sequence});\nconst fetchRegionFailure = (error) => ({type: FETCH_REGION_FAILED, error});\n\n// Side effects\nfunction* loadRegion (action) {\n    const { organismId, region } = action;\n    //if (store.getState().region.region.id !== id) {\n        yield put(fetchRegion());\n        try {\n            const response = yield call(api.get, 'organisms/' + organismId + '/region/' + region);\n            yield put(fetchRegionSuccess(response.data.sequence));\n        } catch (error) {\n            yield put(fetchRegionFailure(error));\n        }\n    //}\n}\n\nfunction* loadRouteRegion() {\n    const region = store.getState().location.payload.region;\n    const selectedOrganism = store.getState().home.selectedOrganism;\n\n    if(!selectedOrganism){\n        yield put(routeHome())\n    } else {\n        yield put(requestRegion(selectedOrganism.id, region));\n    }\n}\n\nfunction* watchRequestRegion() {\n    yield takeLatest(REQUESTED_REGION, loadRegion)\n}\n\nexport { requestRegion, loadRouteRegion, watchRequestRegion };","import *  as api from 'api'\nimport { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { store } from \"configureStore\";\n\nimport { routeHome } from \"./routes\";\n\n// Actions\nconst REQUESTED_TRANSCRIPT = 'prime_design/state/transcript/REQUESTED_TRANSCRIPT';\nconst FETCH_TRANSCRIPT = 'prime_design/state/transcript/FETCH_TRANSCRIPT';\nconst FETCH_TRANSCRIPT_SUCCEEDED = 'prime_design/state/transcript/FETCH_TRANSCRIPT_SUCCEEDED';\nconst FETCH_TRANSCRIPT_FAILED = 'prime_design/state/transcript/FETCH_TRANSCRIPT_FAILED';\n\n// Reducer\nconst INITIAL_STATE = {\n    transcript: {\n    },\n    loading: false,\n    error: null,\n};\n\nexport default function reducer (state = INITIAL_STATE, action) {\n    let error = null;\n\n    switch(action.type) {\n        case FETCH_TRANSCRIPT:\n            return { ...state, transcript: INITIAL_STATE.transcript, loading: true, error: null };\n        case FETCH_TRANSCRIPT_SUCCEEDED:\n            return { ...state, transcript: action.transcript, loading: false, error: null };\n        case FETCH_TRANSCRIPT_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, transcript: INITIAL_STATE.transcript, error };\n        default:\n            return state;\n    }\n};\n// Action creators\nconst requestTranscript = (id) => ({type: REQUESTED_TRANSCRIPT, id});\nconst fetchTranscript = (id) => ({type: FETCH_TRANSCRIPT, id});\nconst fetchTranscriptSuccess = (transcript) => ({type: FETCH_TRANSCRIPT_SUCCEEDED, transcript});\nconst fetchTranscriptFailure = (error) => ({type: FETCH_TRANSCRIPT_FAILED, error});\n\n// Side effects\nfunction* loadTranscript (action) {\n    const { id } = action;\n    if (store.getState().transcript.transcript.id !== id) {\n        try {\n            yield put(fetchTranscript(id));\n            const response = yield call(api.get, 'transcripts/' + id);\n            yield put(fetchTranscriptSuccess(response.data));\n        } catch (error) {\n            yield put(fetchTranscriptFailure(error));\n        }\n    }\n}\n\nfunction* loadRouteTranscript() {\n    const id = store.getState().location.payload.transcriptId;\n    const selectedOrganism = store.getState().home.selectedOrganism;\n\n    if(!selectedOrganism){\n        yield put(routeHome())\n    }\n    yield put(requestTranscript(id));\n}\n\nfunction* watchRequestTranscript() {\n    yield takeLatest(REQUESTED_TRANSCRIPT, loadTranscript)\n}\n\nexport { requestTranscript, loadRouteTranscript, watchRequestTranscript };","import *  as api from 'api'\nimport { call, put, takeLatest, delay } from \"@redux-saga/core/effects\";\nimport { routeJobSummary } from 'state/routes';\nimport { store } from \"configureStore\";\n\n// Actions\n\nconst REQUESTED_SUMMARY = 'pegit/state/job/REQUESTED_SUMMARY';\nconst REQUESTED_SUMMARY_SUCCEEDED = 'pegit/state/job/REQUESTED_SUMMARY_SUCCEEDED';\nconst REQUESTED_SUMMARY_FAILED = 'pegit/state/job/REQUESTED_SUMMARY_FAILED';\n\nconst ADD_QUEUE_POSITION = 'pegit/state/job/REQUESTED_QUEUE_POSITION';\n\nconst REQUESTED_DETAIL = 'pegit/state/job/REQUESTED_DETAIL';\nconst REQUESTED_DETAIL_SUCCEEDED = 'pegit/state/job/REQUESTED_DETAIL_SUCCEEDED';\nconst REQUESTED_DETAIL_FAILED = 'pegit/state/job/REQUESTED_DETAIL_FAILED';\n\nconst SUBMIT_JOB = 'pegit/state/gene/SUBMIT_JOB';\nconst SUBMIT_JOB_SUCCEEDED = 'pegit/state/gene/SUBMIT_JOB_SUCCEEDED';\nconst SUBMIT_JOB_FAILED = 'pegit/state/gene/SUBMIT_JOB_FAILED';\n\nconst SUBMIT_CLINVAR = 'pegit/state/gene/SUBMIT_CLINVAR';\nconst SUBMIT_CLINVAR_SUCCEEDED = 'pegit/state/gene/SUBMIT_CLINVAR_SUCCEEDED';\nconst SUBMIT_CLINVAR_FAILED = 'pegit/state/gene/SUBMIT_CLINVAR_FAILED';\n\n\n// Reducer\nconst INITIAL_STATE = {\n    summary: {},\n    detail: {},\n    loading: false,\n    error: null,\n    submitting: false,\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n\n    let error = null;\n    switch(action.type) {\n\n        case REQUESTED_SUMMARY:\n            return { ...state, loading: true, error: null, summary: state.summary.jobId === action.id ? state.summary : {} };\n\n        case REQUESTED_SUMMARY_SUCCEEDED:\n            return { ...state, summary: action.data, loading: false, error: null };\n\n        case REQUESTED_SUMMARY_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, summary: {jobId: action.id, status: error.response.statusText, warning: error.message}, loading: false, error };\n\n        case ADD_QUEUE_POSITION:\n            return { ...state, summary: { ...state.summary, queuePosition: action.position }, loading: false, error };\n\n\n        case REQUESTED_DETAIL:\n            return { ...state, loading: true, error: null, detail: state.summary.jobId === action.id ? state.detail : {} };\n\n        case REQUESTED_DETAIL_SUCCEEDED:\n            return { ...state, detail: action.data, loading: false, error: null };\n\n        case REQUESTED_DETAIL_FAILED:\n            error = action.error || {message: action.error.message };\n            return { ...state, detail: {jobId: action.id, status: error.response.statusText, warning: error.message}, loading: false, error };\n\n        case SUBMIT_JOB:\n        case SUBMIT_CLINVAR:\n            return { ...state, submitting: true, data: {}};\n\n        case SUBMIT_JOB_SUCCEEDED:\n        case SUBMIT_CLINVAR_SUCCEEDED:\n            return { ...state, submitting: false, data: {}};\n\n        case SUBMIT_JOB_FAILED:\n        case SUBMIT_CLINVAR_FAILED:\n            error = action.error.response.status === 400 ? action.error.response.data.nonFieldErrors[0] : action.error.response.statusText;\n            return { ...state, submitting: false, error, data: {}};\n\n        default:\n            return state;\n    }\n}\n\n// Action creators\nconst requestSummary = (id) => ({type: REQUESTED_SUMMARY, id});\nconst requestSummarySuccess = (data) => ({type: REQUESTED_SUMMARY_SUCCEEDED, data});\nconst requestSummaryFailure = (error, id) => ({type: REQUESTED_SUMMARY_FAILED, error, id});\n\n\nconst addQueuePosition = (position) => ({type: ADD_QUEUE_POSITION, position});\n\n\nconst requestDetail = (id, edit) => ({type: REQUESTED_DETAIL, id, edit});\nconst requestDetailSuccess = (data) => ({type: REQUESTED_DETAIL_SUCCEEDED, data});\nconst requestDetailFailure = (error, id) => ({type: REQUESTED_DETAIL_FAILED, error, id});\n\nconst submitJob = (jobData) => ({type: SUBMIT_JOB, jobData});\nconst submitJobSuccess = (job) => ({type: SUBMIT_JOB_SUCCEEDED, job});\nconst submitJobFailure = (error) => ({type: SUBMIT_JOB_FAILED, error});\n\nconst submitClinVar = (jobData) => ({type: SUBMIT_CLINVAR, jobData});\nconst submitClinVarSuccess = (job) => ({type: SUBMIT_CLINVAR_SUCCEEDED, job});\nconst submitClinVarFailure = (error) => ({type: SUBMIT_CLINVAR_FAILED, error});\n\n\n// Side effects\n\nfunction* loadSummary (id) {\n    let status = 'Queued';\n    while( !['Completed', 'Failed'].includes(status) && store.getState().location.payload.jobId === id) {\n        try {\n            yield put(requestSummary(id));\n            let response = yield call(api.get, 'jobs/' + id + '/');\n            yield put(requestSummarySuccess(response.data));\n\n            status = response.data.status;\n            if(status === 'Queued'){\n                response = yield call(api.get, 'jobs/' + id + '/queue_position');\n                yield put(addQueuePosition(response.data.position))\n            }\n        } catch(error) {\n            status = \"Failed\";\n            yield put(requestSummaryFailure(error, id));\n        }\n        yield delay(2500);\n    }\n}\n\nfunction* loadRouteSummary() {\n    const id = store.getState().location.payload.jobId;\n    yield loadSummary(id);\n}\n\nfunction* loadDetail (id, edit) {\n    let status = 'Queued';\n    while( !['Completed', 'Failed'].includes(status) && store.getState().location.payload.edit === edit) {\n        try {\n            yield put(requestSummary(id));\n            let response = yield call(api.get, 'jobs/' + id + '/');\n            yield put(requestSummarySuccess(response.data));\n            status = response.data.status;\n\n            yield put(requestDetail(id, edit));\n            response = yield call(api.get, 'jobs/' + id + '/' + edit);\n            yield put(requestDetailSuccess(response.data));\n\n        } catch(error) {\n            status = \"Failed\";\n            yield put(requestDetailFailure(error, id));\n        }\n        yield delay(2500);\n    }\n}\n\nfunction* loadRouteDetail() {\n    const id = store.getState().location.payload.jobId;\n    const edit = store.getState().location.payload.edit;\n    yield loadDetail(id, edit);\n}\n\nfunction* doSubmitJob (action) {\n    const { jobData } = action;\n    try {\n        const response = yield call(api.post, 'jobs/', jobData);\n        yield put(submitJobSuccess(response.data));\n        yield put(routeJobSummary(response.data.jobId));\n    } catch (error) {\n        yield put(submitJobFailure(error));\n    }\n}\n\nfunction* watchSubmitJob () {\n    yield takeLatest(SUBMIT_JOB, doSubmitJob)\n}\n\nfunction* doSubmitClinVar (action) {\n    const { jobData } = action;\n    try {\n        const response = yield call(api.post, 'jobs/clinvar/', jobData);\n        yield put(submitClinVarSuccess(response.data));\n        yield put(routeJobSummary(response.data.jobId));\n    } catch (error) {\n        yield put(submitClinVarFailure(error));\n    }\n}\n\nfunction* watchSubmitClinVar () {\n    yield takeLatest(SUBMIT_CLINVAR, doSubmitClinVar)\n}\n\nexport { submitJob, watchSubmitJob, loadRouteSummary, loadRouteDetail, watchSubmitClinVar, submitClinVar }","import {select, spawn, take, put} from 'redux-saga/effects'\nimport { connectRoutes } from 'redux-first-router'\n\nimport { requestOrganisms } from 'state/organisms'\nimport { requestEdits } from 'state/edits'\nimport { requestAdvancedOptions } from 'state/home'\nimport { loadCustomSequence } from \"state/customsequence\";\nimport { loadRouteGene } from 'state/gene'\nimport { loadRouteRegion } from 'state/region'\nimport { loadRouteTranscript } from \"state/transcript\";\nimport { loadRouteSummary, loadRouteDetail } from 'state/job'\n\n\n// Actions\nconst ROUTE_HOME = 'route/ROUTE_HOME';\nconst ROUTE_ABOUT = 'route/ROUTE_ABOUT';\nconst ROUTE_CONTACT = 'route/ROUTE_CONTACT';\nconst ROUTE_FAQ = 'route/ROUTE_FAQ';\nconst ROUTE_INSTRUCTIONS = 'route/ROUTE_INSTRUCTIONS';\n\nconst ROUTE_GENE = 'route/ROUTE_GENE';\nconst ROUTE_TRANSCRIPT = 'route/ROUTE_TRANSCRIPT';\nconst ROUTE_REGION = 'route/ROUTE_REGION';\nconst ROUTE_CUSTOMSEQUENCE = 'route/ROUTE_CUSTOMSEQUENCE';\n\nconst ROUTE_JOB_SUMMARY = 'route/ROUTE_JOB_SUMMARY';\nconst ROUTE_JOB_DETAIL = 'route/ROUTE_JOB_DETAIL';\nconst ROUTE_PEGRNADETAIL = 'route/ROUTE_PEGRNADETAIL';\nconst ROUTE_NICKINGDETAIL = 'route/ROUTE_NICKINGDETAIL';\n\n// Reducer\nconst routesMap = {\n  [ROUTE_HOME]: '/',\n  [ROUTE_ABOUT]: '/about',\n  [ROUTE_CONTACT]: '/contact',\n  [ROUTE_FAQ]: '/faq',\n  [ROUTE_INSTRUCTIONS]: '/instructions',\n  [ROUTE_GENE]: '/gene/:geneId',\n  [ROUTE_REGION]: '/region/:region',\n  [ROUTE_CUSTOMSEQUENCE]: '/customsequence/',\n  [ROUTE_TRANSCRIPT]: '/transcript/:transcriptId',\n  [ROUTE_JOB_SUMMARY]: '/job/:jobId',\n  [ROUTE_JOB_DETAIL]: '/job/:jobId/:edit',\n  [ROUTE_PEGRNADETAIL]: '/job/:jobId/:edit/:pegRNA',\n  [ROUTE_NICKINGDETAIL]: '/job/:jobId/:edit/:pegRNA/:nicking',\n};\n\nconst { reducer, middleware, enhancer } = connectRoutes(routesMap);\n\n\n// Action creators\nconst routeAbout = () => ({ type: ROUTE_ABOUT });\nconst routeContact = () => ({ type: ROUTE_CONTACT });\nconst routeFAQ = () => ({ type: ROUTE_FAQ });\nconst routeHome = () => ({ type: ROUTE_HOME });\nconst routeInstructions = () => ({ type: ROUTE_INSTRUCTIONS });\n\nconst routeCustomSequence = () => ({ type: ROUTE_CUSTOMSEQUENCE });\nconst routeGene = (geneId) => ({ type: ROUTE_GENE, payload: { geneId } });\nconst routeRegion = (region) => ({ type: ROUTE_REGION, payload: { region } });\nconst routeTranscript = (transcriptId) => ({ type: ROUTE_TRANSCRIPT, payload: { transcriptId } });\n\nconst routeJobSummary = (jobId) => ({ type: ROUTE_JOB_SUMMARY, payload: { jobId } });\nconst routeJobDetail = (jobId, edit) => ({ type: ROUTE_JOB_DETAIL, payload: { jobId, edit } });\nconst routePegRNADetail = (jobId, edit, pegRNA) => ({ type: ROUTE_PEGRNADETAIL, payload: { jobId, edit, pegRNA } });\nconst routeNickingDetail = (jobId, edit, pegRNA, nicking) => ({ type: ROUTE_NICKINGDETAIL, payload: { jobId, edit, pegRNA, nicking } });\n\n\n// Side effects\n\nconst routeType = state => state.location.type;\n\nconst sideEffectsRoutesMap = {\n    [ROUTE_GENE]: loadRouteGene,\n    [ROUTE_REGION]: loadRouteRegion,\n    [ROUTE_TRANSCRIPT]: loadRouteTranscript,\n    [ROUTE_CUSTOMSEQUENCE]: loadCustomSequence,\n    [ROUTE_JOB_SUMMARY]: loadRouteSummary,\n    [ROUTE_JOB_DETAIL]: loadRouteDetail,\n    [ROUTE_PEGRNADETAIL]: loadRouteDetail,\n    [ROUTE_NICKINGDETAIL]: loadRouteDetail,\n};\n\nfunction * routes () {\n  const initialRoute = yield select(routeType);\n  yield put(requestOrganisms());\n  yield put(requestEdits());\n  yield put(requestAdvancedOptions());\n  // Run saga in route map that matches initialRoute if exists\n  if (sideEffectsRoutesMap[initialRoute]) {\n    yield spawn(sideEffectsRoutesMap[initialRoute])\n  }\n  // Watch for future navigation events and run the correct saga if needed.\n  while (true) {\n    const {type} = yield take(Object.keys(sideEffectsRoutesMap));\n    yield spawn(sideEffectsRoutesMap[type])\n  }\n}\n\n\n// Exports\nexport {\n    middleware, enhancer, routes, routeType,\n    ROUTE_HOME, routeHome,\n    ROUTE_ABOUT, routeAbout,\n    ROUTE_CONTACT, routeContact,\n    ROUTE_FAQ, routeFAQ,\n    ROUTE_INSTRUCTIONS, routeInstructions,\n    ROUTE_CUSTOMSEQUENCE, routeCustomSequence,\n    ROUTE_REGION, routeRegion,\n    ROUTE_GENE, routeGene,\n    ROUTE_TRANSCRIPT, routeTranscript,\n    ROUTE_JOB_SUMMARY, routeJobSummary,\n    ROUTE_JOB_DETAIL, routeJobDetail,\n    ROUTE_PEGRNADETAIL, routePegRNADetail,\n    ROUTE_NICKINGDETAIL, routeNickingDetail,\n}\n\nexport default reducer;","import { combineReducers } from \"redux\";\n\nimport location from './routes'\nimport home from './home'\nimport organisms from './organisms'\nimport job from './job'\nimport edits from \"./edits\";\nimport gene from './gene'\nimport region from './region'\nimport transcript from \"./transcript\";\nimport customsequence from \"./customsequence\";\n\nconst rootReducer = combineReducers({\n    location,\n    home,\n    gene,\n    organisms,\n    job,\n    edits,\n    transcript,\n    customsequence,\n    region,\n});\n\nexport default rootReducer;","import { all, fork } from 'redux-saga/effects'\n\nimport { routes } from 'state/routes'\nimport { watchSearchGenes, watchSearchClinVar, watchRequestAddEdit, watchRequestAddMultiple, watchRequestAdvancedOptions } from \"state/home\";\nimport { watchSubmitJob, watchSubmitClinVar } from \"state/job\";\nimport { watchRequestGene } from \"state/gene\";\nimport { watchRequestRegion } from \"state/region\";\nimport { watchRequestTranscript } from \"state/transcript\";\nimport { watchRequestEdits } from \"state/edits\";\nimport { watchRequestOrganisms } from \"state/organisms\";\n\nexport default function * rootSaga () {\n  yield all([\n      fork(routes),\n      fork(watchSearchGenes),\n      fork(watchSearchClinVar),\n      fork(watchSubmitJob),\n      fork(watchSubmitClinVar),\n      fork(watchRequestGene),\n      fork(watchRequestRegion),\n      fork(watchRequestTranscript),\n      fork(watchRequestEdits),\n      fork(watchRequestOrganisms),\n      fork(watchRequestAddEdit),\n      fork(watchRequestAddMultiple),\n      fork(watchRequestAdvancedOptions),\n      ]\n  )\n}","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport { middleware as routesMiddleware, enhancer as routesEnhancer } from 'state/routes'\nimport rootReducer from 'state/rootReducer';\nimport rootSaga from \"state/sagas\";\n\n/*const logger = store => next => action => {\n    console.log('dispatching', action);\n    let result = next(action);\n    console.log('next state', store.getState());\n    return result\n};*/\n\nconst sagasMiddleware = createSagaMiddleware();\nconst composeMiddlewares = applyMiddleware(routesMiddleware, sagasMiddleware);\n\n\n// Use Redux DevTools Extension if available and not in production.\nconst composeEnhancers = ((process.env.NODE_ENV !== 'production') && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(routesEnhancer, composeMiddlewares)\n);\n\nsagasMiddleware.run(rootSaga);","import React from \"react\";\n\nimport './Loading.css'\nimport { Card } from \"react-bootstrap\";\n\nexport const Loading = props => {\n\n    const styles = {\n        beforeAfter: {\n            content: \"\",\n            display: 'inline-block',\n            width: props.size + 'px',\n            height: props.size + 'px',\n            borderRadius: '50%',\n            position: 'absolute',\n            margin: 0,\n            padding: 0,\n            boxSizing: 'border-box',\n        },\n        before: {\n            backgroundColor: props.colors[0],\n            transform: 'translateY(-200%)',\n            WebkitTransform: 'translateY(-200%)',\n            animation: 'animBefore 1s linear infinite',\n            WebkitAnimation: 'animBefore 1s linear infinite',\n            },\n        nucleotide: {\n            display: 'inline-block',\n            position: 'relative',\n            verticalAlign: 'middle',\n            //marginRight: '9px',\n            height: '100%',\n            lineHeight: '100%',\n        },\n        after: {\n            backgroundColor: props.colors[1],\n            transform: 'translateY(200%)',\n            WebkitTransform: 'translateY(200%)',\n            animation: 'animAfter 1s linear infinite',\n            WebkitAnimation: 'animAfter 1s linear infinite',\n        }\n    };\n\n    return <div\n            style={{ textAlign: 'center', verticalAlign: 'middle', lineHeight: '100%', display: 'inline-block', ...props.style}}>\n            { [...Array(props.count)].map((_, i) => (\n                <React.Fragment key={i}>\n                    <div style={{\n                        ...styles.beforeAfter,\n                        ...styles.before,\n                        animationDelay: - (i + 1) * 0.9 + 's',\n                    }}/>\n                    <div style={{\n                        ...styles.beforeAfter,\n                        ...styles.after,\n                        animationDelay: - (i + 1) * 0.9 + 's',\n                    }}/>\n                    <span style={{\n                        marginRight: props.size * 1.5 + 'px',\n                        ...styles.nucleotide,\n                    }} />\n                </React.Fragment>\n            ))}\n        </div>\n};\n\nLoading.defaultProps = {\n    count: 10,\n    colors: [\"#00F\", \"#777\"],\n    size: 6,\n};\n\n\nexport const LoadingCard = (props) => (\n    <Card>\n        <Card.Body style={{ textAlign: 'center', lineHeight: \"calc(200vh - 40px)\", height: \"200vh\", ...props.style }}>\n            <Loading size={props.size} />\n        </Card.Body>\n    </Card>\n);\n\n\n\nexport default Loading;","import React   from 'react';\n\nimport { Button, Form, Col, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { FaRegQuestionCircle } from 'react-icons/fa';\nimport ReactMarkdown from \"react-markdown\";\n\n\nexport default ({ edits, selectedEdit, editChange, optionChange, staticOptionChange, handleSubmit, canSubmit, isSubmitting, error }) => {\n\n    return <Form onSubmit={handleSubmit}>\n        <Form.Row className=\"justify-content-md-center\">\n            <Form.Group as={Col}>\n                <Form.Label>Edit {edits.length && <OverlayTrigger\n                        placement=\"right\"\n                        overlay={\n                            <Popover id=\"editTooltip1\">\n                                <Popover.Content>Click me for help</Popover.Content>\n                            </Popover>\n                        }\n                    >\n                        <span>\n                            <OverlayTrigger\n                                placement=\"right\"\n                                trigger=\"click\"\n                                overlay={\n                                    <Popover id=\"editTooltip2\">\n                                        <Popover.Title>{edits[selectedEdit].name.replace(/([A-Z])/g, \" $1\")}</Popover.Title>\n                                        <Popover.Content><ReactMarkdown\n                                            source={edits[selectedEdit].docstring}/></Popover.Content>\n                                    </Popover>\n                                }\n                            >\n                                <FaRegQuestionCircle/>\n                            </OverlayTrigger>\n                        </span>\n                    </OverlayTrigger>}\n                </Form.Label>\n                <Form.Control as=\"select\" onChange={editChange}>\n                    {edits.map((edit, index) => <option key={edit.name} disabled={edit.disabled}\n                                                        value={index}>{edit.name.replace(/([A-Z])/g, \" $1\")}</option>)}\n                </Form.Control>\n            </Form.Group>\n            {edits.length && Object.entries(edits[selectedEdit].options).map(([k, v]) => (\n                <Form.Group key={k} as={Col}>\n                    <Form.Label>{k}</Form.Label>\n                    { v.type === 'select' ?\n                        <Form.Control\n                            key={k + selectedEdit}\n                            onChange={(e) => (optionChange(k, e.target.value))}\n                            required={v.required}\n                            pattern={v.pattern}\n                            as={v.type}\n                        >\n                            <option disabled selected value>Select a tag</option>\n                            {v.pattern.map(option => <option key={option} value={option}>{option}</option>)}\n                        </Form.Control>\n                        :\n                    <Form.Control\n                        key={k + selectedEdit}\n                        onChange={(e) => (optionChange(k, e.target.value))}\n                        required={v.required}\n                        pattern={v.pattern}\n                        type={v.type}\n                    /> }\n                </Form.Group>\n            ))}\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\" style={{textAlign: 'center'}}>\n            <Col md={\"auto\"}>\n            <div>Repair mutation? <OverlayTrigger\n                    placement=\"right\"\n                    overlay={\n                        <Popover id=\"repairTooltip\">\n                            <Popover.Content>If checked, pegRNAs will be designed to revert the entered mutation to the reference sequence.</Popover.Content>\n                        </Popover>\n                    }\n                >\n                    <FaRegQuestionCircle/>\n                </OverlayTrigger>\n            </div>\n            <Form.Check\n                type=\"checkbox\"\n                onChange={(e) => (staticOptionChange('repairMutation', e.target.checked))}\n            />\n            </Col>\n            <Col md={2}/>\n            <Col md={\"auto\"} >\n                <div>Silence PAM? <OverlayTrigger\n                        placement=\"right\"\n                        overlay={\n                            <Popover id=\"repairTooltip\">\n                                <Popover.Content>\n                                    Method for silencing PAM if possible.<br/>\n                                    Changes in coding regions assumes reading frame of the wild type sequence<br/>\n                                    Relaxed: Allow all nucleotide changes outside coding regions. <br/>\n                                    Strict: Only allows changes inside coding regions.<br/>\n                                    Disabled: Do not try to silence PAM.\n                                </Popover.Content>\n                            </Popover>\n                        }\n                    >\n                        <FaRegQuestionCircle/>\n                    </OverlayTrigger>\n                </div>\n                <Form.Check type=\"radio\" inline label='Relaxed' value='relaxed' name='silencePAM' onChange={(e) => (staticOptionChange('silencePAM', e.target.value))}/>\n                <Form.Check type=\"radio\" inline label='Strict' value='strict' name='silencePAM' onChange={(e) => (staticOptionChange('silencePAM', e.target.value))}/>\n                <Form.Check type=\"radio\" inline label='Disabled' value={false} name='silencePAM' defaultChecked onChange={(e) => (staticOptionChange('silencePAM', e.target.value))}/>\n            </Col>\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\">\n            <Button variant=\"outline-success\"\n                    disabled={!canSubmit || isSubmitting}\n                    type=\"submit\"\n            >{isSubmitting ? 'Validating...' : 'Add to edit list'}</Button>\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\">\n            <p className=\"text-danger\">{error}</p>\n        </Form.Row>\n    </Form>\n}","import { partFactory, dnaComplement } from \"../../utils/parser\";\nimport randomid from \"../../utils/randomid\";\n\n/**\n * Benchling presents the easiest format to parse, because their JSON\n * format is very close to our own\n */\nexport default async text => {\n  // we've already checked, outside this file, that's it's JSON parseable\n  const partJSON = JSON.parse(text);\n\n  const { seq, compSeq } = dnaComplement(partJSON.bases);\n\n  // throw an error if the sequence is empty\n  if (seq.length < 1) {\n    return Promise.reject(new Error(\"Empty part sequence... invalid\"));\n  }\n\n  const part = {\n    ...partFactory(),\n    name: partJSON.name || partJSON._id,\n    date: new Date(partJSON.modifiedAt).getTime(),\n    seq: seq,\n    compSeq: compSeq,\n    annotations: partJSON.annotations.map(a => ({\n      ...a,\n      id: randomid(),\n      direction: a.strand === 0 ? 1 : a.strand === 1 ? -1 : \"NONE\"\n    }))\n  };\n\n  return [part];\n};\n","import xml2js from \"xml2js\";\n\nimport { dnaComplement, firstElement, partFactory } from \"../../utils/parser\";\nimport { annotationFactory } from \"../../utils/sequence\";\n\n/**\n * converts an XML part representation of a BioBrick part into a format\n * compatible with our DB representation of a part.\n *\n * with all the error handling this file reads like a Golang script\n *\n * an exmaple of the XML file that's parsed is in ./examples/biobrick\n */\nexport default async (file, options) =>\n  new Promise((resolve, reject) => {\n    const { backbone = \"\" } = options;\n    // util reject function that will be triggered if any fields fail\n    const rejectBioBrick = errType =>\n      reject(new Error(`Failed on BioBrick because ${errType}`));\n\n    // by default, all nodes are pushed to arrays, even if just a single child element\n    // is present in the XML\n    xml2js.parseString(file, {}, (err, response) => {\n      if (err) rejectBioBrick(`XML to JSON: ${err}`);\n\n      // get the first part\n      let part = firstElement(response.rsbpml.part_list);\n      if (!part || !part.part) rejectBioBrick(\"getting first part\");\n\n      // part is also an array... xml...\n      part = firstElement(part.part);\n      if (!part) rejectBioBrick(\"getting first part\");\n\n      // extract the userful fields\n      const { sequences, part_name, features: featureArray } = part;\n\n      // go another level...\n      const seq_data = firstElement(sequences);\n      if (!seq_data || !seq_data.seq_data) rejectBioBrick(\"getting seq_data\");\n\n      // go another level to get features...\n      let features = firstElement(featureArray);\n      if (features && \"feature\" in features) {\n        features = features.feature;\n      } else {\n        features = [];\n      }\n\n      let seq = firstElement(seq_data.seq_data);\n      if (backbone.backbone) {\n        seq += backbone.backbone;\n      }\n      const backboneName =\n        backbone.name && backbone.name.length < 20 ? backbone.name : \"\";\n      const name = `${firstElement(part_name)}-${backboneName}`;\n\n      if (!seq || !name) {\n        // assume it failed\n        rejectBioBrick(\"seq || name || featureArray\");\n      }\n\n      // parse the iGEM annotations\n      const annotations = features\n        .map((f, i) => {\n          if (!f) return null;\n\n          const { direction, startpos, endpos, type, title } = f;\n\n          return {\n            ...annotationFactory(\n              title[0] || `${direction[0]}-${startpos[0]}`,\n              i\n            ),\n            direction: direction[0] === \"forward\" ? 1 : -1,\n            start: +startpos[0] || 0,\n            end: +endpos[0] || 0,\n            name: title[0] || \"Untitled\",\n            type: type[0] || \"N/A\"\n          };\n        })\n        .filter(a => a);\n\n      // add another annotation for the backbone\n      annotations.push({\n        ...annotationFactory(backbone.name, annotations.length),\n        start: firstElement(seq_data.seq_data).length,\n        end: 0\n      });\n\n      const newPart = {\n        ...partFactory(),\n        ...dnaComplement(seq), // seq and compSeq\n        name: name,\n        annotations: annotations\n      };\n\n      resolve([newPart]);\n    });\n  });\n","export default async (text, fileName) => {\n  // partFactory returns a negative \"circular\" prop, we assume they're all linear\n\n  if (text.trim().startsWith(\">\")) {\n    return text\n      .split(\">\") // split up if it's a multi-seq FASTA file\n      .map(t => {\n        // this starts at the end of the first line, grabs all other characters,\n        // and removes any newlines (leaving only the original sequence)\n        // sequence \"cleaning\" happens in dnaComplement (we don't support bps other than\n        // the most common right now)\n        const seq = t.substr(t.indexOf(\"\\n\"), t.length).replace(/\\s/g, \"\");\n\n        // the first line contains the name, though there's lots of variability around\n        // the information on this line...\n        // >MCHU - Calmodulin - Human, rabbit, bovine, rat, and chicken\n        const name = t.substring(0, t.search(/\\n|\\|/)).replace(/\\//g, \"\");\n\n        return {\n          name,\n          seq\n        };\n      })\n      .filter(p => p.name && p.seq);\n  }\n  if (text.trim().startsWith(\";\")) {\n    // it's an old-school style FASTA that's punctuated with semi-colons\n    // ;my|NAME\n    // ;my comment\n    // actGacgata\n    const name = text.substring(0, text.search(/\\n|\\|/)).replace(/\\//g, \"\");\n    const newlineBeforeSeq = text.indexOf(\"\\n\", text.lastIndexOf(\";\"));\n    const seq = text.substring(newlineBeforeSeq, text.length);\n    return [\n      {\n        name,\n        seq\n      }\n    ];\n  }\n  // assume that it's a no name FASTA. Ie it's just a file with dna and no header\n  // try and get the name from the fileName\n  const lastChar = fileName.lastIndexOf(\".\") || fileName.length;\n  const name = fileName.substring(0, lastChar) || \"Untitled\";\n  const seq = text;\n  return [\n    {\n      name,\n      seq\n    }\n  ];\n};\n","import {\n  dnaComplement,\n  partFactory,\n  extractDate,\n  trimCarriageReturn\n} from \"../../utils/parser\";\nimport {\n  calcGC,\n  calcTm,\n  reverse,\n  annotationFactory,\n  primerFactory\n} from \"../../utils/sequence\";\n\n// a list of recognized types that would constitute an annotation name\nconst tagNameList = [\n  \"gene\",\n  \"product\",\n  \"note\",\n  \"db_xref\",\n  \"protein_id\",\n  \"label\",\n  \"lab_host\"\n];\n\n// a list of tags that could represent colors\nconst tagColorList = [\"ApEinfo_fwdcolor\", \"ApEinfo_revcolor\", \"loom_color\"];\n\n/**\n * takes in a string representation of a GenBank file and outputs our\n * part representation of it. an example of a Genbank file can be found\n * at ./parsers/Gebank, though there is significant variability to the\n * format\n *\n * another official example can be found at:\n * https://www.ncbi.nlm.nih.gov/Sitemap/samplerecord.html\n */\nexport default async (fileInput, fileName, colors = []) =>\n  fileInput\n    .split(/\\/\\/\\s/g)\n    .filter(f => f.length > 5)\n    .map(file => {\n      // the first row contains the name of the part and its creation date\n      // LOCUS       SCU49845     5028 bp    DNA             PLN       21-JUN-1999\n      const HEADER_ROW = file.substring(\n        file.indexOf(\"LOCUS\"),\n        file.search(/\\\\n|\\n/)\n      );\n      const [, name, ...headerRest] = HEADER_ROW.split(/\\s{2,}/g).filter(\n        h => h\n      );\n      // trying to avoid giving a stupid name like Exported which Snapgene has by default\n      // also, if there is not name in header, the seq length will be used as name, which should\n      // be corrected (Number.parseInt to check for this case) https://stackoverflow.com/a/175787/7541747\n\n      // +++++META DATA+++++//\n      let parsedName = name;\n      if (\n        (parsedName === \"Exported\" && file.includes(\"SnapGene\")) || // stupid Snapgene name\n        Number.parseInt(parsedName, 10) // it thinks seq-length is the name\n      ) {\n        // first try and get the name from ACCESSION\n        let accessionName = false;\n        if (file.includes(\"ACCESSION\")) {\n          // this will be undefined is there is no\n          const accession = file\n            .substring(\n              file.indexOf(\"ACCESSION\"),\n              file.indexOf(\"\\n\", file.indexOf(\"ACCESSION\"))\n            )\n            .replace(\".\", \"\")\n            .split(/\\s{2,}/)\n            .filter(a => a !== \"ACCESSION\")\n            .pop();\n          if (accession) {\n            parsedName = accession;\n            accessionName = true;\n          }\n        }\n\n        // otherwise, revert to trying to get the part name from the file name\n        if (!accessionName && fileName) {\n          parsedName = fileName\n            .substring(\n              0,\n              Math.max(fileName.search(/\\n|\\||\\./), fileName.lastIndexOf(\".\"))\n            )\n            .replace(/\\/\\s/g, \"\");\n        } else if (!accessionName) {\n          parsedName = \"Unnamed\"; // give up\n        }\n      }\n\n      const date = extractDate(headerRest);\n\n      // +++++SEQUENCE+++++//\n      // the part sequence is contained in and after the line that begins with ORIGIN\n      // do this before annotations so we can calc seqlength\n      //\n      // ORIGIN\n      //    1 gatcctccat atacaacggt atctccacct caggtttaga tctcaacaac ggaaccattg\n      //    61 ccgacatgag acagttaggt atcgtcgaga gttacaagct aaaacgagca gtagtcagct\n      const SEQ_ROWS = file.substring(\n        file.lastIndexOf(\"ORIGIN\") + \"ORIGIN\".length,\n        file.length\n      );\n      let seq = SEQ_ROWS.replace(/[^gatc]/gi, \"\");\n      let compSeq = \"\";\n      ({ seq, compSeq } = dnaComplement(seq)); // seq and compSeq\n\n      // +++++ANNOTATIONS+++++//\n      // the features are translated into annotations\n      // region is FEATURES thru ORIGIN\n      // FEATURES             Location/Qualifiers\n      //   source          1..5028\n      //                   /organism=\"Saccharomyces cerevisiae\"\n      //                   /db_xref=\"taxon:4932\"\n      //                   /chromosome=\"IX\"\n      //                   /map=\"9\"\n      //\n      // in the example above, source is the annotation \"type\" and name is \"taxon:4932\"\n      // because \"db_xref\" is a recognized name type\n      // the name depends on whether the tag type is in the reocgnized list of types\n      const annotations = [];\n      const primers = [];\n      if (file.indexOf(\"FEATURES\")) {\n        const FEATURES_LINE = file.indexOf(\"FEATURES\");\n        const FEATURES_NEW_LINE = file.indexOf(\"\\n\", FEATURES_LINE);\n        let ORIGIN_LINE = file.lastIndexOf(\"ORIGIN\");\n\n        // some files have a contig file line that needs to parsed out/ shouldn't be included in\n        // the features parsing\n        if (file.includes(\"CONTIG\")) {\n          ORIGIN_LINE = Math.min(ORIGIN_LINE, file.indexOf(\"CONTIG\"));\n        }\n        const FEATURES_ROWS = file\n          .substring(FEATURES_NEW_LINE, ORIGIN_LINE)\n          .split(/\\n/)\n          .filter(r => r);\n\n        // Currently interpreting a primer\n        let primerFlag = false;\n\n        FEATURES_ROWS.forEach((r, row_i) => {\n          // in the example above, the following converts it to ['source', '1..5028']\n          const currLine = r.split(/\\s{2,}/g).filter(l => l);\n          if (currLine.length > 1) {\n            // it's the beginning of a new feature/annotation\n            const [type, rangeString] = currLine;\n            const rangeRegex = /\\d+/g;\n            const direction = r.includes(\"complement\") ? -1 : 1;\n\n            // using the example above, this parses 1..5028 into 1 and 5028\n            let [start, end] = [0, 0];\n            const startSearch = rangeRegex.exec(rangeString);\n\n            if (startSearch) {\n              // the - 1 is because genbank is 1-based while we're 0\n              start = +startSearch[0] - (1 % seq.length);\n              const endSearch = rangeRegex.exec(rangeString);\n              if (endSearch) {\n                end = +endSearch[0] % seq.length;\n              }\n            }\n\n            // +++++PRIMERS+++++//\n            if (type === \"primer_bind\") {\n              primerFlag = true;\n              // create a new primer around the properties in this line\n              const forward = direction === 1;\n              primers.push({\n                ...primerFactory(),\n                gc: forward\n                  ? calcGC(seq.slice(start, end))\n                  : calcGC(compSeq.slice(start, end)),\n                tm: forward\n                  ? calcTm(seq.slice(start, end))\n                  : calcTm(compSeq.slice(start, end)),\n                vector: seq,\n                seq: forward\n                  ? seq.slice(start, end).trim()\n                  : reverse(compSeq.slice(start, end)).trim()\n              });\n            } else if (type !== \"source\") {\n              // source would just be an annotation for the entire sequence so remove\n              primerFlag = false;\n              // create a new annotation around the properties in this line (type and range)\n              annotations.push({\n                ...annotationFactory(`${type}-${start}`, row_i),\n                type,\n                start,\n                end,\n                direction\n              });\n            }\n          } else if (currLine.length === 1) {\n            // it's a continuation of a prior feature/annotation\n            // any updates (to name or color) to the last annotation should affect\n            // the last annotation that's in the array\n            let [tag] = currLine;\n            tag = tag.replace(/[/\"]/g, \"\"); // get rid of quotation marks and forward slaches\n            // should now look like ['organism', 'Saccharomyces cerevisiae']\n            const [tagName, tagValue] = tag.split(/=/);\n\n            // the two values that can be extracted are name or color\n            const lastAnnIndex = annotations.length - 1;\n            if (tagNameList.includes(tagName)) {\n              // it's key value pair where the key is something we recognize as an annotation name\n              if (\n                lastAnnIndex > -1 &&\n                annotations[annotations.length - 1].name === \"Untitled\" &&\n                !primerFlag\n              ) {\n                // defensively check that there isn't already a defined annotation w/o a name\n                annotations[annotations.length - 1].name = trimCarriageReturn(\n                  tagValue\n                );\n              } else if (\n                primerFlag &&\n                primers[primers.length - 1].name === \"\"\n              ) {\n                primers[primers.length - 1].name = trimCarriageReturn(tagValue);\n              }\n            } else if (tagColorList.includes(tagName)) {\n              // it's key value pair where the key is something we recognize as an annotation color\n              if (lastAnnIndex > -1) {\n                // defensively check that there's already been a defined annotation\n                annotations[annotations.length - 1].color = tagValue;\n              }\n            } else if (tagName === \"loom_primer_sequence\") {\n              // Loom specific tag used to preserve mismatches\n              if (primerFlag) {\n                primers[primers.length - 1].sequence = tagValue;\n              }\n            }\n          }\n        });\n      }\n\n      // try to figure out whether the part is linear or circular\n      // hints for a part being circular include:\n      // circular in the header row\n      // annotations that cross zero index\n      // words like circular within the circular row\n      // words like plasmid within the text/name\n      let circular = false;\n      if (\n        annotations.find(a => !(a.end === 0 && a.start) && a.start > a.end) ||\n        HEADER_ROW.includes(\"circular\")\n      ) {\n        circular = true;\n      }\n\n      parsedName = trimCarriageReturn(parsedName);\n\n      return {\n        ...partFactory(),\n        name: parsedName || fileName,\n        date: date,\n        seq: seq,\n        compSeq: compSeq,\n        annotations: annotations,\n        primers: primers,\n        circular: circular\n      };\n    });\n","import xml2js, { processors } from \"xml2js\";\n\nimport { colorByIndex } from \"../../utils/colors\";\nimport { dnaComplement, partFactory } from \"../../utils/parser\";\nimport randomid from \"../../utils/randomid\";\n\n/**\n * takes an JBEI file, as a string, and converts it into our DB\n * representation of a part(s). an example of this type of file can be\n * found in ../examples/jbei\n */\nexport default async (JBEI, colors = []) =>\n  new Promise((resolve, reject) => {\n    // util reject function that will be triggered if any fields fail\n    const rejectJBEI = errType =>\n      reject(new Error(`Failed on JBEI file; ${errType}`));\n\n    // weird edge case with directed quotation characters\n    const fileString = JBEI.replace(/“|”/g, '\"');\n\n    xml2js.parseString(\n      fileString,\n      {\n        xmlns: true,\n        attrkey: \"xml_tag\",\n        tagNameProcessors: [processors.stripPrefix]\n      },\n      (err, parsedJBEI) => {\n        if (err) rejectJBEI(err);\n\n        // destructure the paramaeters from JBEI\n        const { seq } = parsedJBEI;\n        const { name, sequence, features, circular } = seq;\n\n        // attempt to get the name out of the JBEI\n        let parsedName = \"Unnamed\";\n        if (name && name[0] && name[0]._) {\n          parsedName = name[0]._;\n        }\n\n        // attempt to get the sequence. fail if it's not findable\n        let parsedSeq = \"\";\n        if (sequence && sequence[0] && sequence[0]._) {\n          parsedSeq = sequence[0]._;\n        }\n        const { seq: parsedSeq2, compSeq: parsedCompSeq } = dnaComplement(\n          parsedSeq\n        ); // seq and compSeq\n        if (!parsedSeq2) return null;\n\n        // attempt to figure out whether it's circular or linear. if circular\n        // isn't a valid root level field, guess whether it's circular based\n        // on length\n        // https://www.researchgate.net/post/What_is_the_smallest_plasmid_vector_available\n        let parsedCircular = parsedSeq2.length > 2000; // smallest plasmid is around 2k, see link above\n        if (circular && circular[0] && circular[0]._) {\n          parsedCircular = circular[0]._ === \"true\";\n        }\n\n        // attempt to parse the JBEI annotations into our version of annotations\n        const annotations = [];\n        if (features && features[0] && features[0].feature) {\n          features[0].feature.forEach((feature, i) => {\n            if (!feature) return;\n\n            const {\n              label = [{}],\n              type = [{}],\n              complement = [{}],\n              location = []\n            } = feature;\n            if (\n              location &&\n              location[0] &&\n              location[0].genbankStart &&\n              location[0].end\n            ) {\n              annotations.push({\n                id: randomid(),\n                color: colorByIndex(i),\n                start: +location[0].genbankStart[0]._ - 1 || 0, // JBEI is 1-based\n                end: +location[0].end[0]._ || 0,\n                direction: complement[0]._ === \"true\" ? -1 : 1,\n                type: type[0]._ || \"N/A\",\n                name: label[0]._ || \"Untitled\"\n              });\n            }\n          });\n        }\n\n        resolve([\n          {\n            ...partFactory(),\n            seq: parsedSeq2,\n            compSeq: parsedCompSeq,\n            name: parsedName,\n            annotations: annotations,\n            circular: parsedCircular,\n            source: fileString\n          }\n        ]);\n      }\n    );\n  });\n","import xml2js, { processors } from \"xml2js\";\n\nimport { colorByIndex } from \"../../utils/colors\";\nimport { dnaComplement, partFactory } from \"../../utils/parser\";\nimport randomid from \"../../utils/randomid\";\n\n/*\n  <sbol:Sequence rdf:about=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence/1\">\n    <sbol:persistentIdentity rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence\"/>\n    <sbol:displayId>A1_sequence</sbol:displayId>\n    <sbol:version>1</sbol:version>\n    <prov:wasDerivedFrom rdf:resource=\"https://github.com/CIDARLAB/cello/blob/master/resources/UCF/Eco1C1G1T0.UCF.json\"/>\n    <prov:wasGeneratedBy rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/cello2sbol/1\"/>\n    <dcterms:title>A1_sequence</dcterms:title>\n    <sbh:ownedBy rdf:resource=\"https://synbiohub.cidarlab.org/user/prash\"/>\n    <sbh:topLevel rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence/1\"/>\n    <sbol:elements>AATGTTCCCTAATAATCAGCAAAGAGGTTACTAG</sbol:elements>\n    <sbol:encoding rdf:resource=\"http://www.chem.qmul.ac.uk/iubmb/misc/naseq.html\"/>\n  </sbol:Sequence>\n*/\n\n/**\n * after getting a DnaComponent out of the SBOL document,\n * at either the root RDF level or from within a Collection/Annotation\n * heirarchy, convert that DnaComponent to a part\n *\n * @param {boolean}  strict  if we're digging through the SBOL, desperate to\n * \t\t\t\t\t\t\t find something that looks remotely like a valid part\n * \t\t\t\t\t\t\t (ie, after we can't make a valid part from root DnaComponent\n * \t\t\t\t\t\t\t or root Collection), we will only accept parts that have both\n * \t\t\t\t\t\t\t name and sequence information. Otherwise we might get too\n * \t\t\t\t\t\t\t desperate and wind up with some oddly malformed parts\n */\nconst dnaComponentToPart = (DnaComponent, options) => {\n  const { strict = false, file } = options;\n  // destructure the paramaeters from DnaComponent\n  const { name, displayId, dnaSequence, annotation } = DnaComponent;\n\n  // attempt to get the name out of the SBOL\n  let parsedName = \"Unnamed\";\n  if (name && name[0] && name[0]._) {\n    parsedName = name[0]._;\n  } else if (displayId && displayId[0] && displayId[0]._) {\n    parsedName = displayId[0]._;\n  } else if (strict) {\n    // in this scenario, we're really scrapping to find parts, but shouldn't\n    // accept any that don't at least have some name and sequence information\n    return null;\n  }\n\n  // attempt to get the sequence. fail if it's not findable\n  let seq = \"\";\n  if (dnaSequence && dnaSequence[0] && dnaSequence[0].DnaSequence) {\n    const { DnaSequence } = dnaSequence[0];\n    if (\n      DnaSequence[0] &&\n      DnaSequence[0].nucleotides &&\n      DnaSequence[0].nucleotides[0] &&\n      DnaSequence[0].nucleotides[0]._\n    ) {\n      seq = DnaSequence[0].nucleotides[0]._;\n    }\n  }\n  const { seq: parsedSeq, compSeq: parsedCompSeq } = dnaComplement(seq); // seq and compSeq\n  if (!parsedSeq) return null;\n\n  // attempt to parse the SBOL annotations into our version of annotations\n  const annotations = [];\n  if (annotation) {\n    annotation.forEach(({ SequenceAnnotation }, i) => {\n      if (!SequenceAnnotation || !SequenceAnnotation[0]) return;\n\n      const {\n        bioStart = [{}],\n        bioEnd = [{}],\n        strand,\n        subComponent\n      } = SequenceAnnotation[0];\n      if (\n        subComponent &&\n        subComponent[0] &&\n        subComponent[0].DnaComponent &&\n        subComponent[0].DnaComponent[0]\n      ) {\n        const {\n          type: annType = [{}],\n          displayId: annId = [{}],\n          name: annName = [{}]\n        } = subComponent[0].DnaComponent[0];\n\n        annotations.push({\n          id: randomid(),\n          color: colorByIndex(i),\n          start: bioStart[0]._ - 1 || 0, // sbol is 1-based\n          end: bioEnd[0]._ || 0, // we're 0-based\n          direction: strand[0]._ === \"+\" ? 1 : -1,\n          type: annType[0]._ || \"N/A\",\n          name: annName[0]._ || annId[0]._ || \"Untitled\"\n        });\n      }\n    });\n  }\n\n  // guess whether it's circular or not based on the presence of a word like vector.\n  // very ad hoc\n  const circular = file.search(/plasmid/i) > 0;\n\n  return {\n    ...partFactory(),\n    seq: parsedSeq,\n    compSeq: parsedCompSeq,\n    name: parsedName,\n    annotations: annotations,\n    circular: circular\n  };\n};\n\n/**\n * find all nodes that of the type Sequence, and convert those to parts \"Sequence\" -> Part\n *\n * @param {String}  file    the original file that was used to make the parts\n * this is not the standard format. see A1.xml\n */\nconst sequenceToPart = (Seq, file) => {\n  // get the name\n  const name =\n    (Seq.displayId[0] && Seq.displayId[0]._) ||\n    (Seq.title[0] && Seq.title[0]._) ||\n    \"Unnamed\";\n\n  // get the sequence\n  const seqOrig = (Seq.elements[0] && Seq.elements[0]._) || \"\";\n\n  const { seq, compSeq } = dnaComplement(seqOrig);\n\n  // guess whether it's circular or not based on the presence of a word like vector.\n  // very ad hoc\n  const circular = file.search(/plasmid/i) > 0;\n\n  return { ...partFactory(), name, seq, compSeq, circular };\n};\n\n/**\n * find all the nodes within the SBOL JSON document that are keyed \"DnaComponent\"\n *\n * this is a last-resort scrapper that tries to find valid parts that aren't within a root\n * DnaComponent document or within a root Collection array\n */\nconst findDnaComponentNodes = (acc, doc) => {\n  Object.keys(doc).forEach(k => {\n    if (k === \"DnaComponent\" && doc[k].length) acc.push(...doc[k]);\n    if (Array.isArray(doc[k])) {\n      doc[k].forEach(nestedNode => {\n        findDnaComponentNodes(acc, nestedNode);\n      });\n    }\n  });\n};\n\n/**\n * find all the nodes within the JSON document that are keyed \"Sequence\"\n *\n * this is another last-resort scrapper for trying to find valid parts\n */\nconst findSequenceNodes = (acc, doc) => {\n  Object.keys(doc).forEach(k => {\n    if (k === \"Sequence\" && doc[k].length) acc.push(...doc[k]);\n    if (Array.isArray(doc[k])) {\n      doc[k].forEach(nestedNode => {\n        findSequenceNodes(acc, nestedNode);\n      });\n    }\n  });\n};\n\n/**\n * takes an SBOL file, as a string, and converts it into our DB\n * representation of a part(s). an example of this type of file can be\n * found in ../examples/j5.SBOL.xml\n */\nexport default async (sbol, colors = []) =>\n  new Promise((resolve, reject) => {\n    // it shouldn't take longer than this to parse the SBOL file\n    setTimeout(() => {\n      reject(new Error(\"Took to long to parse SBOL\"));\n    }, 2000);\n\n    // util reject function that will be triggered if any fields fail\n    const rejectSBOL = errType =>\n      reject(new Error(`Failed on SBOL file; ${errType}`));\n\n    // weird edge case with directed quotation characters\n    const fileString = sbol.replace(/“|”/g, '\"');\n\n    xml2js.parseString(\n      fileString,\n      {\n        xmlns: true,\n        attrkey: \"xml_tag\",\n        tagNameProcessors: [processors.stripPrefix]\n      },\n      (err, parsedSBOL) => {\n        if (err) rejectSBOL(err);\n        let RDF = null;\n        if (parsedSBOL.RDF) ({ RDF } = parsedSBOL);\n        if (!RDF) reject(new Error(\"No root RDF document\"));\n\n        const { Collection, DnaComponent } = RDF;\n        if (Collection && Collection.length) {\n          // it's a collection of DnaComponents, parse each to a part\n          const partList = [];\n          Collection.forEach(({ component }) => {\n            if (component && component.length) {\n              component.forEach(({ DnaComponent: nestedDnaComponent }) => {\n                partList.push(\n                  dnaComponentToPart(nestedDnaComponent[0], {\n                    strict: false,\n                    file: sbol,\n                    colors: colors\n                  })\n                );\n              });\n            }\n          });\n\n          // check whether any parts were created from the collection\n          if (partList.length) resolve(partList);\n        } else if (DnaComponent && DnaComponent.length) {\n          // create a single part from the single one passed\n          const validPart = dnaComponentToPart(DnaComponent[0], {\n            strict: false,\n            file: sbol,\n            colors: colors\n          });\n          // it will be null if there isnt' any sequence information beneath it\n          if (validPart) resolve([validPart]);\n        }\n\n        // go on a fishing expedition for DnaComponents\n        // everything else has failed\n        // accumulate all that are \"valid\" (name + seq)\n        const dnaComponentAccumulator = [];\n        findDnaComponentNodes(dnaComponentAccumulator, RDF);\n        const attemptedParts = dnaComponentAccumulator\n          .map(p =>\n            dnaComponentToPart(p, {\n              strict: true,\n              file: sbol,\n              colors: colors\n            })\n          )\n          .filter(p => p); // invalid parts will be null\n        if (attemptedParts.length) resolve(attemptedParts);\n\n        // go on another fishing expidition, but for Sequence nodes\n        const dnaSequenceAccumulator = [];\n        findSequenceNodes(dnaSequenceAccumulator, RDF);\n        const sequenceNodes = dnaSequenceAccumulator\n          .map(p => sequenceToPart(p, sbol))\n          .filter(p => p); // invalid parts will be null\n        if (sequenceNodes.length) resolve(sequenceNodes);\n\n        // neither a DnaComponent nor Collection was found anywhere in document\n        reject(new Error(\"no valid DnaComponent or Collection\"));\n      }\n    );\n  });\n","import { partFactory, dnaComplement } from \"../../utils/parser\";\nimport { annotationFactory } from \"../../utils/sequence\";\nimport xml2js, { processors } from \"xml2js\";\n\n/**\n * SBOL v2.0 schema definition can be found at: http://sbolstandard.org/wp-content/uploads/2016/06/SBOL-data-model-2.2.1.pdf\n * differs from SBOL 1 in that the ComponentDefinitions are like the root parts,\n * and the sequence and annotations are separated (they're no longer defined relationally\n * by nesting but, instead, by id)\n *\n * we only care about components that have sequence information\n */\n\n// get the first string/number child out of an array of possible null elements\nconst first = elArr => {\n  if (elArr && elArr[0] && elArr[0]._) {\n    return elArr[0]._;\n  }\n  return null;\n};\n\n/**\n * takes an SBOL file, as a string, and converts it into our DB\n * representation of a part(s). an example of this type of file can be\n * found in ../examples/j5.SBOL.xml\n */\nexport default async (sbol, fileName, colors = []) =>\n  new Promise((resolve, reject) => {\n    // util reject function that will be triggered if any fields fail\n    const rejectSBOL = errType =>\n      reject(new Error(`Failed on SBOLv2 file: ${errType}`));\n\n    // weird edge case with directed quotation characters\n    const fileString = sbol.replace(/“|”/g, '\"');\n\n    xml2js.parseString(\n      fileString,\n      {\n        xmlns: true,\n        attrkey: \"xml_tag\",\n        tagNameProcessors: [processors.stripPrefix]\n      },\n      (err, parsedSBOL) => {\n        if (err) {\n          rejectSBOL(err);\n        }\n\n        let RDF = null;\n        if (parsedSBOL.RDF) {\n          ({ RDF } = parsedSBOL);\n        }\n\n        if (!RDF) {\n          reject(new Error(\"No root RDF document\"));\n        }\n\n        // check if anything is defined, return if not\n        const { ComponentDefinition, Sequence } = RDF;\n        if (!ComponentDefinition || !ComponentDefinition.length || !Sequence) {\n          resolve([]);\n        }\n\n        // it's a collection of DnaComponents, parse each to a part\n        const partList = [];\n        ComponentDefinition.forEach((c, i) => {\n          // we're only making parts out of those with seq info\n          if (!c.sequence || !c.sequence.length) {\n            return;\n          }\n\n          const { displayId, description, sequence, sequenceAnnotation } = c;\n          const name = first(displayId) || `${fileName}_${i + 1}`;\n          const note = first(description) || \"\";\n\n          const annotations = [];\n          (sequenceAnnotation || []).forEach(({ SequenceAnnotation }) => {\n            const ann = SequenceAnnotation[0];\n            const annId = first(ann.displayId);\n            const { Range } = ann.location[0];\n\n            const range = Range[0];\n            annotations.push({\n              ...annotationFactory(annId),\n              name: annId,\n              start: first(range.start) - 1,\n              end: first(range.end) - 1\n            });\n          });\n\n          const seqID = sequence[0].xml_tag[\"rdf:resource\"].value;\n\n          // try and find sequence data\n          const partSeq = Sequence.find(\n            s =>\n              (s.persistentIdentity &&\n                s.persistentIdentity.length &&\n                s.persistentIdentity[0].xml_tag[\"rdf:resource\"].value ===\n                  seqID) ||\n              s.xml_tag[\"rdf:about\"].value === seqID\n          );\n\n          if (partSeq && partSeq.elements) {\n            const seqInput = first(partSeq.elements) || \"\";\n            const { seq, compSeq } = dnaComplement(seqInput);\n            partList.push({\n              ...partFactory(),\n              name,\n              note,\n              seq,\n              compSeq,\n              annotations\n            });\n          }\n        });\n\n        // check whether any parts were created from the collection\n        if (partList.length) {\n          resolve(partList);\n        }\n\n        // nothing in root\n        resolve([]);\n      }\n    );\n  });\n","import sbolV1 from \"./sbol.v1\";\nimport sbolV2 from \"./sbol.v2\";\n\n/**\n * takes in an SBOL file in v1 or v2 format, and parses to an array of parts\n * that match the Loom data model\n */\nexport default async (sbol, fileName, colors = []) =>\n  sbol.includes(\"sbols.org/v1#\")\n    ? sbolV1(sbol, colors)\n    : sbolV2(sbol, fileName, colors);\n","// @flow\n\nimport {\n  dnaComplement,\n  partFactory,\n  extractDate,\n  trimCarriageReturn\n} from \"../../utils/parser\";\nimport { annotationFactory } from \"../../utils/sequence\";\n\n// a list of recognized types that would constitute an annotation name\nconst tagNameList = [\n  \"gene\",\n  \"product\",\n  \"note\",\n  \"db_xref\",\n  \"protein_id\",\n  \"label\",\n  \"lab_host\"\n];\n\n// a list of tags that could represent colors\nconst tagColorList = [\"ApEinfo_fwdcolor\", \"ApEinfo_revcolor\", \"loom_color\"];\n\n/**\n * takes in a string representation of a SeqBuilder file and outputs our\n * part representation of it. an example of a SeqBuilder file can be found\n * at imports/io/examples/seqbuilder, though there may be variations to the\n * format\n */\nexport default async (fileInput, fileName, colors = []) =>\n  fileInput.split(/\\/\\/\\s/g).map(file => {\n    // +++++SEQUENCE+++++//\n    // the part sequence comes after the line that specifies the seqbuilder version number\n    const SEQ_ROWS = file\n      .substring(\n        file.search(/.*?written by seqbuilder .*?[0-9.]+[^actg]+/i) +\n          file.match(/.*?written by seqbuilder .*?[0-9.]+[^actg]+/i)[0].length,\n        file.length\n      )\n      .match(/[actgyrwskmdvhbxn]+/gim)[0];\n\n    let seq = SEQ_ROWS;\n    let compSeq = \"\";\n    ({ seq, compSeq } = dnaComplement(seq)); // seq and compSeq\n    // there may be a genbank-like header row after the sequence\n    // LOCUS       SCU49845     5028 bp    DNA             PLN       21-JUN-1999\n    let parsedName = fileName.length > 0 ? fileName : \"Unnamed\";\n    let date = Date.now();\n    let circular = false;\n\n    if (seq.length > 500000) {\n      throw new Error(\n        `Import of sequence length ${seq.length}bp failed. Please keep sequences under 500000bp.`,\n        seq.length\n      );\n    }\n    if (~file.indexOf(\"LOCUS\")) {\n      const HEADER_ROW = file.substring(\n        file.indexOf(\"LOCUS\"),\n        file.search(/\\\\n|\\n/)\n      );\n      if (HEADER_ROW && HEADER_ROW.split(/\\s{2,}/g)) {\n        const [, name, ...headerRest] = HEADER_ROW.split(/\\s{2,}/g).filter(\n          h => h\n        );\n        parsedName = name;\n        date = extractDate(headerRest);\n        if (HEADER_ROW.includes(\"circular\")) {\n          circular = true;\n        }\n      }\n    }\n    // Name setting logic ported from GenBank parser\n    if (\n      (parsedName === \"Exported\" && file.includes(\"SnapGene\")) || // stupid Snapgene name\n      Number.parseInt(parsedName, 10) // it thinks seq-length is the name\n    ) {\n      // first try and get the name from ACCESSION\n      let accessionName = false;\n      if (file.includes(\"ACCESSION\")) {\n        // this will be undefined is there is no\n        const accession = file\n          .substring(\n            file.indexOf(\"ACCESSION\"),\n            file.indexOf(\"\\n\", file.indexOf(\"ACCESSION\"))\n          )\n          .replace(\".\", \"\")\n          .split(/\\s{2,}/)\n          .filter(a => a !== \"ACCESSION\")\n          .pop();\n        if (accession) {\n          parsedName = accession;\n          accessionName = true;\n        }\n      }\n\n      // otherwise, revert to trying to get the part name from the file name\n      if (!accessionName && fileName) {\n        parsedName = fileName\n          .substring(\n            0,\n            Math.max(fileName.search(/\\n|\\||\\./), fileName.lastIndexOf(\".\"))\n          )\n          .replace(/\\/\\s/g, \"\");\n      } else if (!accessionName) {\n        parsedName = \"Unnamed\"; // give up\n      }\n    }\n\n    // +++++ANNOTATIONS+++++//\n    // the features are translated into annotations\n    // region is FEATURES thru ORIGIN\n    // FEATURES             Location/Qualifiers\n    //   source          1..5028\n    //                   /organism=\"Saccharomyces cerevisiae\"\n    //                   /db_xref=\"taxon:4932\"\n    //                   /chromosome=\"IX\"\n    //                   /map=\"9\"\n    //\n    // in the example above, source is the annotation \"type\" and name is \"taxon:4932\"\n    // because \"db_xref\" is a recognized name type\n    // the name depends on whether the tag type is in the reocgnized list of types\n    const annotations = [];\n    if (file.indexOf(\"FEATURES\")) {\n      const FEATURES_LINE = file.indexOf(\"FEATURES\");\n      const FEATURES_NEW_LINE = file.indexOf(\"\\n\", FEATURES_LINE);\n      let ORIGIN_LINE = file.lastIndexOf(\"ORIGIN\");\n\n      // some files have a contig file line that needs to parsed out/ shouldn't be included in\n      // the features parsing\n      if (file.includes(\"CONTIG\")) {\n        ORIGIN_LINE = Math.min(ORIGIN_LINE, file.indexOf(\"CONTIG\"));\n      }\n      const FEATURES_ROWS = file\n        .substring(FEATURES_NEW_LINE, ORIGIN_LINE)\n        .split(/\\n/)\n        .filter(r => r);\n\n      FEATURES_ROWS.forEach(r => {\n        // in the example above, the following converts it to ['source', '1..5028']\n        const currLine = r.split(/\\s{2,}/g).filter(l => l);\n        if (currLine.length > 1) {\n          // it's the beginning of a new feature/annotation\n          const [type, rangeString] = currLine;\n          // console.log(currLine);\n          const rangeRegex = /\\d+/g;\n          const direction = r.includes(\"complement\") ? -1 : 1;\n\n          // using the example above, this parses 1..5028 into 1 and 5028\n          let [start, end] = [0, 0];\n          const startSearch = rangeRegex.exec(rangeString);\n\n          if (startSearch) {\n            // the - 1 is because genbank is 1-based while we're 0\n            start = +startSearch[0] - (1 % seq.length);\n            const endSearch = rangeRegex.exec(rangeString);\n            // console.log(endSearch);\n            if (endSearch) {\n              end = +endSearch[0] % seq.length;\n            }\n          }\n\n          if (type !== \"source\") {\n            // source would just be an annotation for the entire sequence so remove\n            // create a new annotation around the properties in this line (type and range)\n            annotations.push({\n              ...annotationFactory(`${type}-${start}`),\n              type,\n              start,\n              end,\n              direction\n            });\n          }\n        } else if (currLine.length === 1) {\n          // it's a continuation of a prior feature/annotation\n          // any updates (to name or color) to the last annotation should affect\n          // the last annotation that's in the array\n          let [tag] = currLine;\n          tag = tag.replace(/[/\"]/g, \"\"); // get rid of quotation marks and forward slaches\n          // should now look like ['organism', 'Saccharomyces cerevisiae']\n          const [tagName, tagValue] = tag.split(/=/);\n\n          // the two values that can be extracted are name or color\n          const lastAnnIndex = annotations.length - 1;\n          if (tagNameList.includes(tagName)) {\n            // it's key value pair where the key is something we recognize as an annotation name\n            if (\n              lastAnnIndex > -1 &&\n              annotations[annotations.length - 1].name === \"Untitled\"\n            ) {\n              // defensively check that there isn't already a defined annotation w/o a name\n              annotations[annotations.length - 1].name = trimCarriageReturn(\n                tagValue\n              );\n            }\n          } else if (tagColorList.includes(tagName)) {\n            // it's key value pair where the key is something we recognize as an annotation color\n            if (lastAnnIndex > -1) {\n              // defensively check that there's already been a defined annotation\n              annotations[annotations.length - 1].color = tagValue;\n            }\n          }\n        }\n      });\n    }\n\n    // try to figure out whether the part is linear or circular\n    // hints for a part being circular include:\n    // circular in the header row\n    // annotations that cross zero index\n    // words like circular within the circular row\n    // words like plasmid within the text/name\n    if (annotations.find(a => !(a.end === 0 && a.start) && a.start > a.end)) {\n      circular = true;\n    }\n\n    parsedName = trimCarriageReturn(parsedName);\n\n    return {\n      ...partFactory(),\n      name: parsedName || fileName,\n      date: date,\n      seq: seq,\n      compSeq: compSeq,\n      annotations: annotations,\n      circular: circular\n    };\n  });\n","import path from \"path\";\n\nimport { COLORS } from \"../utils/colors\";\nimport { dnaComplement, partFactory } from \"../utils/parser\";\nimport parseBenchling from \"./parsers/benchling\";\nimport parseBioBrick from \"./parsers/biobrick\";\nimport parseFASTA from \"./parsers/fasta\";\nimport parseGenbank from \"./parsers/genbank\";\nimport parseJBEI from \"./parsers/jbei\";\nimport parseSBOL from \"./parsers/sbol\";\nimport parseSnapgene from \"./parsers/snapgene\";\nimport parseSeqBuilder from \"./parsers/seqbuilder\";\n\n/**\n * filesToParts can convert either string contents of\n * DNA files or a list of File objects into SeqViz parts\n */\nexport default async (\n  files,\n  options = { fileName: \"\", colors: COLORS, backbone: \"\" }\n) => {\n  try {\n    const partLists = await new Promise((resolve, reject) => {\n      const { fileName = \"\", colors = [], backbone = \"\" } = options;\n\n      // if it's just a single file string\n      if (typeof files === \"string\") {\n        resolve(fileToParts(files, { fileName, colors, backbone }));\n        return;\n      }\n\n      // if it's not an iterator over files, throw\n      if (!Array.isArray(files)) {\n        files = [files];\n      }\n\n      // a list of file strings or a FileList\n      let partsList = [];\n      files.forEach(file => {\n        if (file.type === \"application/zip\") {\n          reject(new Error(\"zip files are not supported by SeqViz\"));\n        } else if (typeof file === \"string\") {\n          partsList.push(fileToParts(file, options));\n        } else {\n          partsList.push(\n            new Promise(resolve => {\n              const reader = new FileReader();\n              reader.onload = e => {\n                resolve(fileToParts(e.target.result, fileOptions));\n              };\n\n              // set fileName in options if available\n              // fileName used in naming part and determining which file parser to use\n              const fileOptions = file.name\n                ? { ...options, fileName: file.name }\n                : options;\n\n              // SnapGene files are buffers, rest are strings\n              if (fileOptions.fileName.endsWith(\".dna\")) {\n                reader.readAsArrayBuffer(file);\n              } else {\n                reader.readAsText(file);\n              }\n            })\n          );\n        }\n      });\n\n      resolve(Promise.all(partsList));\n    });\n\n    return partLists.reduce((acc, partList) => acc.concat(partList), []);\n  } catch (err) {\n    throw err;\n  }\n};\n\n/**\n * Takes in a file, in string format, figures out which type of file it is,\n * converts the file into a part, and returns the part\n *\n * @param {String} file  the string representation of the passed file\n */\nconst fileToParts = async (\n  file,\n  options = { fileName: \"\", colors: [], backbone: \"\" }\n) => {\n  const { fileName = \"\", colors = [], backbone = \"\" } = options;\n\n  if (!file) {\n    throw Error(\"cannot parse null or empty string\");\n  }\n\n  // this is a check for an edge case, where the user uploads come kind\n  // of file that's full of bps but doesn't fit into a defined type\n  const firstLine = file.search ? file.substring(0, file.search(\"\\n\")) : \"\";\n  const dnaCharLength = firstLine.replace(/[^atcgATCG]/, \"\").length;\n  const dnaOnlyFile = dnaCharLength / firstLine.length > 0.8; // is it >80% dna?\n  const sourceName = fileName.split(path.sep).pop();\n  const name =\n    fileName && sourceName\n      ? sourceName.substring(0, sourceName.search(\"\\\\.\"))\n      : \"Untitled\";\n  const source = { name: sourceName, file: file };\n\n  // another edge case check for whether the part is a JSON part from Benchling\n  // just a heuristic that says 1) yes it can be parsed 2) it conaints a list of\n  // fields that are common to Benchling files\n  let isBenchling = false;\n  try {\n    const benchlingJSON = JSON.parse(file); // will err out if not JSON\n    const benchlingJSONKeys = Object.keys(benchlingJSON);\n    if (\n      [\"bases\", \"annotations\", \"primers\"].every(k =>\n        benchlingJSONKeys.includes(k)\n      )\n    ) {\n      isBenchling = true;\n    }\n  } catch (_) {}\n\n  let parts;\n\n  try {\n    switch (true) {\n      // SnapGene; first because it's a buffer, not string\n      // it will fail for some string methods below\n      case fileName.endsWith(\".dna\"):\n        parts = await parseSnapgene(file, { fileName, colors });\n        break;\n\n      // FASTA\n      case file.startsWith(\">\"):\n      case file.startsWith(\";\"):\n      case fileName.endsWith(\".seq\"):\n      case fileName.endsWith(\".fa\"):\n      case fileName.endsWith(\".fas\"):\n      case fileName.endsWith(\".fasta\"):\n        parts = await parseFASTA(file, fileName).then(parsedFasta => {\n          const ret = parsedFasta.map(p => ({\n            ...partFactory(),\n            ...dnaComplement(p.seq),\n            ...p\n          }));\n          return ret;\n        });\n        break;\n\n      // Genbank\n      case file.includes(\"LOCUS\") && file.includes(\"ORIGIN\"):\n      case fileName.endsWith(\".gb\"):\n      case fileName.endsWith(\".gbk\"):\n      case fileName.endsWith(\".genbank\"):\n      case fileName.endsWith(\".ape\"):\n        parts = await parseGenbank(file, fileName, colors);\n        break;\n\n      // SeqBuilder\n      case file.includes(\"Written by SeqBuilder\"):\n      case fileName.endsWith(\".sbd\"):\n        parts = await parseSeqBuilder(file, fileName, colors);\n        break;\n\n      // BioBrick XML\n      case file.includes(\"Parts from the iGEM\"):\n      case file.includes(\"<part_list>\"):\n        parts = await parseBioBrick(file, { colors, backbone });\n        break;\n\n      // Benchling JSON\n      case isBenchling:\n        parts = await parseBenchling(file);\n        break;\n\n      // SBOL\n      case file.includes(\"RDF\"):\n        parts = await parseSBOL(file, fileName, colors);\n        break;\n\n      // jbei\n      case file.includes(':seq=\"http://jbei.org/sequence\"'):\n      case file.startsWith(\"<seq:seq\"):\n        parts = await parseJBEI(file, colors);\n        break;\n\n      // a DNA text file without an official formatting\n      case dnaOnlyFile:\n        parts = [{ ...partFactory(), ...dnaComplement(file), name }];\n        break;\n\n      default:\n        throw Error(`${fileName} File type not recognized: ${file}`);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  // add the source information to all parts\n  if (parts) {\n    return parts.map(p => ({ ...p, source }));\n  }\n  throw Error(\"unparsable file\");\n};\n","/**\n * These parts are plasmid backbones downloaded from the iGEM site\n * so that they can be referenced by name for viewer instantiation\n * As of 05/15/19 the supported backbones are\n * BBa_K1362091, BBa_K823055, pSB1A3, pSB1A7,\n * pSB1AC3, pSB1AK3, pSB1AT3, pSB1C3, pSB1K3, pSB1T3\n * as specified at https://parts.igem.org/Plasmid_backbones/Assembly\n *\n * Please note that the parts are stored with all capital ids to facilitate\n * case-insensitive lookup\n */\nexport const fetchBBB = name => {\n  const lookupName = name.toUpperCase();\n  const BBB = igemBackbones[lookupName];\n  if (BBB) {\n    return BBB;\n  } else {\n    console.warn(\n      `Your backbone input ${name} did not match the name of any iGEM Backbone packaged with this library.\n      Please check if the backbone you are using is listed at https://parts.igem.org/Plasmid_backbones/Assembly.\n      If you are using a custom backbone please be aware that this library does not check for the validity of your prefix and suffix.\n      You can read more about prefixes and suffixes here: http://parts.igem.org/Help:Prefix-Suffix.`\n    );\n    return name;\n  }\n};\n\nexport const igemBackbones = {\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1A3\n  PSB1A3: `tactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcaggct\ntcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggata\nacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgcccccctgacga\ngcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcct\ngttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgt\naggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaag\nacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactac\nggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccg\nctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctca\ngtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatc\ntaaagtatatatgagtaaacttggtctgacagttaccaatgcttaatcagtgaggcacctatctcagcgatctgtctatttcgttcatccatagttgcct\ngactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatgataccgcgagacccacgctcaccggctccagattt\natcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctccatccagtctattaattgttgccgggaagctaga\ngtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtcacgctcgtcgtttggtatggcttcattcagctccg\ngttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcggtcctccgatcgttgtcagaagtaagttggccgc\nagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatgcttttctgtgactggtgagtactcaaccaagtca\nttctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcgccacatagcagaactttaaaagtgctcatcattg\ngaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatataacccactcgtgcacccaactgatcttcagcatcttt\ntactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataagggcgacacggaaatgttgaatactcatactcttc\nctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgtatttagaaaaataaacaaataggggttccgcgca\ncatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggcagaatttcagataaaa\naaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1C3\n  PSB1C3: `tactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcaggct\ntcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggata\nacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgcccccctgacga\ngcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcct\ngttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgt\naggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaag\nacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactac\nggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccg\nctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctca\ngtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatc\ntaaagtatatatgagtaaacttggtctgacagctcgaggcttggattctcaccaataaaaaacgcccggcggcaaccgagcgttctgaacaaatccagat\nggagttctgaggtcattactggatctatcaacaggagtccaagcgagctcgatatcaaattacgccccgccctgccactcatcgcagtactgttgtaatt\ncattaagcattctgccgacatggaagccatcacaaacggcatgatgaacctgaatcgccagcggcatcagcaccttgtcgccttgcgtataatatttgcc\ncatggtgaaaacgggggcgaagaagttgtccatattggccacgtttaaatcaaaactggtgaaactcacccagggattggctgagacgaaaaacatattc\ntcaataaaccctttagggaaataggccaggttttcaccgtaacacgccacatcttgcgaatatatgtgtagaaactgccggaaatcgtcgtggtattcac\ntccagagcgatgaaaacgtttcagtttgctcatggaaaacggtgtaacaagggtgaacactatcccatatcaccagctcaccgtctttcattgccatacg\naaattccggatgagcattcatcaggcgggcaagaatgtgaataaaggccggataaaacttgtgcttatttttctttacggtctttaaaaaggccgtaata\ntccagctgaacggtctggttataggtacattgagcaactgactgaaatgcctcaaaatgttctttacgatgccattgggatatatcaacggtggtatatc\ncagtgatttttttctccattttagcttccttagctcctgaaaatctcgataactcaaaaaatacgcccggtagtgatcttatttcattatggtgaaagtt\nggaacctcttacgtgcccgatcaactcgagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggca\ngaatttcagataaaaaaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1K3\n  PSB1K3: `tactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcaggct\ntcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggata\nacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgcccccctgacga\ngcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcct\ngttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgt\naggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaag\nacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactac\nggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccg\nctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctca\ngtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatc\ntaaagtatatatgagtaaacttggtctgacagctcgagtcccgtcaagtcagcgtaatgctctgccagtgttacaaccaattaaccaattctgattagaa\naaactcatcgagcatcaaatgaaactgcaatttattcatatcaggattatcaataccatatttttgaaaaagccgtttctgtaatgaaggagaaaactca\nccgaggcagttccataggatggcaagatcctggtatcggtctgcgattccgactcgtccaacatcaatacaacctattaatttcccctcgtcaaaaataa\nggttatcaagtgagaaatcaccatgagtgacgactgaatccggtgagaatggcaaaagcttatgcatttctttccagacttgttcaacaggccagccatt\nacgctcgtcatcaaaatcactcgcatcaaccaaaccgttattcattcgtgattgcgcctgagcgagacgaaatacgcgatcgctgttaaaaggacaatta\ncaaacaggaatcgaatgcaaccggcgcaggaacactgccagcgcatcaacaatattttcacctgaatcaggatattcttctaatacctggaatgctgttt\ntcccggggatcgcagtggtgagtaaccatgcatcatcaggagtacggataaaatgcttgatggtcggaagaggcataaattccgtcagccagtttagtct\ngaccatctcatctgtaacatcattggcaacgctacctttgccatgtttcagaaacaactctggcgcatcgggcttcccatacaatcgatagattgtcgca\ncctgattgcccgacattatcgcgagcccatttatacccatataaatcagcatccatgttggaatttaatcgcggcctggagcaagacgtttcccgttgaa\ntatggctcataacaccccttgtattactgtttatgtaagcagacagttttattgttcatgatgatatatttttatcttgtgcaatgtaacatcagagatt\nttgagacacaacgtggctttgttgaataaatcgaacttttgctgagttgaaggatcagctcgagtgccacctgacgtctaagaaaccattattatcatga\ncattaacctataaaaataggcgtatcacgaggcagaatttcagataaaaaaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttct\nagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1T3\n  PSB1T3: `tactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcaggct\ntcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggata\nacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgcccccctgacga\ngcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcct\ngttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgt\naggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaag\nacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactac\nggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccg\nctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctca\ngtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatc\ntaaagtatatatgagtaaacttggtctgacagctcgagattctcatgtttgacagcttatcatcgataagctttaatgcggtagtttatcacagttaaat\ntgctaacgcagtcaggcaccgtgtatgaaatctaacaatgcgctcatcgtcatcctcggcaccgtcaccctggatgctgtaggcataggcttggttatgc\ncggtactgccgggcctcttgcgggatatcgtccattccgacagcatcgccagtcactatggcgtgctgctagcgctatatgcgttgatgcaatttctatg\ncgcacccgttctcggagcactgtccgaccgctttggccgccgcccagtcctgctcgcttcgctacttggagccactatcgactacgcgatcatggcgacc\nacacccgtcctgtggatcctctacgccggacgcatcgtggccggcatcaccggcgccacaggtgcggttgctggcgcctatatcgccgacatcaccgatg\ngggaagatcgggctcgccacttcgggctcatgagcgcttgtttcggcgtgggtatggtggcaggccccgtggccgggggactgttgggcgccatctcctt\ngcatgcaccattccttgcggcggcggtgctcaacggcctcaacctactactgggctgcttcctaatgcaggagtcgcataagggagagcgtcgaccgatg\ncccttgagagccttcaacccagtcagctccttccggtgggcgcggggcatgactatcgtcgccgcacttatgactgtcttctttatcatgcaactcgtag\ngacaggtgccggcagcgctctgggtcattttcggcgaggaccgctttcgctggagcgcgacgatgatcggcctgtcgcttgcggtattcggaatcttgca\ncgccctcgctcaagccttcgtcactggtcccgccaccaaacgtttcggcgagaagcaggccattatcgccggcatggcggccgacgcgctgggctacgtc\nttgctggcgttcgcgacgcgaggctggatggccttccccattatgattcttctcgcttccggcggcatcgggatgcccgcgttgcaggccatgctgtcca\nggcaggtagatgacgaccatcagggacagcttcaaggatcgctcgcggctcttaccagcctaacttcgatcactggaccgctgatcgtcacggcgattta\ntgccgcctcggcgagcacatggaacgggttggcatggattgtaggcgccgccctataccttgtctgcctccccgcgttgcgtcgcggtgcatggagccgg\ngccacctcgacctaactcgagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggcagaatttcag\nataaaaaaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1A7\n  PSB1A7: `actagtagcggccgctgcaggcttataaacgcagaaaggcccacccgaaggtgagccagtgtgactctagtagagagcgttcaccgacaaacaacagata\naaacgaaaggcccagtctttcgactgagcctttcgttttatttgatgcctgggtgcagtccggcaaaaaaacgggcaaggtgtcaccaccctgccctttt\ntctttaaaaccgaaaagattacttcgcgttatgcaggcttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcact\ncaaaggcggtaatacggttatccacagaatcaggggataacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgc\ngttgctggcgtttttccataggctccgcccccctgacgagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagatac\ncaggcgtttccccctggaagctccctcgtgcgctctcctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgc\ntttctcatagctcacgctgtaggtatctcagttcggtgtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgc\ncttatccggtaactatcgtcttgagtccaacccggtaagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgta\nggcggtgctacagagttcttgaagtggtggcctaactacggctacactagaaggacagtatttggtatctgcgctctgctgaagccagttaccttcggaa\naaagagttggtagctcttgatccggcaaacaaaccaccgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctca\nagaagatcctttgatcttttctacggggtctgacgctcagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacc\ntagatccttttaaattaaaaatgaagttttaaatcaatctaaagtatatatgagtaaacttggtctgacagttaccaatgcttaatcagtgaggcaccta\ntctcagcgatctgtctatttcgttcatccatagttgcctgactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgc\naatgataccgcgagacccacgctcaccggctccagatttatcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatcc\ngcctccatccagtctattaattgttgccgggaagctagagtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtgg\ntgtcacgctcgtcgtttggtatggcttcattcagctccggttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctc\ncttcggtcctccgatcgttgtcagaagtaagttggccgcagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgta\nagatgcttttctgtgactggtgagtactcaaccaagtcattctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataata\nccgcgccacatagcagaactttaaaagtgctcatcattggaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgat\ngtaacccactcgtgcacccaactgatcttcagcatcttttactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaaggga\nataagggcgacacggaaatgttgaatactcatactcttcctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttg\naatgtatttagaaaaataaacaaataggggttccgcgcacatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaaccta\ntaaaaataggcgtatcacgaggcagaatttcagataaaaaaaatccttagctttcgctaaggatgatttctggaattgccaggcatcaaataaaacgaaa\nggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgc\ngtttatagcagaattcgcggccgcttctaga`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1AC3\n  PSB1AC3: `tactagtagcggccgctgcagtccggcaaaaaaacgggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcagg\ncttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcagggga\ntaacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccataggctccgcccccctgac\ngagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctc\nctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggt\ngtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggta\nagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaact\nacggctacactagaaggacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccac\ncgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgct\ncagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaa\ntctaaagtatatatgagtaaacttggtctgacagctcgaggcttggattctcaccaataaaaaacgcccggcggcaaccgagcgttctgaacaaatccag\natggagttctgaggtcattactggatctatcaacaggagtccaagcgagctcgatatcaaattacgccccgccctgccactcatcgcagtactgttgtaa\nttcattaagcattctgccgacatggaagccatcacaaacggcatgatgaacctgaatcgccagcggcatcagcaccttgtcgccttgcgtataatatttg\ncccatggtgaaaacgggggcgaagaagttgtccatattggccacgtttaaatcaaaactggtgaaactcacccagggattggctgagacgaaaaacatat\ntctcaataaaccctttagggaaataggccaggttttcaccgtaacacgccacatcttgcgaatatatgtgtagaaactgccggaaatcgtcgtggtattc\nactccagagcgatgaaaacgtttcagtttgctcatggaaaacggtgtaacaagggtgaacactatcccatatcaccagctcaccgtctttcattgccata\ncgaaattccggatgagcattcatcaggcgggcaagaatgtgaataaaggccggataaaacttgtgcttatttttctttacggtctttaaaaaggccgtaa\ntatccagctgaacggtctggttataggtacattgagcaactgactgaaatgcctcaaaatgttctttacgatgccattgggatatatcaacggtggtata\ntccagtgatttttttctccattttagcttccttagctcctgaaaatctcgataactcaaaaaatacgcccggtagtgatcttatttcattatggtgaaag\nttggaacctcttacgtgcccgatcaactcgagttaccaatgcttaatcagtgaggcacctatctcagcgatctgtctatttcgttcatccatagttgcct\ngactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatgataccgcgagacccacgctcaccggctccagattt\natcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctccatccagtctattaattgttgccgggaagctaga\ngtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtcacgctcgtcgtttggtatggcttcattcagctccg\ngttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcggtcctccgatcgttgtcagaagtaagttggccgc\nagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatgcttttctgtgactggtgagtactcaaccaagtca\nttctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcgccacatagcagaactttaaaagtgctcatcattg\ngaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatgtaacccactcgtgcacccaactgatcttcagcatcttt\ntactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataagggcgacacggaaatgttgaatactcatactcttc\nctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgtatttagaaaaataaacaaataggggttccgcgca\ncatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggcagaatttcagataaaa\naaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1AK3\n  PSB1AK3: `tactagtagcggccgctgcagtccggcaaaaaaacgggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcagg\ncttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcagggga\ntaacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccataggctccgcccccctgac\ngagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctc\nctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggt\ngtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggta\nagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaact\nacggctacactagaaggacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccac\ncgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgct\ncagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaa\ntctaaagtatatatgagtaaacttggtctgacagctcgagtcccgtcaagtcagcgtaatgctctgccagtgttacaaccaattaaccaattctgattag\naaaaactcatcgagcatcaaatgaaactgcaatttattcatatcaggattatcaataccatatttttgaaaaagccgtttctgtaatgaaggagaaaact\ncaccgaggcagttccataggatggcaagatcctggtatcggtctgcgattccgactcgtccaacatcaatacaacctattaatttcccctcgtcaaaaat\naaggttatcaagtgagaaatcaccatgagtgacgactgaatccggtgagaatggcaaaagcttatgcatttctttccagacttgttcaacaggccagcca\nttacgctcgtcatcaaaatcactcgcatcaaccaaaccgttattcattcgtgattgcgcctgagcgagacgaaatacgcgatcgctgttaaaaggacaat\ntacaaacaggaatcgaatgcaaccggcgcaggaacactgccagcgcatcaacaatattttcacctgaatcaggatattcttctaatacctggaatgctgt\ntttcccggggatcgcagtggtgagtaaccatgcatcatcaggagtacggataaaatgcttgatggtcggaagaggcataaattccgtcagccagtttagt\nctgaccatctcatctgtaacatcattggcaacgctacctttgccatgtttcagaaacaactctggcgcatcgggcttcccatacaatcgatagattgtcg\ncacctgattgcccgacattatcgcgagcccatttatacccatataaatcagcatccatgttggaatttaatcgcggcctggagcaagacgtttcccgttg\naatatggctcataacaccccttgtattactgtttatgtaagcagacagttttattgttcatgatgatatatttttatcttgtgcaatgtaacatcagaga\nttttgagacacaacgtggctttgttgaataaatcgaacttttgctgagttgaaggatcagctcgagttaccaatgcttaatcagtgaggcacctatctca\ngcgatctgtctatttcgttcatccatagttgcctgactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatga\ntaccgcgagacccacgctcaccggctccagatttatcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctc\ncatccagtctattaattgttgccgggaagctagagtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtca\ncgctcgtcgtttggtatggcttcattcagctccggttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcg\ngtcctccgatcgttgtcagaagtaagttggccgcagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatg\ncttttctgtgactggtgagtactcaaccaagtcattctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcg\nccacatagcagaactttaaaagtgctcatcattggaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatgtaac\nccactcgtgcacccaactgatcttcagcatcttttactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataag\nggcgacacggaaatgttgaatactcatactcttcctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgt\natttagaaaaataaacaaataggggttccgcgcacatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaa\nataggcgtatcacgaggcagaatttcagataaaaaaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:pSB1AT3\n  PSB1AT3: `tactagtagcggccgctgcagtccggcaaaaaaacgggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcagg\ncttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcagggga\ntaacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccataggctccgcccccctgac\ngagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctc\nctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggt\ngtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggta\nagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaact\nacggctacactagaaggacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccac\ncgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgct\ncagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaa\ntctaaagtatatatgagtaaacttggtctgacagctcgagattctcatgtttgacagcttatcatcgataagctttaatgcggtagtttatcacagttaa\nattgctaacgcagtcaggcaccgtgtatgaaatctaacaatgcgctcatcgtcatcctcggcaccgtcaccctggatgctgtaggcataggcttggttat\ngccggtactgccgggcctcttgcgggatatcgtccattccgacagcatcgccagtcactatggcgtgctgctagcgctatatgcgttgatgcaatttcta\ntgcgcacccgttctcggagcactgtccgaccgctttggccgccgcccagtcctgctcgcttcgctacttggagccactatcgactacgcgatcatggcga\nccacacccgtcctgtggatcctctacgccggacgcatcgtggccggcatcaccggcgccacaggtgcggttgctggcgcctatatcgccgacatcaccga\ntggggaagatcgggctcgccacttcgggctcatgagcgcttgtttcggcgtgggtatggtggcaggccccgtggccgggggactgttgggcgccatctcc\nttgcatgcaccattccttgcggcggcggtgctcaacggcctcaacctactactgggctgcttcctaatgcaggagtcgcataagggagagcgtcgaccga\ntgcccttgagagccttcaacccagtcagctccttccggtgggcgcggggcatgactatcgtcgccgcacttatgactgtcttctttatcatgcaactcgt\naggacaggtgccggcagcgctctgggtcattttcggcgaggaccgctttcgctggagcgcgacgatgatcggcctgtcgcttgcggtattcggaatcttg\ncacgccctcgctcaagccttcgtcactggtcccgccaccaaacgtttcggcgagaagcaggccattatcgccggcatggcggccgacgcgctgggctacg\ntcttgctggcgttcgcgacgcgaggctggatggccttccccattatgattcttctcgcttccggcggcatcgggatgcccgcgttgcaggccatgctgtc\ncaggcaggtagatgacgaccatcagggacagcttcaaggatcgctcgcggctcttaccagcctaacttcgatcactggaccgctgatcgtcacggcgatt\ntatgccgcctcggcgagcacatggaacgggttggcatggattgtaggcgccgccctataccttgtctgcctccccgcgttgcgtcgcggtgcatggagcc\ngggccacctcgacctaactcgagttaccaatgcttaatcagtgaggcacctatctcagcgatctgtctatttcgttcatccatagttgcctgactccccg\ntcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatgataccgcgagacccacgctcaccggctccagatttatcagcaat\naaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctccatccagtctattaattgttgccgggaagctagagtaagtagt\ntcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtcacgctcgtcgtttggtatggcttcattcagctccggttcccaac\ngatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcggtcctccgatcgttgtcagaagtaagttggccgcagtgttatc\nactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatgcttttctgtgactggtgagtactcaaccaagtcattctgagaa\ntagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcgccacatagcagaactttaaaagtgctcatcattggaaaacgtt\ncttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatgtaacccactcgtgcacccaactgatcttcagcatcttttactttcac\ncagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataagggcgacacggaaatgttgaatactcatactcttcctttttcaa\ntattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgtatttagaaaaataaacaaataggggttccgcgcacatttcccc\ngaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggcagaatttcagataaaaaaaatcctt\nagctttcgctaaggatgatttctggaattcgcggccgcttctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:BBa_K1362091\n  BBA_K1362091: `tactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgttatgcaggct\ntcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggata\nacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgcccccctgacga\ngcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcct\ngttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgt\naggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaag\nacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactac\nggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccg\nctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctca\ngtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatc\ntaaagtatatatgagtaaacttggtctgacagttaccaatgcttaatcagtgaggcacctatctcagcgatctgtctatttcgttcatccatagttgcct\ngactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatgataccgcgagacccacgctcaccggctccagattt\natcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctccatccagtctattaattgttgccgggaagctaga\ngtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtcacgctcgtcgtttggtatggcttcattcagctccg\ngttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcggtcctccgatcgttgtcagaagtaagttggccgc\nagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatgcttttctgtgactggtgagtactcaaccaagtca\nttctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcgccacatagcagaactttaaaagtgctcatcattg\ngaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatataacccactcgtgcacccaactgatcttcagcatcttt\ntactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataagggcgacacggaaatgttgaatactcatactcttc\nctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgtatttagaaaaataaacaaataggggttccgcgca\ncatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggcagaatttcagataaaa\naaaatccttagctttcgctaaggatgatttctggaatttaatacgactcactataggggaattgtgagcggataacaattccccgaattcgcggccgctt\nctagag`,\n  //http://parts.igem.org/wiki/index.php?title=Part:BBa_K823055\n  BBA_K823055: `accggttaatactagtagcggccgctgcagtccggcaaaaaagggcaaggtgtcaccaccctgccctttttctttaaaaccgaaaagattacttcgcgtt\natgcaggcttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaat\ncaggggataacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccacaggctccgccc\nccctgacgagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtg\ncgctctcctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctca\ngttcggtgtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaa\ncccggtaagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtgg\ncctaactacggctacactagaagaacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaac\naaaccaccgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtc\ntgacgctcagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagtttt\naaatcaatctaaagtatatatgagtaaacttggtctgacagctcgaggcttggattctcaccaataaaaaacgcccggcggcaaccgagcgttctgaaca\naatccagatggagttctgaggtcattactggatctatcaacaggagtccaagcgagctcgatatcaaattacgccccgccctgccactcatcgcagtact\ngttgtaattcattaagcattctgccgacatggaagccatcacaaacggcatgatgaacctgaatcgccagcggcatcagcaccttgtcgccttgcgtata\natatttgcccatggtgaaaacgggggcgaagaagttgtccatattggccacgtttaaatcaaaactggtgaaactcacccagggattggctgagacgaaa\naacatattctcaataaaccctttagggaaataggccaggttttcaccgtaacacgccacatcttgcgaatatatgtgtagaaactgccggaaatcgtcgt\nggtattcactccagagcgatgaaaacgtttcagtttgctcatggaaaacggtgtaacaagggtgaacactatcccatatcaccagctcaccgtctttcat\ntgccatacgaaattccggatgagcattcatcaggcgggcaagaatgtgaataaaggccggataaaacttgtgcttatttttctttacggtctttaaaaag\ngccgtaatatccagctgaacggtctggttataggtacattgagcaactgactgaaatgcctcaaaatgttctttacgatgccattgggatatatcaacgg\ntggtatatccagtgatttttttctccattttagcttccttagctcctgaaaatctcgataactcaaaaaatacgcccggtagtgatcttatttcattatg\ngtgaaagttggaacctcttacgtgcccgatcaactcgagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtat\ncacgaggcagaatttcagataaaaaaaatccttagctttcgctaaggatgatttctggaattcgcggccgcttctagataaggaggaactactatggccg\ngc`\n};\n","import fetch, { Request } from \"node-fetch\";\n\nimport fileToParts from \"./filesToParts\";\nimport { fetchBBB } from \"./igemBackbones\";\n\n/**\n * retrieve a string representation of a part from a remote server and convert it into a part\n */\nexport default async (accession, options = { backbone: \"\", colors: [] }) => {\n  let igem = false;\n\n  // get from cache\n  const key = accession + options.backbone || \"\";\n  if (accession && key && localStorage.getItem(key)) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  const { colors = [], backbone = \"\" } = options;\n  // right now, we support either NCBI or iGEM. We parse this automatically. the user\n  // doesn't specify the target registry, so we have to infer it from the passed accession\n  let url = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=${accession.trim()}&rettype=gbwithparts&retmode=text`;\n  if (accession.startsWith(\"BB\")) {\n    // it's a BioBrick... target the iGEM repo\n    igem = true;\n    url = `https://cors-anywhere.herokuapp.com/http://parts.igem.org/xml/part.${accession.trim()}`;\n  } else if (backbone.length) {\n    console.error(\"backbone specified without a BioBrick\");\n  }\n\n  const response = await fetch(\n    new Request(url, { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } })\n  )\n    .then(response => response.text())\n    .catch(console.error);\n\n  if (!response) {\n    throw new Error(\n      `Failed to retrieve a seq with accession ${accession} from ${url}`\n    );\n  }\n\n  // convert to a part\n  const igemBackbone =\n    igem && backbone.length\n      ? { name: backbone, backbone: fetchBBB(backbone) }\n      : \"\";\n\n  if (igem && igemBackbone === \"\") {\n    console.error(\"iGEM BioBrick ID used, but no backbone ID specified.\");\n  }\n\n  const parts = await fileToParts(response, {\n    colors: colors,\n    backbone: igemBackbone\n  });\n\n  if (parts && parts.length) {\n    const part = parts[0];\n    if (key && part && part.seq) {\n      localStorage.setItem(key, JSON.stringify(part));\n      return part;\n    }\n  }\n\n  throw new Error(\n    `Failed to retrieve a seq with accession ${accession} from ${url}`\n  );\n};\n","/**\n * NEB Restriction Enzymes\n *\n * a list of enzyme objects with their name as the key,\n * their recognition site sequence as \"rseq\", and cut site relative to the\n * start of the recognition site as \"fcut\", and the start of the resulting overhang\n * from the recognition site as \"rcut\"\n *\n * eg: PstI with recognition site \"CTGCAG\" cuts so that the break is\n * at (cutSite = 5):\n * \t\t..C TGCA|G..\n * \t\t..G|ACGT C..\n *\n * and the resulting fragment looks like (rcut = 1):\n * \t\t..CTGCA\n * \t\t..G****\n *\n * @typedef {Object}  EnzymeInfo\n * @property {String}    rseq   the recognition sequence associated with the enzyme\n * @property {Number}    rcut   the index of the hangSite, relative to the rseq start\n * @property {Number}    fcut   the cut index of the enzyme relative to rseq start\n */\nexport default {\n  \"PI-SceI\": {\n    rseq: \"ATCTATGTCGGGTGCGGAGAAAGAGGTAATGAAATGG\",\n    rcut: 11,\n    fcut: 15\n  },\n  \"PI-PspI\": {\n    rseq: \"TGGCAAACAGCTATTATGGGTATTATGGGT\",\n    rcut: 13,\n    fcut: 17\n  },\n  \"I-CeuI\": {\n    rseq: \"TAACTATAACGGTCCTAAGGTAGCGAA\",\n    rcut: 14,\n    fcut: 18\n  },\n  \"I-SceI\": {\n    rseq: \"TAGGGATAACAGGGTAAT\",\n    rcut: 5,\n    fcut: 9\n  },\n  AscI: {\n    rseq: \"GGCGCGCC\",\n    rcut: 6,\n    fcut: 2\n  },\n  AsiSI: {\n    rseq: \"GCGATCGC\",\n    rcut: 3,\n    fcut: 5\n  },\n  FseI: {\n    rseq: \"GGCCGGCC\",\n    rcut: 2,\n    fcut: 6\n  },\n  NotI: {\n    rseq: \"GCGGCCGC\",\n    rcut: 6,\n    fcut: 2\n  },\n  PacI: {\n    rseq: \"TTAATTAA\",\n    rcut: 3,\n    fcut: 5\n  },\n  PmeI: {\n    rseq: \"GTTTAAAC\",\n    rcut: 4,\n    fcut: 4\n  },\n  PspXI: {\n    rseq: \"VCTCGAGB\",\n    rcut: 6,\n    fcut: 2\n  },\n  SbfI: {\n    rseq: \"CCTGCAGG\",\n    rcut: 2,\n    fcut: 6\n  },\n  SfiI: {\n    rseq: \"GGCCNNNNNGGCC\",\n    rcut: 5,\n    fcut: 8\n  },\n  SgrAI: {\n    rseq: \"CRCCGGYG\",\n    rcut: 6,\n    fcut: 2\n  },\n  SrfI: {\n    rseq: \"GCCCGGGC\",\n    rcut: 4,\n    fcut: 4\n  },\n  SwaI: {\n    rseq: \"ATTTAAAT\",\n    rcut: 4,\n    fcut: 4\n  },\n  BaeI: {\n    rseq: \"NNNNNNNNNNNNNNNACNNNNGTAYCNNNNNNNNNNNN\",\n    rcut: 33,\n    fcut: 38\n  },\n  BbvCI: {\n    rseq: \"CCTCAGC\",\n    rcut: 5,\n    fcut: 2\n  },\n  BspQI: {\n    rseq: \"GCTCTTCNNNN\",\n    rcut: 11,\n    fcut: 8\n  },\n  CspCI: {\n    rseq: \"NNNNNNNNNNNNNCAANNNNNGTGGNNNNNNNNNNNN\",\n    rcut: 35,\n    fcut: 37\n  },\n  PpuMI: {\n    rseq: \"RGGWCCY\",\n    rcut: 5,\n    fcut: 2\n  },\n  RsrII: {\n    rseq: \"CGGWCCG\",\n    rcut: 5,\n    fcut: 2\n  },\n  SapI: {\n    rseq: \"GCTCTTCNNNN\",\n    rcut: 11,\n    fcut: 8\n  },\n  SexAI: {\n    rseq: \"ACCWGGT\",\n    rcut: 6,\n    fcut: 1\n  },\n  AatII: {\n    rseq: \"GACGTC\",\n    rcut: 1,\n    fcut: 5\n  },\n  Acc65I: {\n    rseq: \"GGTACC\",\n    rcut: 5,\n    fcut: 1\n  },\n  AccI: {\n    rseq: \"GTMKAC\",\n    rcut: 4,\n    fcut: 2\n  },\n  AclI: {\n    rseq: \"AACGTT\",\n    rcut: 4,\n    fcut: 2\n  },\n  AcuI: {\n    rseq: \"CTGAAGNNNNNNNNNNNNNNNN\",\n    rcut: 20,\n    fcut: 22\n  },\n  AfeI: {\n    rseq: \"AGCGCT\",\n    rcut: 3,\n    fcut: 3\n  },\n  AflII: {\n    rseq: \"CTTAAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  AflIII: {\n    rseq: \"ACRYGT\",\n    rcut: 5,\n    fcut: 1\n  },\n  AgeI: {\n    rseq: \"ACCGGT\",\n    rcut: 5,\n    fcut: 1\n  },\n  AhdI: {\n    rseq: \"GACNNNNNGTC\",\n    rcut: 5,\n    fcut: 6\n  },\n  AleI: {\n    rseq: \"CACNNNNGTG\",\n    rcut: 5,\n    fcut: 5\n  },\n  AlwNI: {\n    rseq: \"CAGNNNCTG\",\n    rcut: 3,\n    fcut: 6\n  },\n  ApaI: {\n    rseq: \"GGGCCC\",\n    rcut: 1,\n    fcut: 5\n  },\n  ApaLI: {\n    rseq: \"GTGCAC\",\n    rcut: 5,\n    fcut: 1\n  },\n  ApoI: {\n    rseq: \"RAATTY\",\n    rcut: 5,\n    fcut: 1\n  },\n  AseI: {\n    rseq: \"ATTAAT\",\n    rcut: 4,\n    fcut: 2\n  },\n  AvaI: {\n    rseq: \"CYCGRG\",\n    rcut: 5,\n    fcut: 1\n  },\n  AvrII: {\n    rseq: \"CCTAGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  BaeGI: {\n    rseq: \"GKGCMC\",\n    rcut: 1,\n    fcut: 5\n  },\n  BamHI: {\n    rseq: \"GGATCC\",\n    rcut: 5,\n    fcut: 1\n  },\n  BanI: {\n    rseq: \"GGYRCC\",\n    rcut: 5,\n    fcut: 1\n  },\n  BanII: {\n    rseq: \"GRGCYC\",\n    rcut: 1,\n    fcut: 5\n  },\n  BbsI: {\n    rseq: \"GAAGACNNNNNN\",\n    rcut: 12,\n    fcut: 8\n  },\n  BcgI: {\n    rseq: \"NNNNNNNNNNNNCGANNNNNNTGCNNNNNNNNNNNN\",\n    rcut: 34,\n    fcut: 36\n  },\n  BciVI: {\n    rseq: \"GTATCCNNNNNN\",\n    rcut: 11,\n    fcut: 12\n  },\n  BclI: {\n    rseq: \"TGATCA\",\n    rcut: 5,\n    fcut: 1\n  },\n  BfuAI: {\n    rseq: \"ACCTGCNNNNNNNN\",\n    rcut: 14,\n    fcut: 10\n  },\n  BglI: {\n    rseq: \"GCCNNNNNGGC\",\n    rcut: 4,\n    fcut: 7\n  },\n  BglII: {\n    rseq: \"AGATCT\",\n    rcut: 5,\n    fcut: 1\n  },\n  BlpI: {\n    rseq: \"GCTNAGC\",\n    rcut: 5,\n    fcut: 2\n  },\n  BmgBI: {\n    rseq: \"CACGTC\",\n    rcut: 3,\n    fcut: 3\n  },\n  BmrI: {\n    rseq: \"ACTGGGNNNNN\",\n    rcut: 10,\n    fcut: 11\n  },\n  BmtI: {\n    rseq: \"GCTAGC\",\n    rcut: 1,\n    fcut: 5\n  },\n  BpmI: {\n    rseq: \"CTGGAGNNNNNNNNNNNNNNNN\",\n    rcut: 20,\n    fcut: 22\n  },\n  Bpu10I: {\n    rseq: \"CCTNAGC\",\n    rcut: 5,\n    fcut: 2\n  },\n  BpuEI: {\n    rseq: \"CTTGAGNNNNNNNNNNNNNNNN\",\n    rcut: 20,\n    fcut: 22\n  },\n  BsaAI: {\n    rseq: \"YACGTR\",\n    rcut: 3,\n    fcut: 3\n  },\n  BsaBI: {\n    rseq: \"GATNNNNATC\",\n    rcut: 5,\n    fcut: 5\n  },\n  BsaHI: {\n    rseq: \"GRCGYC\",\n    rcut: 4,\n    fcut: 2\n  },\n  BsaI: {\n    rseq: \"GGTCTCNNNNN\",\n    rcut: 11,\n    fcut: 7\n  },\n  BsaWI: {\n    rseq: \"WCCGGW\",\n    rcut: 5,\n    fcut: 1\n  },\n  BsaXI: {\n    rseq: \"NNNNNNNNNNNNACNNNNNCTCCNNNNNNNNNN\",\n    rcut: 30,\n    fcut: 33\n  },\n  BseRI: {\n    rseq: \"GAGGAGNNNNNNNNNN\",\n    rcut: 14,\n    fcut: 16\n  },\n  BseYI: {\n    rseq: \"CCCAGC\",\n    rcut: 5,\n    fcut: 1\n  },\n  BsgI: {\n    rseq: \"GTGCAGNNNNNNNNNNNNNNNN\",\n    rcut: 20,\n    fcut: 22\n  },\n  BsiEI: {\n    rseq: \"CGRYCG\",\n    rcut: 2,\n    fcut: 4\n  },\n  BsiHKAI: {\n    rseq: \"GWGCWC\",\n    rcut: 1,\n    fcut: 5\n  },\n  BsiWI: {\n    rseq: \"CGTACG\",\n    rcut: 5,\n    fcut: 1\n  },\n  BsmBI: {\n    rseq: \"CGTCTCNNNNN\",\n    rcut: 11,\n    fcut: 7\n  },\n  BsmI: {\n    rseq: \"GAATGCN\",\n    rcut: 5,\n    fcut: 7\n  },\n  BsoBI: {\n    rseq: \"CYCGRG\",\n    rcut: 5,\n    fcut: 1\n  },\n  Bsp1286I: {\n    rseq: \"GDGCHC\",\n    rcut: 1,\n    fcut: 5\n  },\n  BspDI: {\n    rseq: \"ATCGAT\",\n    rcut: 4,\n    fcut: 2\n  },\n  BspEI: {\n    rseq: \"TCCGGA\",\n    rcut: 5,\n    fcut: 1\n  },\n  BspHI: {\n    rseq: \"TCATGA\",\n    rcut: 5,\n    fcut: 1\n  },\n  BspMI: {\n    rseq: \"ACCTGCNNNNNNNN\",\n    rcut: 14,\n    fcut: 10\n  },\n  BsrBI: {\n    rseq: \"CCGCTC\",\n    rcut: 3,\n    fcut: 3\n  },\n  BsrDI: {\n    rseq: \"GCAATGNN\",\n    rcut: 6,\n    fcut: 8\n  },\n  BsrFI: {\n    rseq: \"RCCGGY\",\n    rcut: 5,\n    fcut: 1\n  },\n  BsrGI: {\n    rseq: \"TGTACA\",\n    rcut: 5,\n    fcut: 1\n  },\n  BssHII: {\n    rseq: \"GCGCGC\",\n    rcut: 5,\n    fcut: 1\n  },\n  BssSI: {\n    rseq: \"CACGAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  BstAPI: {\n    rseq: \"GCANNNNNTGC\",\n    rcut: 4,\n    fcut: 7\n  },\n  BstBI: {\n    rseq: \"TTCGAA\",\n    rcut: 4,\n    fcut: 2\n  },\n  BstEII: {\n    rseq: \"GGTNACC\",\n    rcut: 6,\n    fcut: 1\n  },\n  BstXI: {\n    rseq: \"CCANNNNNNTGG\",\n    rcut: 4,\n    fcut: 8\n  },\n  BstYI: {\n    rseq: \"RGATCY\",\n    rcut: 5,\n    fcut: 1\n  },\n  BstZ17I: {\n    rseq: \"GTATAC\",\n    rcut: 3,\n    fcut: 3\n  },\n  Bsu36I: {\n    rseq: \"CCTNAGG\",\n    rcut: 5,\n    fcut: 2\n  },\n  BtgI: {\n    rseq: \"CCRYGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  BtgZI: {\n    rseq: \"GCGATGNNNNNNNNNNNNNN\",\n    rcut: 20,\n    fcut: 16\n  },\n  BtsI: {\n    rseq: \"GCAGTGNN\",\n    rcut: 6,\n    fcut: 8\n  },\n  ClaI: {\n    rseq: \"ATCGAT\",\n    rcut: 4,\n    fcut: 2\n  },\n  DraI: {\n    rseq: \"TTTAAA\",\n    rcut: 3,\n    fcut: 3\n  },\n  DraIII: {\n    rseq: \"CACNNNGTG\",\n    rcut: 3,\n    fcut: 6\n  },\n  DrdI: {\n    rseq: \"GACNNNNNNGTC\",\n    rcut: 5,\n    fcut: 7\n  },\n  EaeI: {\n    rseq: \"YGGCCR\",\n    rcut: 5,\n    fcut: 1\n  },\n  EagI: {\n    rseq: \"CGGCCG\",\n    rcut: 5,\n    fcut: 1\n  },\n  EarI: {\n    rseq: \"CTCTTCNNNN\",\n    rcut: 10,\n    fcut: 7\n  },\n  EciI: {\n    rseq: \"GGCGGANNNNNNNNNNN\",\n    rcut: 15,\n    fcut: 17\n  },\n  Eco53kI: {\n    rseq: \"GAGCTC\",\n    rcut: 3,\n    fcut: 3\n  },\n  EcoNI: {\n    rseq: \"CCTNNNNNAGG\",\n    rcut: 6,\n    fcut: 5\n  },\n  EcoO109I: {\n    rseq: \"RGGNCCY\",\n    rcut: 5,\n    fcut: 2\n  },\n  EcoRI: {\n    rseq: \"GAATTC\",\n    rcut: 5,\n    fcut: 1\n  },\n  EcoRV: {\n    rseq: \"GATATC\",\n    rcut: 3,\n    fcut: 3\n  },\n  Esp3I: {\n    rseq: \"CGTCTCNNNNN\",\n    rcut: 11,\n    fcut: 7\n  },\n  FspI: {\n    rseq: \"TGCGCA\",\n    rcut: 3,\n    fcut: 3\n  },\n  HaeII: {\n    rseq: \"RGCGCY\",\n    rcut: 1,\n    fcut: 5\n  },\n  HincII: {\n    rseq: \"GTYRAC\",\n    rcut: 3,\n    fcut: 3\n  },\n  HindIII: {\n    rseq: \"AAGCTT\",\n    rcut: 5,\n    fcut: 1\n  },\n  HpaI: {\n    rseq: \"GTTAAC\",\n    rcut: 3,\n    fcut: 3\n  },\n  KasI: {\n    rseq: \"GGCGCC\",\n    rcut: 5,\n    fcut: 1\n  },\n  KpnI: {\n    rseq: \"GGTACC\",\n    rcut: 1,\n    fcut: 5\n  },\n  MfeI: {\n    rseq: \"CAATTG\",\n    rcut: 5,\n    fcut: 1\n  },\n  MluI: {\n    rseq: \"ACGCGT\",\n    rcut: 5,\n    fcut: 1\n  },\n  MmeI: {\n    rseq: \"TCCRACNNNNNNNNNNNNNNNNNNNN\",\n    rcut: 24,\n    fcut: 26\n  },\n  MscI: {\n    rseq: \"TGGCCA\",\n    rcut: 3,\n    fcut: 3\n  },\n  MslI: {\n    rseq: \"CAYNNNNRTG\",\n    rcut: 5,\n    fcut: 5\n  },\n  MspA1I: {\n    rseq: \"CMGCKG\",\n    rcut: 3,\n    fcut: 3\n  },\n  NaeI: {\n    rseq: \"GCCGGC\",\n    rcut: 3,\n    fcut: 3\n  },\n  NarI: {\n    rseq: \"GGCGCC\",\n    rcut: 4,\n    fcut: 2\n  },\n  NcoI: {\n    rseq: \"CCATGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  NdeI: {\n    rseq: \"CATATG\",\n    rcut: 4,\n    fcut: 2\n  },\n  NgoMIV: {\n    rseq: \"GCCGGC\",\n    rcut: 5,\n    fcut: 1\n  },\n  NheI: {\n    rseq: \"GCTAGC\",\n    rcut: 5,\n    fcut: 1\n  },\n  NmeAIII: {\n    rseq: \"GCCGAGNNNNNNNNNNNNNNNNNNNN\",\n    rcut: 25,\n    fcut: 26\n  },\n  NruI: {\n    rseq: \"TCGCGA\",\n    rcut: 3,\n    fcut: 3\n  },\n  NsiI: {\n    rseq: \"ATGCAT\",\n    rcut: 1,\n    fcut: 5\n  },\n  NspI: {\n    rseq: \"RCATGY\",\n    rcut: 1,\n    fcut: 5\n  },\n  PaeR7I: {\n    rseq: \"CTCGAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  PciI: {\n    rseq: \"ACATGT\",\n    rcut: 5,\n    fcut: 1\n  },\n  PflFI: {\n    rseq: \"GACNNNGTC\",\n    rcut: 5,\n    fcut: 4\n  },\n  PflMI: {\n    rseq: \"CCANNNNNTGG\",\n    rcut: 4,\n    fcut: 7\n  },\n  PluTI: {\n    rseq: \"GGCGCC\",\n    rcut: 1,\n    fcut: 5\n  },\n  PmlI: {\n    rseq: \"CACGTG\",\n    rcut: 3,\n    fcut: 3\n  },\n  PshAI: {\n    rseq: \"GACNNNNGTC\",\n    rcut: 5,\n    fcut: 5\n  },\n  PsiI: {\n    rseq: \"TTATAA\",\n    rcut: 3,\n    fcut: 3\n  },\n  PspOMI: {\n    rseq: \"GGGCCC\",\n    rcut: 5,\n    fcut: 1\n  },\n  PstI: {\n    rseq: \"CTGCAG\",\n    rcut: 1,\n    fcut: 5\n  },\n  PvuI: {\n    rseq: \"CGATCG\",\n    rcut: 2,\n    fcut: 4\n  },\n  PvuII: {\n    rseq: \"CAGCTG\",\n    rcut: 3,\n    fcut: 3\n  },\n  SacI: {\n    rseq: \"GAGCTC\",\n    rcut: 1,\n    fcut: 5\n  },\n  SacII: {\n    rseq: \"CCGCGG\",\n    rcut: 2,\n    fcut: 4\n  },\n  SalI: {\n    rseq: \"GTCGAC\",\n    rcut: 5,\n    fcut: 1\n  },\n  ScaI: {\n    rseq: \"AGTACT\",\n    rcut: 3,\n    fcut: 3\n  },\n  SfcI: {\n    rseq: \"CTRYAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  SfoI: {\n    rseq: \"GGCGCC\",\n    rcut: 3,\n    fcut: 3\n  },\n  SmaI: {\n    rseq: \"CCCGGG\",\n    rcut: 3,\n    fcut: 3\n  },\n  SmlI: {\n    rseq: \"CTYRAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  SnaBI: {\n    rseq: \"TACGTA\",\n    rcut: 3,\n    fcut: 3\n  },\n  SpeI: {\n    rseq: \"ACTAGT\",\n    rcut: 5,\n    fcut: 1\n  },\n  SphI: {\n    rseq: \"GCATGC\",\n    rcut: 1,\n    fcut: 5\n  },\n  SspI: {\n    rseq: \"AATATT\",\n    rcut: 3,\n    fcut: 3\n  },\n  StuI: {\n    rseq: \"AGGCCT\",\n    rcut: 3,\n    fcut: 3\n  },\n  StyI: {\n    rseq: \"CCWWGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  TspMI: {\n    rseq: \"CCCGGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  Tth111I: {\n    rseq: \"GACNNNGTC\",\n    rcut: 5,\n    fcut: 4\n  },\n  XbaI: {\n    rseq: \"TCTAGA\",\n    rcut: 5,\n    fcut: 1\n  },\n  XcmI: {\n    rseq: \"CCANNNNNNNNNTGG\",\n    rcut: 7,\n    fcut: 8\n  },\n  XhoI: {\n    rseq: \"CTCGAG\",\n    rcut: 5,\n    fcut: 1\n  },\n  XmaI: {\n    rseq: \"CCCGGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  XmnI: {\n    rseq: \"GAANNNNTTC\",\n    rcut: 5,\n    fcut: 5\n  },\n  ZraI: {\n    rseq: \"GACGTC\",\n    rcut: 3,\n    fcut: 3\n  },\n  AlwI: {\n    rseq: \"GGATCNNNNN\",\n    rcut: 10,\n    fcut: 9\n  },\n  ApeKI: {\n    rseq: \"GCWGC\",\n    rcut: 4,\n    fcut: 1\n  },\n  AvaII: {\n    rseq: \"GGWCC\",\n    rcut: 4,\n    fcut: 1\n  },\n  BbvI: {\n    rseq: \"GCAGCNNNNNNNNNNNN\",\n    rcut: 17,\n    fcut: 13\n  },\n  BccI: {\n    rseq: \"CCATCNNNNN\",\n    rcut: 10,\n    fcut: 9\n  },\n  BceAI: {\n    rseq: \"ACGGCNNNNNNNNNNNNNN\",\n    rcut: 19,\n    fcut: 17\n  },\n  BcoDI: {\n    rseq: \"GTCTCNNNNN\",\n    rcut: 10,\n    fcut: 6\n  },\n  BsmAI: {\n    rseq: \"GTCTCNNNNN\",\n    rcut: 10,\n    fcut: 6\n  },\n  BsmFI: {\n    rseq: \"GGGACNNNNNNNNNNNNNN\",\n    rcut: 19,\n    fcut: 15\n  },\n  BspCNI: {\n    rseq: \"CTCAGNNNNNNNNN\",\n    rcut: 12,\n    fcut: 14\n  },\n  BsrI: {\n    rseq: \"ACTGGN\",\n    rcut: 4,\n    fcut: 6\n  },\n  BstNI: {\n    rseq: \"CCWGG\",\n    rcut: 3,\n    fcut: 2\n  },\n  BtsCI: {\n    rseq: \"GGATGNN\",\n    rcut: 5,\n    fcut: 7\n  },\n  BtsIMutI: {\n    rseq: \"CAGTGNN\",\n    rcut: 5,\n    fcut: 7\n  },\n  DpnI: {\n    rseq: \"GmATC\",\n    rcut: 3,\n    fcut: 3\n  },\n  FauI: {\n    rseq: \"CCCGCNNNNNN\",\n    rcut: 11,\n    fcut: 9\n  },\n  FokI: {\n    rseq: \"GGATGNNNNNNNNNNNNN\",\n    rcut: 18,\n    fcut: 14\n  },\n  HgaI: {\n    rseq: \"GACGCNNNNNNNNNN\",\n    rcut: 15,\n    fcut: 10\n  },\n  HphI: {\n    rseq: \"GGTGANNNNNNNN\",\n    rcut: 12,\n    fcut: 13\n  },\n  Hpy99I: {\n    rseq: \"CGWCG\",\n    rcut: 0,\n    fcut: 5\n  },\n  HpyAV: {\n    rseq: \"CCTTCNNNNNN\",\n    rcut: 10,\n    fcut: 11\n  },\n  LpnPI: {\n    rseq: \"CmCDGNNNNNNNNNNNNNN\",\n    rcut: 19,\n    fcut: 15\n  },\n  MboII: {\n    rseq: \"GAAGANNNNNNNN\",\n    rcut: 12,\n    fcut: 13\n  },\n  MlyI: {\n    rseq: \"GAGTCNNNNN\",\n    rcut: 10,\n    fcut: 10\n  },\n  NciI: {\n    rseq: \"CCSGG\",\n    rcut: 3,\n    fcut: 2\n  },\n  PleI: {\n    rseq: \"GAGTCNNNNN\",\n    rcut: 10,\n    fcut: 9\n  },\n  PspGI: {\n    rseq: \"CCWGG\",\n    rcut: 5,\n    fcut: 0\n  },\n  SfaNI: {\n    rseq: \"GCATCNNNNNNNNN\",\n    rcut: 14,\n    fcut: 10\n  },\n  TfiI: {\n    rseq: \"GAWTC\",\n    rcut: 4,\n    fcut: 1\n  },\n  TseI: {\n    rseq: \"GCWGC\",\n    rcut: 4,\n    fcut: 1\n  },\n  Tsp45I: {\n    rseq: \"GTSAC\",\n    rcut: 5,\n    fcut: 0\n  },\n  TspRI: {\n    rseq: \"NNCASTGNN\",\n    rcut: 0,\n    fcut: 9\n  },\n  AciI: {\n    rseq: \"CCGC\",\n    rcut: 3,\n    fcut: 1\n  },\n  AluI: {\n    rseq: \"AGCT\",\n    rcut: 2,\n    fcut: 2\n  },\n  BfaI: {\n    rseq: \"CTAG\",\n    rcut: 3,\n    fcut: 1\n  },\n  BsaJI: {\n    rseq: \"CCNNGG\",\n    rcut: 5,\n    fcut: 1\n  },\n  BslI: {\n    rseq: \"CCNNNNNNNGG\",\n    rcut: 4,\n    fcut: 7\n  },\n  BstUI: {\n    rseq: \"CGCG\",\n    rcut: 2,\n    fcut: 2\n  },\n  Cac8I: {\n    rseq: \"GCNNGC\",\n    rcut: 3,\n    fcut: 3\n  },\n  CviAII: {\n    rseq: \"CATG\",\n    rcut: 3,\n    fcut: 1\n  },\n  \"CviKI-1\": {\n    rseq: \"RGCY\",\n    rcut: 2,\n    fcut: 2\n  },\n  CviQI: {\n    rseq: \"GTAC\",\n    rcut: 3,\n    fcut: 1\n  },\n  DdeI: {\n    rseq: \"CTNAG\",\n    rcut: 4,\n    fcut: 1\n  },\n  DpnII: {\n    rseq: \"GATC\",\n    rcut: 4,\n    fcut: 0\n  },\n  FatI: {\n    rseq: \"CATG\",\n    rcut: 4,\n    fcut: 0\n  },\n  Fnu4HI: {\n    rseq: \"GCNGC\",\n    rcut: 3,\n    fcut: 2\n  },\n  HaeIII: {\n    rseq: \"GGCC\",\n    rcut: 2,\n    fcut: 2\n  },\n  HhaI: {\n    rseq: \"GCGC\",\n    rcut: 1,\n    fcut: 3\n  },\n  HinP1I: {\n    rseq: \"GCGC\",\n    rcut: 3,\n    fcut: 1\n  },\n  HinfI: {\n    rseq: \"GANTC\",\n    rcut: 4,\n    fcut: 1\n  },\n  HpaII: {\n    rseq: \"CCGG\",\n    rcut: 3,\n    fcut: 1\n  },\n  Hpy166II: {\n    rseq: \"GTNNAC\",\n    rcut: 3,\n    fcut: 3\n  },\n  Hpy188I: {\n    rseq: \"TCNGA\",\n    rcut: 2,\n    fcut: 3\n  },\n  Hpy188III: {\n    rseq: \"TCNNGA\",\n    rcut: 4,\n    fcut: 2\n  },\n  HpyCH4III: {\n    rseq: \"ACNGT\",\n    rcut: 2,\n    fcut: 3\n  },\n  HpyCH4IV: {\n    seq: \"ACGT\",\n    rcut: 3,\n    fcut: 1\n  },\n  HpyCH4V: {\n    rseq: \"TGCA\",\n    rcut: 2,\n    fcut: 2\n  },\n  MboI: {\n    rseq: \"GATC\",\n    rcut: 4,\n    fcut: 0\n  },\n  MluCI: {\n    rseq: \"AATT\",\n    rcut: 4,\n    fcut: 0\n  },\n  MnlI: {\n    rseq: \"CCTCNNNNNNN\",\n    rcut: 10,\n    fcut: 11\n  },\n  MseI: {\n    rseq: \"TTAA\",\n    rcut: 3,\n    fcut: 1\n  },\n  MspI: {\n    rseq: \"CCGG\",\n    rcut: 3,\n    fcut: 1\n  },\n  MwoI: {\n    rseq: \"GCNNNNNNNGC\",\n    rcut: 4,\n    fcut: 7\n  },\n  NlaIII: {\n    rseq: \"CATG\",\n    rcut: 0,\n    fcut: 4\n  },\n  NlaIV: {\n    rseq: \"GGNNCC\",\n    rcut: 3,\n    fcut: 3\n  },\n  RsaI: {\n    rseq: \"GTAC\",\n    rcut: 2,\n    fcut: 2\n  },\n  Sau3AI: {\n    rseq: \"GATC\",\n    rcut: 4,\n    fcut: 0\n  },\n  Sau96I: {\n    rseq: \"GGNCC\",\n    rcut: 4,\n    fcut: 1\n  },\n  ScrFI: {\n    rseq: \"CCNGG\",\n    rcut: 3,\n    fcut: 2\n  },\n  StyD4I: {\n    rseq: \"CCNGG\",\n    rcut: 5,\n    fcut: 0\n  },\n  TaqI: {\n    rseq: \"TCGA\",\n    rcut: 3,\n    fcut: 1\n  },\n  AbaSI: {\n    rseq: \"hmCNNNNNNNNNNN\",\n    rcut: 12,\n    fcut: 14\n  },\n  FspEI: {\n    rseq: \"CmCNNNNNNNNNNNNNNNN\",\n    rcut: 19,\n    fcut: 15\n  },\n  MspJI: {\n    rseq: \"mCNNRNNNNNNNNNNNNN\",\n    rcut: 18,\n    fcut: 14\n  }\n};\n","/**\n * Deep equality comparison between two objects\n *\n * copy-paste from StackOverflow: https://stackoverflow.com/a/25456134\n *\n * @param {object} x left object for comparison\n * @param {object} y right object for comparison\n */\nconst isEqual = (x, y) => {\n  if (x === y) {\n    return true;\n  } else if (\n    typeof x === \"object\" &&\n    x !== null &&\n    typeof y === \"object\" &&\n    y !== null\n  ) {\n    if (Object.keys(x).length !== Object.keys(y).length) return false;\n\n    for (var prop in x) {\n      if (y.hasOwnProperty(prop)) {\n        if (!isEqual(x[prop], y[prop])) return false;\n      } else return false;\n    }\n\n    return true;\n  }\n  return false;\n};\n\nexport default isEqual;\n","import enzymes from \"./enzymes\";\nimport isEqual from \"./isEqual\";\nimport { dnaComplement } from \"./parser\";\nimport randomid from \"./randomid\";\nimport { translateWildNucleotides } from \"./sequence\";\n\n/**\n * cutSitesInRows\n *\n * for the list of the enzymes, find their cut sites and split them into rows compatible\n * with the sequence viewer\n *\n * @param  {String} seq            [the input seq to be cut]\n * @param  {[String]} enzymeList   [the list of enzymes to find indexes for]\n * @param  {Number} bpsPerRow      [the length of each row]\n * @return {[{\n *         {String}  name          [the name of the enzyme at this site]\n *         {Number}  index         [index of the enzyme cutsite]\n * }]}  [the cutSites in a format compatible with the SeqBlocks/CutSites]\n */\nexport const cutSitesInRows = (seq, enzymeList) => {\n  const seqToCut = (seq + seq).toUpperCase();\n  const filteredEnzymes = enzymeList.filter(e => !!enzymes[e]);\n\n  // find all the cut sites for the given row\n  const cutSites = filteredEnzymes.reduce((acc, e) => {\n    const cuts = findCutSites(enzymes[e], seqToCut, seq.length)\n      .filter(c => !(c.fcut === 0 && c.rcut === 0))\n      .map(c => ({\n        id: randomid(),\n        name: e,\n        start: c.start,\n        end: c.end % seq.length,\n        fcut: c.fcut < seq.length ? c.fcut : c.fcut - seq.length,\n        rcut: c.rcut < seq.length ? c.rcut : c.rcut - seq.length,\n        recogStrand: c.recogStrand,\n        recogStart: c.recogStart,\n        recogEnd: c.recogEnd % seq.length\n      }));\n    return acc.concat(cuts);\n  }, []);\n\n  return cutSites;\n};\n\n/**\n * findCutSites\n *\n * Search through the sequence with the given enzyme and return an array of cut\n * and hang indexes for splitting up the sequence with the passed enzymes\n *\n * @param  {String}  enzyme         [enzyme object, from enzymes.js]\n * @param  {String}  seqToSearch    [string of the sequence to be searched]\n * @param  {Number}  seqToCutLength [length of the sequence to be cut]\n * @return {[CutSite]} [the list of resulting cut and hang indexes]\n */\nconst findCutSites = (\n  enzyme,\n  seqToSearch,\n  seqToCutLength,\n  enzymeName = null\n) => {\n  // get the recognitionSite, fcut, and rcut\n  let { fcut, rcut, rseq } = enzyme;\n  if (!rseq) {\n    ({ fcut, rcut, rseq } = enzymes[enzyme]);\n  }\n\n  const recogSeq = rseq.toUpperCase();\n  let recogStart = 0;\n  let recogEnd = recogSeq.length;\n  while (recogSeq[recogStart] === \"N\") {\n    recogStart += 1;\n  }\n  while (recogSeq[recogEnd - 1] === \"N\") {\n    recogEnd -= 1;\n  }\n\n  const recogLength = rseq.length;\n  const nucAmbig = new RegExp(/[^ATGC]/, \"gi\");\n  if (nucAmbig.test(rseq)) rseq = translateWildNucleotides(rseq);\n  const regTest = new RegExp(rseq, \"gi\");\n\n  // this is in the forward direction, ie, when not checking the complement possibility\n  // start search for cut sites\n  const cutSiteIndices = [];\n  let startIndex = 0;\n  let result = regTest.exec(seqToSearch); // returns null if nothing found\n  let index = result ? result.index : -1;\n\n  // while another match is found and we haven't exceeded input sequence length\n  while (index > -1 && index < seqToCutLength) {\n    // add the cut site index, after correcting for actual cut site index\n    cutSiteIndices.push({\n      cutEnzymes: enzymeName\n        ? { start: [enzymeName], end: [enzymeName] }\n        : null, // enzymes that contributed to this cut site\n      fcut: index + fcut,\n      rcut: index + rcut,\n      start: index,\n      end: index + recogLength,\n      recogStrand: 1,\n      recogStart: index + recogStart,\n      recogEnd: index + recogEnd\n    });\n    startIndex = index + 1;\n    index = seqToSearch.indexOf(rseq, startIndex);\n  }\n\n  // this is in the reverse direction, ie, when checking the complement\n  const recogComp = rseq\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n\n  let { compSeq: inverComp } = dnaComplement(recogComp);\n  if (nucAmbig.test(inverComp)) inverComp = translateWildNucleotides(inverComp);\n\n  const fcutComp = recogLength - fcut; // flip the cut and hang indices\n  const rcutComp = recogLength - rcut;\n\n  startIndex = 0; // restart the search, again over the template sequence\n  result = regTest.exec(seqToSearch); // returns null if nothing found\n  index = result ? result.index : -1;\n\n  while (index > -1 && index < seqToCutLength) {\n    // same above, except correcting for the new reverse complement indexes\n    cutSiteIndices.push({\n      cutEnzymes: enzymeName\n        ? { start: [enzymeName], end: [enzymeName] }\n        : null, // enzymes that contributed to this cut site\n      fcut: index + recogLength - fcutComp,\n      rcut: index + recogLength - rcutComp,\n      start: index,\n      end: index + recogLength,\n      recogStrand: -1,\n      recogStart: index + recogStart,\n      recogEnd: index + recogEnd\n    });\n    startIndex = index + 1;\n    index = seqToSearch.indexOf(inverComp, startIndex);\n  }\n\n  // reduce so there's only one enzyme per template cut index\n  const uniqueCuts = Object.values(\n    cutSiteIndices.reduce((acc, c) => ({ [c.fcut]: c, ...acc }), {})\n  );\n\n  // sort with increasing sequence cut index\n  uniqueCuts.sort((a, b) => a.fcut - b.fcut);\n\n  return uniqueCuts;\n};\n\n/**\n * digestPart\n *\n * if the seqToCut or the compSeqToCut are padded with stars, ie they have overhangs, shorten the\n * searchable index range, since those parts of the sequence should not be searchable and re-cut\n *\n * @param  {String} enzymeName [name of the enzyme to cut the sequence]\n * @param  {Part} part [the part to be cut]\n * @param  {Boolean} circularCheck [whether it's a plasmid]\n * @return {[Part]}  [the list of cut parts]\n */\nconst digestPart = (enzymeName, part, circularCheck) => {\n  // get the sequence information\n  let { seq, compSeq, annotations } = part;\n\n  let seqToSearch = seq.toUpperCase();\n  const seqToCutLength = seq.length;\n\n  // if its circular, double the sequence to account for cut sites that extend over the\n  // length of the whole plasmid (easier right now, change later) for issue #489\n  if (circularCheck) {\n    seq += seq;\n    compSeq += compSeq;\n    seqToSearch += seqToSearch;\n    // ugly but needed defensive programming to make sure all annotations that\n    // wrap around the 0 index are accounted for\n    annotations = annotations\n      .map(a => ({\n        ...a,\n        end: a.end < a.start ? a.end + seqToCutLength : a.end\n      }))\n      .reduce(\n        (acc, a) =>\n          acc.concat(a, {\n            ...a,\n            start: a.start + seqToCutLength,\n            end: a.end + seqToCutLength\n          }),\n        []\n      );\n  }\n\n  // find the actual sequence cut sites\n  const cutSiteIndices = findCutSites(\n    enzymes[enzymeName],\n    seqToSearch,\n    seqToCutLength\n  );\n\n  // no cut sites were found with the given sequence\n  if (cutSiteIndices.length < 1) {\n    return part;\n  }\n\n  // small utility function that 1) cuts up seqToCut and compSeqToCut\n  // 2) pads the overhang site with stars and 3) adds them to the\n  // list of cuts pieces of dna\n  const fragmentedSequences = [];\n  const cutSeqsGenerator = (\n    cutSequenceStart,\n    cutSequenceEnd,\n    cutComplementStart,\n    cutComplementEnd\n  ) => {\n    // cut the dna\n    let cutSeq = seq.substring(cutSequenceStart, cutSequenceEnd);\n    let cutCompSeq = compSeq.substring(cutComplementStart, cutComplementEnd);\n\n    // generate an overhang by checking for differences in the start index of the template strand\n    // versus the start index of the complement strand\n    const startDiff = Math.abs(cutSequenceStart - cutComplementStart);\n    if (cutSequenceStart < cutComplementStart) {\n      cutCompSeq = cutCompSeq.padStart(cutCompSeq.length + startDiff, \"*\");\n    } else if (cutSequenceStart > cutComplementStart) {\n      cutSeq = cutSeq.padStart(cutSeq.length + startDiff, \"*\");\n    }\n\n    // and now for differences in last indices at the end of the sequences\n    const endDiff = Math.abs(cutSequenceEnd - cutComplementEnd);\n    if (cutSequenceEnd > cutComplementEnd) {\n      cutCompSeq = cutCompSeq.padEnd(cutCompSeq.length + endDiff, \"*\");\n    } else if (cutSequenceEnd < cutComplementEnd) {\n      cutSeq = cutSeq.padEnd(cutSeq.length + endDiff, \"*\");\n    }\n\n    // adjust the locations of all annotations to match their new locations\n    const newSeqLength = cutSequenceEnd - cutSequenceStart;\n    const adjustedAnnotations = annotations\n      .map(a => ({\n        ...a,\n        start: a.start - cutSequenceStart,\n        end: a.end - cutSequenceStart\n      }))\n      .filter(\n        a =>\n          (a.start >= 0 && a.start < newSeqLength) ||\n          (a.end > 0 && a.end <= newSeqLength) ||\n          (a.start < 0 && a.end > newSeqLength)\n      )\n      .map(a => ({\n        ...a,\n        start: Math.max(a.start, 0),\n        end: Math.min(a.end, newSeqLength + endDiff)\n      }));\n\n    // push the newly fragmented sequences to the list\n    if (!(cutSeq.startsWith(\"*\") && cutCompSeq.startsWith(\"*\"))) {\n      fragmentedSequences.push({\n        seq: cutSeq,\n        compSeq: cutCompSeq,\n        annotations: adjustedAnnotations\n      });\n    }\n  };\n\n  const singleCut = cutSiteIndices.length === 1;\n  cutSiteIndices.forEach((cutInfo, i) => {\n    const { fcut: seqCutIdx, rcut: compCutIdx } = cutInfo;\n    if (cutSiteIndices[i + 1]) {\n      // not final site\n      cutSeqsGenerator(\n        seqCutIdx, // this site until next cut site\n        cutSiteIndices[i + 1].fcut,\n        compCutIdx,\n        cutSiteIndices[i + 1].rcut\n      );\n    } else if (circularCheck) {\n      // final cut site on plasmid\n      cutSeqsGenerator(\n        seqCutIdx, // this site until index of first cut site on other side of plasmid\n        singleCut\n          ? seqCutIdx + seqToCutLength // if it's the only one, add the full length\n          : cutSiteIndices[0].fcut + seqToCutLength, // else, stop at the first one\n        compCutIdx,\n        singleCut\n          ? compCutIdx + seqToCutLength // if it's the only one, add the full length\n          : cutSiteIndices[0].rcut + seqToCutLength // else, stop at the first one\n      );\n    } else {\n      // final cut site on linear piece of dna\n      if (singleCut) {\n        // need to push the first half as well\n        cutSeqsGenerator(\n          0, // this site until the end of the DNA\n          seqCutIdx,\n          0,\n          compCutIdx\n        );\n      }\n\n      cutSeqsGenerator(\n        seqCutIdx, // this site until the end of the DNA\n        seqToCutLength,\n        compCutIdx,\n        seqToCutLength\n      );\n    }\n  });\n\n  return fragmentedSequences;\n};\n\n/**\n * needed because Mongo is storing annotation positions as strings,\n * and I need them as ints. This hack could be avoided if everything\n * involving data manipulation is kept client side\n * @param {[Annotation]} anns   the annotations to be casted\n */\nconst annPosToInts = anns =>\n  anns.map(a => ({\n    ...a,\n    start: +a.start,\n    end: +a.end\n  }));\n\n/**\n * digest\n *\n * Cuts a part with the list of enzymes, and returns a new list of\n * parts after digestion\n *\n * @param  {[String]} enzymeNames [the name of the enzymes to cut with]\n * @param  {Part} part [the part to cut]\n * @return {[Part]}             [the resulting cut parts]\n */\nexport const digest = (enzymeNames, part) => {\n  const { circular = true } = part;\n  // if no enzymes are passed or one of the enzymes is unknown\n  const filteredEnzymes = enzymeNames.filter(e => !!enzymes[e]);\n  if (!filteredEnzymes.length) {\n    return [part];\n  }\n\n  // cleaning part (mongo int cast problem)\n  const inputPart = {\n    ...part,\n    annotations: annPosToInts(part.annotations || [])\n  };\n\n  // loop through every enzyme and recut the sequence with that enzyme\n  const newParts = filteredEnzymes.reduce(\n    (accParts, enzyme) => {\n      // expensive, but checks whether part has been cut (TODO optimize w/ return)\n      const circularCheck = circular && isEqual(accParts[0], inputPart);\n      return accParts.reduce(\n        (acc, p) =>\n          // cut the sequence with the current enzyme into new sequences\n          acc.concat(digestPart(enzyme, p, circularCheck)),\n        []\n      );\n    },\n    [inputPart]\n  );\n\n  // add the rest of their fields\n  return newParts.map((p, i) => ({\n    ...p,\n    _id: randomid(),\n    name: `${part.name}_${i}`,\n    date: new Date(),\n    source: [part._id]\n  }));\n};\n","import { dnaComplement } from \"./parser\";\nimport {\n  nucleotides,\n  nucleotideWildCards,\n  reverse,\n  translateWildNucleotides\n} from \"./sequence\";\n\n/**\n * @typedef {Object} SearchResult\n * @type {object}\n * @property {number} start the start index of the search result\n * @property {number} end the end index of the search result\n * @property {number} direction -1, 0, or 1 for the direction of the search result\n */\n\n/**\n * Search the seq in the forward and reverse complement strands.\n * Return all matched regions. Accounts for abiguous BP encodings and allows for mismatches\n *\n * @param {string} query the query string to search with\n * @param {number} mismatch the number of allowable mismatches\n * @param {string} seq the sequence being searched\n * @returns {[SearchResult]} an array of search results\n */\nexport default (query, mismatch, seq) => {\n  if (!query || !query.length || !seq || !seq.length) {\n    return [];\n  }\n\n  // Only start searching after query is at least 3 letters, lowest meaningful length\n  if (query.length - mismatch < 3) {\n    console.error(\"search too broad, please narrow parameters.\");\n    return [];\n  }\n\n  const { compSeq } = dnaComplement(seq);\n\n  const indices = search(query, seq, mismatch, true);\n  const compIndices = search(reverse(query), compSeq, mismatch, false);\n\n  if (indices.length > 4000 || compIndices.length > 4000) {\n    // failing out here because rendering will be too expensive\n    console.error(\n      `Search too broad, ${indices.length +\n        compIndices.length} matches. Please narrow parameters.`\n    );\n    return [];\n  }\n\n  const searchResults = indices\n    .concat(compIndices)\n    .sort((a, b) => a.start - b.start);\n\n  return searchResults;\n};\n\n/**\n * Search the sequence\n *\n * If there's no mismatch, just use a RegExp to search over the sequence repeatedly\n * Otherwise, use the modified hamming search in `searchWithMismatch()`\n *\n * @param {string} query the search pattern\n * @param {string} subject the sequence to search over\n * @param {number} mismatch the number of allowable mismatches\n * @param {boolean} fwd whether this is in the FWD direction\n * @returns {[SeqReturn]}\n */\nconst search = (query, subject, mismatch, fwd) => {\n  if (mismatch > 0) {\n    return searchWithMismatch(query, subject, mismatch, fwd);\n  }\n\n  const seqLength = subject.length;\n  const translatedQuery = translateWildNucleotides(query).trim();\n  const regex = new RegExp(translatedQuery, \"gi\");\n  let result = regex.exec(subject);\n  const results = [];\n  while (result) {\n    const start = result.index % seqLength;\n    const end = (start + query.length) % seqLength || seqLength;\n    results.push({\n      start: start,\n      end: end,\n      direction: fwd ? 1 : -1\n    });\n    result = regex.exec(subject);\n  }\n  return results;\n};\n\n/**\n * A slightly modified Hamming Distance algorithm for approximate\n * string Matching for patterns\n *\n * @param {string} query the query pattern\n * @param {string} subject the sequence being searched\n * @param {number} mismatch the number of allowable mismatches\n * @param {boolean} fwd true if FWD, false otherwise\n * @returns {[SearchResult]}\n */\nconst searchWithMismatch = (query, subject, mismatch, fwd) => {\n  const results = [];\n  for (let i = 0; i < subject.length - query.length; i += 1) {\n    let missed = 0;\n\n    for (let j = 0; j < query.length; j += 1) {\n      const targetChar = subject[i + j];\n      const queryChar = query[j];\n      if (nucleotides[queryChar]) {\n        if (targetChar !== queryChar) {\n          missed += 1;\n        }\n      } else if (nucleotideWildCards[queryChar]) {\n        if (!nucleotideWildCards[queryChar][targetChar]) {\n          missed += 1;\n        }\n      }\n      if (missed > mismatch) {\n        break;\n      }\n    }\n\n    if (missed <= mismatch) {\n      const end = (i + query.length) % subject.length || subject.length;\n      results.push({\n        start: i,\n        end: end,\n        direction: fwd ? 1 : -1\n      });\n    }\n  }\n\n  return results;\n};\n","import * as React from \"react\";\n\nconst defaultCentralIndex = {\n  linear: 0,\n  circular: 0,\n  setCentralIndex: () => {}\n};\n\n/** Default central index context object */\nconst CentralIndexContext = React.createContext(defaultCentralIndex);\nCentralIndexContext.displayName = \"CentralIndexContext\";\n\nexport default CentralIndexContext;\n","import * as React from \"react\";\n\nimport { calcGC, calcTm } from \"../../utils/sequence\";\n\n/** Initial/default selection */\nexport const defaultSelection = {\n  ref: null,\n  name: \"\",\n  seq: \"\",\n  gc: 0,\n  tm: 0,\n  type: \"\",\n  start: 0,\n  end: 0,\n  length: 0,\n  clockwise: true\n};\n\n/** Default context object */\nexport const SelectionContext = React.createContext(defaultSelection);\nSelectionContext.displayName = \"SelectionContext\";\n\n/**\n * an HOC dedicated to handling range selection for the viewer\n *\n * since range selection is needed for the eventRouter, this is\n * the higher of the two HOCs\n *\n * @param  {React.Component} WrappedComp\n */\nconst withSelectionHandler = WrappedComp =>\n  class extends React.Component {\n    static displayName = `SelectionHandler`;\n\n    /** Only state is the selection range */\n    state = { ...defaultSelection };\n\n    previousBase = null; // previous base cursor is over, used in circular drag select\n\n    forward = null; // directionality of drag (true if clockwise), used in circular drag select\n\n    fullSelectionLength = 0; // full selection length, used in circular drag select\n\n    dragEvent = false; // is the user currently dragging across the surface of the seqViewer? this is tracked on SeqBlocks in particular (onMouseOver), used in circular drag select\n\n    selectionStarted = false; // is there a selection already, used for shift-click catch up\n\n    shiftSelection = false; // was the last selection action a shift click, used for shift-click catch up\n\n    /**\n     * a map between the id of child elements and their associated SelectRanges\n     * @type {Object.<string, SelectRange>}\n     */\n    idToRange = new Map();\n\n    componentDidMount = () => {\n      document.addEventListener(\"mouseup\", this.stopDrag);\n    };\n\n    componentWillUnmount = () => {\n      document.removeEventListener(\"mouseup\", this.stopDrag);\n    };\n\n    /** Stop the current drag event from happening */\n    stopDrag = () => {\n      this.dragEvent = false;\n    };\n\n    /**\n     * Called at start of drag to make sure checkers are reset to default state\n     */\n    resetCircleDragVars = start => {\n      this.previousBase = start;\n      this.forward = null;\n      this.fullSelectionLength = 0;\n      this.dragEvent = true; // start a drag event\n    };\n\n    /**\n     * a ref callback for mapping the id of child to its SelectRange\n     * it stores the id of all elements\n     * @param  {string} ref element's id, as it appears in DOM\n     * @param  {SelectRange} selectRange\n     */\n    inputRef = (ref, selectRange) => {\n      this.idToRange.set(ref, { ref, ...selectRange });\n    };\n\n    /**\n     * remove the id of the passed element from the list of tracked refs\n     * @param  {string} ref  if of the element to drop from list\n     */\n    removeMountedBlock = ref => {\n      this.idToRange.delete(ref);\n    };\n\n    /**\n     * mouseEvent\n     *\n     * the selected child element is something that is known by reference.\n     * update its SeqBlock's range (or any others affected) with the newly\n     * active range\n     *\n     * @param {React.SyntheticEvent} e  \t\tthe mouseEvent\n     */\n    mouseEvent = e => {\n      const { Circular, Linear } = this.props;\n\n      // should not be updating selection since it's not a drag event time\n      if ((e.type === \"mousemove\" || e.type === \"mouseup\") && !this.dragEvent) {\n        return;\n      }\n\n      const knownRange = this.dragEvent\n        ? this.idToRange.get(e.currentTarget.id) // only look for SeqBlocks\n        : this.idToRange.get(e.target.id) || // elements and SeqBlocks\n          this.idToRange.get(e.currentTarget.id);\n      if (!knownRange) {\n        return; // there isn't a known range with the id of the element\n      }\n\n      const { start, end, direction, element } = knownRange;\n      switch (knownRange.type) {\n        case \"ANNOTATION\":\n        case \"PRIMER\":\n        case \"FIND\":\n        case \"TRANSLATION\":\n        case \"ENZYME\": {\n          if (!Linear) {\n            // if an element was clicked on the circular viewer, scroll the linear\n            // viewer so the element starts on the first SeqBlock\n            this.props.setCentralIndex(\"linear\", start);\n          }\n\n          // Annotation or find selection range\n          const clockwise = direction ? direction === 1 : true;\n          const selectionStart = clockwise ? start : end;\n          const selectionEnd = clockwise ? end : start;\n\n          this.setSelection({\n            ...element,\n            ...knownRange,\n            start: selectionStart,\n            end: selectionEnd,\n            clockwise: clockwise\n          });\n\n          this.dragEvent = false;\n          break;\n        }\n        case \"SEQ\": {\n          if (Linear) {\n            this.linearSeqEvent(e, knownRange);\n          } else if (Circular) {\n            this.circularSeqEvent(e);\n          }\n          break;\n        }\n        default:\n      }\n    };\n\n    /**\n     * Handle a sequence selection on a linear viewer\n     */\n    linearSeqEvent = (e, knownRange) => {\n      const { selection } = this.props;\n\n      const currBase = this.calculateBaseLinear(e, knownRange);\n      const clockwiseDrag =\n        selection.start !== null && currBase >= selection.start;\n\n      if (e.type === \"mousedown\" && currBase !== null) {\n        // this is the start of a drag event\n        this.setSelection({\n          ...defaultSelection, // clears other meta\n          start: e.shiftKey ? selection.start : currBase,\n          end: currBase,\n          clockwise: clockwiseDrag\n        });\n        this.dragEvent = true;\n      } else if (this.dragEvent && currBase !== null) {\n        // continue a drag event that's currently happening\n        this.setSelection({\n          ...defaultSelection, // clears other meta\n          start: selection.start,\n          end: currBase,\n          clockwise: clockwiseDrag\n        });\n      }\n    };\n\n    /**\n     * Handle a sequence selection event on the circular viewer\n     */\n    circularSeqEvent = e => {\n      const { seq, selection } = this.props;\n      let { start, end, clockwise, currRef } = selection;\n\n      let currBase = this.calculateBaseCircular(e);\n      let ref = currRef;\n      const seqLength = seq.length;\n\n      if (e.type === \"mousedown\") {\n        const selStart = e.shiftKey ? start : currBase;\n        const lookahead = e.shiftKey\n          ? this.calcSelectionLength(selStart, currBase, false)\n          : this.calcSelectionLength(selStart, currBase, true); // check clockwise selection length\n        this.selectionStarted = lookahead > 0; // update check for whether there is a prior selection\n        this.resetCircleDragVars(selStart); // begin drag event\n\n        this.setSelection({\n          ...defaultSelection,\n          start: selStart,\n          end: currBase,\n          ref: \"\",\n          clockwise: clockwise\n        });\n      } else if (\n        e.type === \"mousemove\" &&\n        this.dragEvent &&\n        currBase &&\n        currBase !== this.previousBase\n      ) {\n        const increased = currBase > this.previousBase; // bases increased\n        const changeThreshold = seqLength * 0.9; // threshold for unrealistic change by mouse movement\n        const change = Math.abs(this.previousBase - currBase); // index change from this mouse movement\n        const crossedZero = change > changeThreshold; // zero was crossed if base jumped more than changeThreshold\n        this.forward = increased ? !crossedZero : crossedZero; // bases increased XOR crossed zero\n        const lengthChange = crossedZero ? seqLength - change : change; // the change at the point where we cross zero has to be normalized by seqLength\n        let sameDirectionMove =\n          this.forward === this.props.selection.clockwise ||\n          this.props.selection.clockwise === null; // moving in same direction as start of drag or start of drag\n\n        if (sameDirectionMove) {\n          this.fullSelectionLength += lengthChange;\n        } else {\n          this.fullSelectionLength -= lengthChange;\n        }\n\n        this.previousBase = currBase; // done comparing with previous base, update previous base\n        if (\n          this.fullSelectionLength < seqLength * 0.01 &&\n          !this.shiftSelection\n        ) {\n          clockwise = this.forward; // near selection start so selection direction is up for grabs\n          const check = this.calcSelectionLength(\n            this.props.selection.start,\n            currBase,\n            this.forward\n          ); // check actual current selection length\n          if (this.fullSelectionLength < 0) {\n            this.fullSelectionLength = check; // This is to correct for errors when dragging too fast\n          }\n          if (check > this.fullSelectionLength) {\n            clockwise = !this.forward; // the actual selection length being greater than additive selection length means we have come back to start and want to go in opposite direction\n          }\n          end = currBase;\n          ref = \"\";\n        }\n        sameDirectionMove = this.forward === this.props.selection.clockwise; // recalculate this in case we've switched selection directionality\n\n        const check = this.calcSelectionLength(\n          this.props.selection.start,\n          currBase,\n          this.props.selection.clockwise\n        ); // check the selection length, this is agnostic to the ALL reference and will always calculate from where you cursor is to the start of selection\n\n        if (\n          this.selectionStarted &&\n          this.shiftSelection &&\n          check > this.fullSelectionLength\n        ) {\n          this.fullSelectionLength = check; // shift select catch up\n        }\n\n        const sameDirectionDrag = this.dragEvent && sameDirectionMove; // there is an ongoing drag in the same direction as the direction the selection started in\n        const fullSelection = currRef === \"ALL\"; // selection is full sequence\n        const hitFullSelection =\n          !fullSelection && this.fullSelectionLength >= seqLength; // selection became full sequence\n        if (sameDirectionDrag && hitFullSelection) {\n          ref = \"ALL\"; // intial set of ALL selection on selection full sequence\n          end = start;\n        } else if (fullSelection) {\n          // this ensures that backtracking doesn't require making up to your overshoot forward circles\n          this.fullSelectionLength =\n            seqLength + (this.fullSelectionLength % seqLength);\n          ref = \"ALL\";\n\n          if (\n            !sameDirectionDrag && // changed direction\n            check === this.fullSelectionLength - seqLength && // back tracking\n            check > seqLength * 0.9 // passed selection start\n          ) {\n            end = currBase; // start decreasing selection size due to backtracking\n            ref = \"\";\n            this.fullSelectionLength = this.fullSelectionLength - seqLength; // reset calculated additive selection length to normal now that we are not at ALL length\n          }\n        } else {\n          end = currBase; // nothing special just update the selection\n          ref = \"\";\n        }\n        this.shiftSelection = false;\n\n        this.setSelection({\n          ...defaultSelection,\n          start: start,\n          end: end,\n          ref: ref,\n          clockwise: clockwise\n        });\n      }\n    };\n\n    /**\n     * in a linear sequence viewer, given the bounding box of a component, the basepairs\n     * by SeqBlock and the position of the mouse event, find the current base\n     *\n     * @param {SyntheticMouseEvent} e      the click of onMouseOver event\n     * @param {SelectRange} knownRange     a range of a known element\n     * @return {Number}\t\t   the current base being clicked or hovered\n     */\n    calculateBaseLinear = (e, knownRange) => {\n      const { size, bpsPerBlock } = this.props;\n\n      const adjustedWidth = size.width; // 28 accounts for 10px padding on linear scroller and 8px scroller gutter\n      const block = e.currentTarget.getBoundingClientRect();\n      const distFromLeft = e.clientX - block.left;\n      const percFromLeft = distFromLeft / adjustedWidth;\n      const bpsFromLeft = Math.round(percFromLeft * bpsPerBlock);\n\n      const currBase = knownRange.start + bpsFromLeft;\n\n      return currBase;\n    };\n\n    /**\n     * in a circular plasmid viewer, given the center of the viewer, and position of the\n     * mouse event, find the currently hovered or clicked basepair\n     *\n     * @param {SyntheticMouseEvent} e    the click of onMouseMove event\n     * @return {Number}   \t\t\t\t the current base being clicked or hovered\n     */\n    calculateBaseCircular = e => {\n      const { center, centralIndex, seq, yDiff } = this.props;\n\n      if (!center) return 0;\n\n      const block = e.currentTarget.getBoundingClientRect();\n\n      // position on the plasmid viewer\n      const distFromLeft = e.clientX - block.left;\n      const distFromTop = e.clientY - block.top;\n\n      // position relative to center\n      const x = distFromLeft - center.x;\n      const y = distFromTop - (center.y + yDiff);\n\n      const riseToRun = y / x;\n      const posInRads = Math.atan(riseToRun);\n      let posInDeg = posInRads * (180 / Math.PI) + 90; // convert and shift to vertical is 0\n      if (x < 0) {\n        posInDeg += 180; // left half of the viewer\n      }\n      const posInPerc = posInDeg / 360; // position as a percentage\n\n      let currBase = Math.round(seq.length * posInPerc); // account for rotation of the viewer\n      currBase += centralIndex;\n      if (currBase > seq.length) {\n        currBase -= seq.length;\n      }\n      return currBase;\n    };\n\n    /**\n     * Update the selection in state. Only update the specified\n     * properties of the selection that should be updated.\n     */\n    setSelection = newSelection => {\n      const { setSelection } = this.props;\n\n      if (\n        newSelection.start === this.props.selection.start &&\n        newSelection.end === this.props.selection.end &&\n        newSelection.ref === this.props.selection.ref\n      ) {\n        return;\n      }\n\n      const { clockwise, start, end, ref, type, element } = {\n        ...this.props.selection,\n        ...newSelection\n      };\n\n      const length = this.calcSelectionLength(start, end, clockwise);\n      const seq = this.getSelectedSequence(start, end, clockwise);\n      const gc = calcGC(seq);\n      const tm = calcTm(seq);\n\n      const selection = {\n        ref,\n        seq,\n        gc,\n        tm,\n        type,\n        start,\n        end,\n        length,\n        clockwise,\n        element\n      };\n\n      setSelection(selection);\n    };\n\n    /**\n     * Return the string subsequence from the range' start to end\n     */\n    getSelectedSequence = (start, end, clock) => {\n      const { seq } = this.props;\n      if (end < start && !clock) {\n        return seq.substring(end, start);\n      }\n      if (end > start && !clock) {\n        return seq.substring(end, seq.length) + seq.substring(0, start);\n      }\n      if (end > start && clock) {\n        return seq.substring(start, end);\n      }\n      if (end < start && clock) {\n        return seq.substring(start, seq.length) + seq.substring(0, end);\n      }\n      return \"\";\n    };\n\n    /**\n     * Check what the length of the selection is in circle drag select\n     */\n    calcSelectionLength = (start, base, clock) => {\n      const { seq } = this.props;\n      if (base < start && !clock) {\n        return start - base;\n      }\n      if (base > start && !clock) {\n        return start + (seq.length - base);\n      }\n      if (base > start && clock) {\n        return base - start;\n      }\n      if (base < start && clock) {\n        return seq.length - start + base;\n      }\n      return 0;\n    };\n\n    render() {\n      return (\n        <WrappedComp\n          {...this.props}\n          inputRef={this.inputRef}\n          mouseEvent={this.mouseEvent}\n          onUnmount={this.removeMountedBlock}\n        />\n      );\n    }\n  };\n\nexport default WrappedComp => withSelectionHandler(WrappedComp);\n","import { dnaComplement } from \"./parser\";\nimport { calcTm, getMismatchIndices, returnRanges, reverse } from \"./sequence\";\n\n/**\n * Gives primers meta information needed by sequence viewers\n * @param {Array} primers: array of primers\n * @param {string} vector\n * @return {Array} array of primers with viewer meta information\n */\nexport default (primers, vector) => {\n  const { seq: vectorSeq, compSeq: vectorComp } = dnaComplement(vector);\n  return findBindingSites(primers, vectorSeq, 1).concat(\n    findBindingSites(primers, vectorComp, -1)\n  );\n};\n\n/**\n * Given a list of primer mismatches and the primer's annealing sequence\n * Returns the mismatch indices and the part of primer sequence that actually anneals\n * @param {string} sequence\n * @param {string} subVector\n * @return {Array} mismatches as an array of array of start/end indices\n * @return {string} the string sequence of the part of the primer that anneals\n */\nexport const findMismatches = (sequence, subVector) => {\n  let annealSequence = sequence;\n  let mismatches = returnRanges(getMismatchIndices(sequence, subVector));\n\n  // Logic for when to combine mismatches into an overhang tail\n  // If the remaining sequence after a mismatch is more than 25% mismatch a tail is formed\n  if (mismatches.length > 0) {\n    let index = 0;\n    while (index < mismatches.length) {\n      const remainingMismatches = mismatches.slice(\n        0,\n        mismatches.length - index\n      );\n      if (remainingMismatches.length < 2) {\n        break;\n      }\n      const mismatchTotalLength = remainingMismatches.reduce(\n        (acc, mismatch) => acc + (mismatch[1] + 1 - mismatch[0]),\n        0\n      );\n      const mismatchAreaLength = sequence.slice(\n        0,\n        remainingMismatches[remainingMismatches.length - 1][1] + 1\n      ).length;\n\n      /*if (mismatchTotalLength / mismatchAreaLength > 0.25) {\n        mismatches = mismatches\n          .slice(mismatches.length - index, mismatches.length)\n          .concat([[0, mismatches[mismatches.length - 1 - index][1]]]);\n\n        annealSequence = sequence.slice(\n          mismatches[mismatches.length - 1][1] + 1\n        );\n        break;\n      }*/\n      index += 1;\n    }\n    annealSequence = sequence.slice(mismatches[mismatches.length - 1][1] + 1);\n  }\n  mismatches = mismatches.map(mismatch => ({\n    start: mismatch[0],\n    end: mismatch[1] + 1 // because mismatches return indices of mismatch and we want to bound to end after the last index\n  }));\n\n  return { mismatches, annealSequence };\n};\n\n/**\n * Find binding sites on one strand of DNA\n * @param {Array} primers\n * @param {string} vectorSequence\n * @param {string} direction\n * @return {Array} array of primers with viewer meta information\n */\nconst findBindingSites = (primers = [], vectorSeq, direction) => {\n  const matchLength = 10;\n  const minTm = 40;\n\n  const primerBindingSites = [];\n  const forward = direction === 1;\n\n  primers.forEach(primer => {\n    const { overhang = \"\" } = primer;\n    let { seq, strict } = primer;\n    strict = strict || false;\n    if (seq === \"\") {\n      return;\n    }\n    seq = seq;\n    const sequenceLength = seq.length;\n\n    const vectorSequence = vectorSeq;\n    const vectorLength = vectorSequence.length;\n\n    const expandedVectorSequence =\n      vectorSequence + vectorSequence.substring(0, sequenceLength); // Used for looking for binding sites that cross 0 index\n\n    let annealSequence = seq;\n    let { mismatches, matchSeq } = [];\n\n    matchSeq =\n      sequenceLength < matchLength\n        ? seq\n        : seq.substring(sequenceLength - matchLength, sequenceLength);\n\n    matchSeq = forward ? matchSeq : reverse(matchSeq);\n\n    const regex = new RegExp(matchSeq, \"gi\");\n    let result = regex.exec(expandedVectorSequence);\n    const combinedSequence = (overhang || \"\").concat(seq);\n    while (result) {\n      if (result.index < vectorLength) {\n        const tailCrossZero = forward\n          ? result.index + matchSeq.length - sequenceLength < 0\n          : result.index + sequenceLength > vectorLength;\n        const headCrossZero = forward\n          ? vectorLength - (result.index + matchSeq.length) < 0\n          : result.index + matchSeq.length > vectorLength;\n        const crossZero = tailCrossZero || headCrossZero;\n\n        let startIndex = forward\n          ? result.index - sequenceLength + matchSeq.length\n          : result.index;\n        let endIndex = startIndex + sequenceLength;\n        let subVector = vectorSequence.substring(startIndex, endIndex);\n\n        if (crossZero) {\n          if (forward) {\n            startIndex = tailCrossZero\n              ? vectorLength - (sequenceLength - result.index - matchSeq.length)\n              : result.index - sequenceLength + matchSeq.length;\n          }\n          endIndex = sequenceLength - (vectorLength - startIndex);\n          subVector =\n            vectorSequence.substring(startIndex, vectorLength) +\n            vectorSequence.substring(0, endIndex);\n        }\n\n        subVector = forward ? subVector : reverse(subVector);\n\n        const matchTm = calcTm(seq, subVector);\n\n        if (\n          (matchTm >= primer.tm || matchTm > minTm) &&\n          ((forward && endIndex < vectorLength) || startIndex < vectorLength) &&\n          result.index < vectorLength\n        ) {\n          if (overhang) {\n            if (forward) {\n              startIndex -= overhang.length;\n              if (startIndex < 0) startIndex = vectorLength + startIndex;\n            }\n            if (!forward) {\n              endIndex += overhang.length;\n              if (endIndex > vectorLength) endIndex -= vectorLength;\n            }\n            ({ mismatches = [], annealSequence = \"\" } = findMismatches(\n              combinedSequence,\n              \"X\".repeat(overhang.length).concat(subVector)\n            ));\n            if (mismatches[0] && mismatches[0].start - overhang.length === 0) {\n              mismatches[0].start = 0;\n            } else {\n              mismatches.push({ start: 0, end: overhang.length });\n            }\n          } else {\n            ({ mismatches = [], annealSequence = \"\" } = findMismatches(\n              seq,\n              subVector\n            ));\n          }\n\n          const uniqMismatch = {};\n          mismatches = mismatches\n            .sort((a, b) => a.start < b.start)\n            .map(m => ({\n              id: `${m.start}-${m.end}`,\n              start: m.start,\n              end: m.end\n            }))\n            .filter(m => {\n              if (uniqMismatch[m.id]) {\n                return false;\n              }\n              uniqMismatch[m.id] = true;\n              return true;\n            })\n            .map(m => ({ start: m.start, end: m.end }));\n\n          if ((strict && mismatches.length < 1) || !strict) {\n            primerBindingSites.push({\n              ...primer,\n              id: `${primer.id}-${startIndex}`,\n              primerName: primer.name,\n              seq: combinedSequence,\n              start: startIndex,\n              end: endIndex,\n              direction: direction,\n              mismatches: mismatches,\n              annealSequence: annealSequence,\n              strict: strict\n            });\n          }\n        }\n      }\n      result = regex.exec(expandedVectorSequence);\n    }\n  });\n  return primerBindingSites;\n};\n","// utility funcs for stackElements\nconst last = arr => arr[arr.length - 1];\nconst first = arr => arr[0];\n\n/**\n * stackElements\n *\n * take an array of elements (a one deep array) and create an array of\n * array of annotations, where non-overlapping annotations can be in the same\n * row. Example:\n *\n * input (one array):\n * \t\t[ ---Ann---\t---Ann3---\n * \t\t\t ---Ann2--- ]\n *\n * output (array of array):\n * \t\t[ ---Ann--- ---Ann3---]\n * \t\t[\t\t---Ann2---    ]\n *\n * @param {[Element]} elements   all elements in a single row\n * @return {[[Element]]}         elements grouped into a single array if they're\n *                                non-overlapping\n */\nexport const stackElements = (elements, seqL) => {\n  const sortedElements = [...elements];\n  sortedElements.sort((a, b) => {\n    // prioritize insert annotations for tiebreakers so that the insert annotation appears\n    // above the annotations spanning the whole insert\n    if (a.type === \"insert\" && a.start === b.start) {\n      return -1;\n    }\n    if (b.type === \"insert\" && a.start === b.start) {\n      return 1;\n    }\n    return a.start - b.start;\n  });\n\n  return sortedElements.reduce((acc, a) => {\n    const insertIndex = acc.findIndex(elems => {\n      if (a.end === a.start) {\n        // the element has the same start and end index and therefore the whole\n        // plasmid (so it shouldn't fit into any existing row)\n        return false;\n      }\n      if (last(elems).end <= last(elems).start) {\n        // the last annotation in this row crosses zero index\n        return last(elems).end + seqL <= a.start;\n      }\n      if (a.end > a.start) {\n        // this annotation doesn't cross the zero index and the last in row doesn't\n        return last(elems).end <= a.start;\n      }\n      // both this curr anntoation and the last in the row cross the zero index\n      return last(elems).end < a.start && a.end < first(elems).start;\n    });\n\n    const newAcc = [...acc];\n\n    if (insertIndex > -1) {\n      // insert in the row where it's the new highest\n      newAcc[insertIndex].push(a);\n    } else {\n      // create a new row for this entry\n      newAcc.push([a]);\n    }\n    return newAcc;\n  }, []);\n};\n\n/**\n * given an array of arrays of an element, fragment the element into seq blocks\n *\n * this is needed in the Linear sequence viewer because it's easier to send only the\n * relevant elements to the childSeqBlock, rather to send every SeqBlock everything\n * and have the block figure out whether element is included within it\n *\n * NOTE: if an element has a start and end index that are the same, it's assumed to\n * cover the entire plasmid\n *\n * @param {[Element]}\n * @return {[[Element]]}\n */\nexport const createMultiRows = (elements, rowLength, rowCount) => {\n  const newArr = new Array(rowCount);\n\n  // initialize the nested rows in each block\n  for (let i = 0; i < rowCount; i += 1) {\n    newArr[i] = [];\n    for (let j = 0; j < elements.length; j += 1) {\n      newArr[i][j] = [];\n    }\n  }\n\n  // for each row of input\n  for (let i = 0; i < elements.length; i += 1) {\n    // for each annotation|ORF in that row\n    for (let j = 0; j < elements[i].length; j += 1) {\n      // if the element doesn't cross the zero index\n      if (elements[i][j].start < elements[i][j].end) {\n        // between the elements start and end, add to every seqBlock\n        // within its range\n\n        // this element doesn't cross the zero index and doesn't cover\n        // the whole plasmid\n        let k = Math.max(0, Math.floor(elements[i][j].start / rowLength));\n        const end = Math.floor((elements[i][j].end - 1) / rowLength);\n\n        while (k <= end && k < rowCount) {\n          newArr[k][i].push(elements[i][j]);\n          k += 1;\n        }\n      } else if (elements[i][j].end < elements[i][j].start) {\n        // the element crosses the zero index and doesn't cover the whole plasmid\n\n        // first, push onto all arrays from the end down to the zero\n        let e = Math.floor(elements[i][j].end / rowLength);\n        if (elements[i][j].end === 0) {\n          // handle an edge case where element ends at 0-index\n          e = -1; // skip adding to rows\n        }\n        while (e >= 0 && e < newArr.length) {\n          newArr[e][i].push(elements[i][j]);\n          e -= 1;\n        }\n\n        // then push onto all arrays from the start to the end\n        let s = Math.floor(elements[i][j].start / rowLength);\n        while (s < rowCount) {\n          newArr[s][i].push(elements[i][j]);\n          s += 1;\n        }\n      } else if (elements[i][j].end === elements[i][j].start) {\n        // the element circles the entire plasmid and, therefore, fills every\n        // SeqBlock. start === end is signal for covering whole plasmid\n        for (let a = 0; a < newArr.length; a += 1) {\n          newArr[a][i].push(elements[i][j]);\n        }\n\n        // edge case where starts and ends at 0\n        if (elements[i][j].end === 0) {\n          continue;\n        }\n\n        // and add again for the block that the element starts in\n        const s = Math.floor(elements[i][j].start / rowLength);\n        newArr[s][i].push(elements[i][j]);\n      }\n    }\n  }\n\n  // filter out the empty rows in each block\n  for (let i = 0; i < rowCount; i += 1) {\n    newArr[i] = newArr[i].filter(a => a[0]);\n  }\n\n  return newArr;\n};\n\n/**\n * search thru the map w/ the given interval finding all relevant\n * annotations/ORFs/etc by finding the appropriate start and end range\n * using Math.floor\n *\n * @param {CreateRowInfo}\n * @return {[[Object]]}       an array of an array of the values that were stored on creation\n */\nexport const createSingleRows = (\n  elements,\n  rowLength,\n  rowCount,\n  duplicateIdsAllowed = true\n) => {\n  const newArr = new Array(rowCount);\n\n  // initialize the nested rows in each block\n  for (let i = 0; i < rowCount; i += 1) {\n    newArr[i] = [];\n  }\n\n  // assign each annotation to its respective array\n  for (let i = 0; i < elements.length; i += 1) {\n    let { start, end } = elements[i];\n\n    // special case for enzymes that have cutsites away from recog (BsaI)\n    if (elements[i].fcut !== undefined) {\n      const { fcut, rcut } = elements[i];\n      start = fcut > end || fcut < start ? fcut : start;\n      end = rcut > end || rcut < start ? rcut : end;\n    }\n\n    if (start < end) {\n      let k = Math.max(Math.floor(start / rowLength), 0);\n      const rowEnd = Math.floor(end / rowLength);\n\n      while (k <= rowEnd && k < rowCount) {\n        newArr[k].push(elements[i]);\n        k += 1;\n      }\n    } else {\n      // the element crosses the zero index\n      // first, push onto all arrays from the end down to the zero\n      let e = Math.floor(end / rowLength);\n      while (e >= 0) {\n        newArr[e].push(elements[i]);\n        e -= 1;\n      }\n\n      // then push onto all arrays from the start to the end\n      let s = Math.floor(start / rowLength);\n      while (s < rowCount) {\n        // only add to the array if the user is okay with having duplicates by id.\n        // for example, this shouldn't be allowed if multiple translation rows have\n        // the same ID\n        if (\n          duplicateIdsAllowed ||\n          newArr[s].every(el => el.id !== elements[i].id)\n        ) {\n          newArr[s].push(elements[i]);\n        }\n        s += 1;\n      }\n    }\n  }\n\n  return newArr;\n};\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * from: https://davidwalsh.name/javascript-debounce-function\n */\nexport default (func, wait, immediate = true) => {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n\n    const later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","import * as React from \"react\";\n\nimport debounce from \"../../utils/debounce\";\nimport CentralIndexContext from \"./centralIndex\";\n\n/**\n * an HOC used one level above the Sequence viewer. It handles the routing of all\n * events, including keypresses, mouse clicks, etc.\n *\n * its other main function is to build the context menu at all times, so that\n * the options available in the context menu are all relevant to whatever has been\n * selected\n *\n * @param  {React.Component} WrappedComp\n * @return {React.Component}\n */\nconst withEventRouter = WrappedComp =>\n  class WithEventRouter extends React.PureComponent {\n    // eslint-disable-next-line\n    static displayName = `EventRouter`;\n\n    static contextType = CentralIndexContext;\n\n    clickedOnce = null;\n\n    clickedTwice = null;\n\n    componentDidMount = () => {\n      window.addEventListener(\"keydown\", this.handleKeyPress);\n    };\n\n    componentWillUnmount = () => {\n      window.removeEventListener(\"keydown\", this.handleKeyPress);\n    };\n\n    /** set the event router reference on this class */\n    setEventRouter = eventRouter => {\n      this.eventRouter = eventRouter;\n    };\n\n    /**\n     * action handler for a keyboard keypresses.\n     * Mapping logic has been abstracted to keypressMap in ./api/keypressMap.js\n     *\n     * @param  {React.SyntheticEvent} e   keypress\n     */\n    handleKeyPress = e => {\n      const keyType = this.keypressMap(e);\n      if (!keyType) {\n        return; // not recognized key\n      }\n      this.handleSeqInteraction(keyType);\n    };\n\n    /**\n     * maps a keypress to an interaction (String)\n     *\n     * @param {React.SyntheticEvent} e   synthetic event input\n     * @return {String} \t\t\t     the action performed, one of:\n     * [\"All\", \"Copy\", \"Up\", \"Right\", \"Down\", \"Left\"]\n     */\n    keypressMap = e => {\n      const { copyEvent } = this.props;\n\n      if (copyEvent(e)) {\n        return \"Copy\";\n      }\n\n      const { key, shiftKey } = e;\n      switch (key) {\n        case \"ArrowLeft\":\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n        case \"ArrowDown\":\n          return shiftKey ? `Shift${key}` : key;\n        default:\n          return null;\n      }\n    };\n\n    /**\n     * Respond to any of:\n     * \tAll: cmd + A, select all\n     * \tCopy: cmd + C, copy\n     * \tUp, Right, Down, Left: some directional movement of the cursor\n     *\n     * @param {String} i  \t\t  one of the commands listed above\n     */\n    handleSeqInteraction = async type => {\n      const { seq, Linear } = this.props;\n      const seqLength = seq.length;\n      const {\n        bpsPerBlock = Math.max(Math.floor(seqLength / 20), 1)\n      } = this.props;\n\n      switch (type) {\n        case \"SelectAll\": {\n          this.selectAllHotkey();\n          break;\n        }\n        case \"Copy\": {\n          this.handleCopy();\n          break;\n        }\n        case \"ArrowUp\":\n        case \"ArrowRight\":\n        case \"ArrowDown\":\n        case \"ArrowLeft\":\n        case \"ShiftArrowUp\":\n        case \"ShiftArrowRight\":\n        case \"ShiftArrowDown\":\n        case \"ShiftArrowLeft\": {\n          const { selection, setSelection } = this.props;\n          const { start, end } = selection;\n          if (Linear) {\n            let { clockwise } = selection;\n            let newPos = end;\n            if (type === \"ArrowUp\" || type === \"ShiftArrowUp\") {\n              // if there are multiple blocks or just one. If one, just inc by one\n              if (seqLength / bpsPerBlock > 1) {\n                newPos -= bpsPerBlock;\n              } else {\n                newPos -= 1;\n              }\n            } else if (type === \"ArrowRight\" || type === \"ShiftArrowRight\") {\n              newPos += 1;\n            } else if (type === \"ArrowDown\" || type === \"ShiftArrowDown\") {\n              // if there are multiple blocks or just one. If one, just inc by one\n              if (seqLength / bpsPerBlock > 1) {\n                newPos += bpsPerBlock;\n              } else {\n                newPos += 1;\n              }\n            } else if (type === \"ArrowLeft\" || type === \"ShiftArrowLeft\") {\n              newPos -= 1;\n            }\n\n            if (newPos <= -1) {\n              newPos = seqLength + newPos;\n            }\n            if (newPos >= seqLength + 1) {\n              newPos -= seqLength;\n            }\n            const selLength = Math.abs(start - end);\n            clockwise =\n              selLength === 0\n                ? type === \"ArrowRight\" ||\n                  type === \"ShiftArrowRight\" ||\n                  type === \"ArrowDown\" ||\n                  type === \"ShiftArrowDown\"\n                : clockwise;\n            if (newPos !== start && !type.startsWith(\"Shift\")) {\n              setSelection({\n                start: newPos,\n                end: newPos,\n                clockwise: true,\n                ref: \"\"\n              });\n            } else if (type.startsWith(\"Shift\")) {\n              setSelection({\n                start: start,\n                end: newPos,\n                clockwise: clockwise,\n                ref: \"\"\n              });\n            }\n            break;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    };\n\n    /**\n     * Copy the current sequence selection to the user's clipboard\n     */\n    handleCopy = () => {\n      const {\n        seq,\n        selection: { start, end, ref }\n      } = this.props;\n\n      const formerFocus = document.activeElement;\n      const tempNode = document.createElement(\"textarea\");\n      if (ref === \"ALL\") {\n        tempNode.innerText = seq;\n      } else {\n        tempNode.innerText = seq.substring(start, end);\n      }\n      if (document.body) {\n        document.body.appendChild(tempNode);\n      }\n      tempNode.select();\n      document.execCommand(\"copy\");\n      tempNode.remove();\n      if (formerFocus) {\n        formerFocus.focus();\n      }\n    };\n\n    /**\n     * select all of the sequence\n     */\n    selectAllHotkey = () => {\n      const {\n        setSelection,\n        selection,\n        selection: { start }\n      } = this.props;\n\n      const newSelection = {\n        ...selection,\n        start: start,\n        end: start,\n        clockwise: true,\n        ref: \"ALL\" // ref to all means select the whole thing\n      };\n\n      setSelection(newSelection);\n    };\n\n    handleTripleClick = () => {\n      this.selectAllHotkey();\n    };\n\n    resetClicked = debounce(() => {\n      this.clickedOnce = null;\n      this.clickedTwice = null;\n    }, 250);\n\n    /**\n     * if the contextMenu button is clicked, check whether it was clicked\n     * over a noteworthy element, for which db mutations have been written.\n     *\n     * if it is, mutate the contextMenu to account for those potential interactions\n     * and pass on the click. Otherwise, do nothing\n     *\n     * if it is a regular click, pass on as normal\n     *\n     * @param  {React.SyntheticEvent} e   the mouse event\n     */\n    handleMouseEvent = e => {\n      const { mouseEvent } = this.props;\n\n      if (e.type === \"mouseup\") {\n        this.resetClicked();\n        if (this.clickedOnce === e.target && this.clickedTwice === e.target) {\n          this.handleTripleClick();\n          this.resetClicked();\n        } else if (\n          this.clickedOnce === e.target &&\n          this.clickedTwice === null\n        ) {\n          this.clickedOnce = e.target;\n          this.clickedTwice = e.target;\n          this.resetClicked();\n        } else {\n          this.clickedOnce = e.target;\n          this.resetClicked();\n        }\n      }\n      const { type, button, ctrlKey } = e;\n      const ctxMenuClick = type === \"mousedown\" && button === 0 && ctrlKey;\n\n      if (e.button === 0 && !ctxMenuClick) {\n        // it's a mouse drag event or an element was clicked\n        mouseEvent(e);\n      }\n    };\n\n    /**\n     * handle a scroll event and, if it's a CIRCULAR viewer, update the\n     * current central index\n     */\n    handleScrollEvent = e => {\n      const { Linear, seq } = this.props;\n\n      if (!Linear) {\n        // a \"large scroll\" (1000) should rotate through 20% of the plasmid\n        let delta = seq.length * (e.deltaY / 5000);\n        delta = Math.floor(delta);\n\n        // must scroll by *some* amount (only matters for very small plasmids)\n        if (delta === 0) {\n          if (e.deltaY > 0) delta = 1;\n          else delta = -1;\n        }\n\n        let newCentralIndex = this.context.circular + delta;\n        newCentralIndex = (newCentralIndex + seq.length) % seq.length;\n\n        this.context.setCentralIndex(\"circular\", newCentralIndex);\n      }\n    };\n\n    /** a reference used only so we can focus on the event router after mounting */\n    eventRouter;\n\n    render() {\n      const {\n        mouseEvent,\n        selection,\n        setSelection,\n        centralIndex,\n        setCentralIndex,\n        ...rest\n      } = this.props;\n      const { Circular, name } = this.props;\n\n      const type = Circular ? \"circular\" : \"linear\";\n      const id = `la-vz-${type}-${name.replace(/\\s/g, \"\")}-event-router`;\n\n      return (\n        <div\n          id={id}\n          className=\"la-vz-viewer-event-router\"\n          onKeyDown={this.handleKeyPress}\n          onMouseMove={mouseEvent}\n          onWheel={this.handleScrollEvent}\n          role=\"presentation\"\n          ref={ref => {\n            this.eventRouter = ref;\n          }}\n        >\n          <WrappedComp {...rest} mouseEvent={this.handleMouseEvent} />\n        </div>\n      );\n    }\n  };\n\nexport default WrappedComp => withEventRouter(WrappedComp);\n","import withEventHandler from \"./events.jsx\";\nimport withSelectionHandler from \"./selection.jsx\";\n\n/**\n * sequentially apply all the Sequence Viewer HOCs\n *\n * this is just merging the HOCs into a single function to simplfy appling\n * them to the Circular and Linear viewers (one function rather than 4 (or however many there are))\n */\nexport default WrappedViewer =>\n  withSelectionHandler(withEventHandler(WrappedViewer));\n","import * as React from \"react\";\n\nimport CentralIndexContext from \"../handlers/centralIndex\";\nimport { COLOR_BORDER_MAP, darkerColor } from \"../../utils/colors\";\n\n/**\n * Used to build up all the path elements. Does not include a display\n * of the annotation name or a line connecting name to annotation\n *\n * one central consideration here is that annotations might overlap with one another.\n * to avoid having those overalp visually, annotations are first moved into rows,\n * which are non-overlapping arrays or annotation arrays, which are then\n * used to create the array of array of annotation paths\n *\n * @type {Function}\n */\nexport default class Annotations extends React.PureComponent {\n  /** during an annotation hover event, darken all other pieces of the same annotation */\n  hoverAnnotation = (className, opacity) => {\n    const elements = document.getElementsByClassName(className);\n    for (let i = 0; i < elements.length; i += 1) {\n      elements[i].style.fillOpacity = opacity;\n    }\n  };\n\n  render() {\n    const { radius, rowsToSkip, lineHeight, annotations } = this.props;\n\n    // at least 3 rows inward from default radius (ie index row)\n    const rowShiftHeight = lineHeight * rowsToSkip;\n    const radiusAdjust = lineHeight * 3;\n    let currBRadius = radius - radiusAdjust - rowShiftHeight;\n\n    let currTRadius = currBRadius - lineHeight; // top radius\n\n    // shared style object for inlining\n    const annStyle = {\n      strokeWidth: 0.5,\n      shapeRendering: \"geometricPrecision\",\n      cursor: \"pointer\",\n      fillOpacity: 0.7,\n      strokeLinejoin: \"round\"\n    };\n    // this is strictly here to create an invisible path that the\n    // annotation name can follow\n    const transparentPath = {\n      stroke: \"transparent\",\n      fill: \"transparent\"\n    };\n    const labelStyle = {\n      cursor: \"pointer\"\n    };\n\n    return (\n      <CentralIndexContext.Consumer>\n        {({ circular }) => (\n          <g className=\"la-vz-circular-annotations\">\n            {annotations.reduce((acc, anns, i) => {\n              if (i) {\n                currBRadius -= lineHeight + 3;\n                currTRadius -= lineHeight + 3;\n              } // increment the annRow radii if on every loop after first\n\n              return acc.concat(\n                anns.map(a => (\n                  <SingleAnnotation\n                    {...this.props}\n                    key={`la-vz-${a.id}-annotation-circular-row`}\n                    id={`la-vz-${a.id}-annotation-circular-row`}\n                    annotation={a}\n                    currBRadius={currBRadius}\n                    currTRadius={currTRadius}\n                    transparentPath={transparentPath}\n                    labelStyle={labelStyle}\n                    annStyle={annStyle}\n                    hoverAnnotation={this.hoverAnnotation}\n                    calcBorderColor={darkerColor}\n                    centralIndex={circular}\n                  />\n                ))\n              );\n            }, [])}\n          </g>\n        )}\n      </CentralIndexContext.Consumer>\n    );\n  }\n}\n\n/**\n * A component for a single annotation within the Circular Viewer\n *\n * @param {AnnotationProps} props for a single Annotation\n */\nconst SingleAnnotation = props => {\n  const {\n    annotation: a,\n    seqLength,\n    getRotation,\n    generateArc,\n    currBRadius,\n    currTRadius,\n    centralIndex,\n    lineHeight,\n    transparentPath,\n    inputRef,\n    calcBorderColor,\n    hoverAnnotation,\n    annStyle,\n    inlinedAnnotations,\n    labelStyle\n  } = props;\n\n  // if it crosses the zero index, correct for actual length\n  let annLength =\n    a.end >= a.start ? a.end - a.start : seqLength - a.start + a.end;\n\n  // can't make an arc from a full circle\n  annLength = annLength === 0 ? seqLength - 0.1 : annLength;\n\n  // how many degrees should it be rotated?\n  const rotation = getRotation(a.start);\n\n  if (currBRadius < 0 || currTRadius < 0) {\n    return null;\n  }\n\n  //is name in top or bottom half?\n  const mid = (annLength / 2 + a.start + seqLength - centralIndex) % seqLength;\n  const bottomHalf = mid > seqLength * 0.25 && mid < seqLength * 0.75;\n\n  const path = generateArc({\n    innerRadius: currBRadius,\n    outerRadius: currTRadius,\n    length: annLength,\n    largeArc: annLength > seqLength / 2,\n    sweepFWD: true,\n    arrowFWD: a.direction === 1,\n    arrowREV: a.direction === -1\n  });\n  const namePath = generateArc({\n    innerRadius: bottomHalf ? currBRadius : currTRadius,\n    outerRadius: bottomHalf ? currBRadius : currTRadius,\n    length: annLength,\n    largeArc: annLength > seqLength / 2,\n    sweepFWD: true,\n    arrowFWD: false,\n    arrowREV: false\n  });\n\n  const circAnnID = `la-vz-${a.id}-circular`;\n  return (\n    <g id={`la-vz-${a.id}-annotation-circular`} transform={rotation}>\n      <path id={circAnnID} d={namePath} {...transparentPath} />\n      <path\n        d={path}\n        id={a.id}\n        className={a.id}\n        ref={inputRef(a.id, {\n          ref: a.id,\n          start: a.start,\n          end: a.end,\n          type: \"ANNOTATION\",\n          direction: a.direction\n        })}\n        fill={a.color}\n        stroke={COLOR_BORDER_MAP[a.color] || calcBorderColor(a.color)}\n        onMouseOver={() => hoverAnnotation(a.id, 1.0)}\n        onMouseOut={() => hoverAnnotation(a.id, 0.7)}\n        onFocus={() => {}}\n        onBlur={() => {}}\n        {...annStyle}\n      />\n      {inlinedAnnotations.includes(a.id) && (\n        <text\n          id={a.id}\n          dy={-0.4 * lineHeight}\n          onMouseOver={() => hoverAnnotation(a.id, 1.0)}\n          onMouseOut={() => hoverAnnotation(a.id, 0.7)}\n          onFocus={() => {}}\n          onBlur={() => {}}\n        >\n          <textPath\n            id={a.id}\n            textAnchor=\"middle\"\n            startOffset={bottomHalf ? \"25%\" : \"75%\"}\n            dominantBaseline=\"middle\"\n            xlinkHref={`#${circAnnID}`}\n            {...labelStyle}\n          >\n            {a.name}\n          </textPath>\n        </text>\n      )}\n    </g>\n  );\n};\n","import * as React from \"react\";\n\nexport default class CutSites extends React.PureComponent {\n  calculateLinePath = (index, startRadius, endRadius) => {\n    const { findCoor } = this.props;\n    const lineStart = findCoor(index, startRadius);\n    const lineEnd = findCoor(index, endRadius);\n    const linePath = `M ${lineEnd.x} ${lineEnd.y}\n            L ${lineStart.x} ${lineStart.y}`;\n    return linePath;\n  };\n\n  displayCutSite = cutSite => {\n    const {\n      radius,\n      lineHeight,\n      seqLength,\n      getRotation,\n      inputRef,\n      generateArc\n    } = this.props;\n    const { id, start } = cutSite;\n    let { fcut, rcut, end } = cutSite;\n\n    // crosses the zero index\n    if (start + fcut > end + rcut) {\n      end = start > end ? end + seqLength : end;\n      if (fcut > rcut) rcut += seqLength;\n      else fcut += seqLength;\n    }\n\n    // length for highlighted recog area\n    const cutSiteLength = Math.abs(end - start);\n\n    // const calc the size of the recog area radii\n    let topR = radius + lineHeight; // outer radius\n    if (seqLength < 200) {\n      topR += 2 * lineHeight;\n    }\n\n    // find start and stop coordinates of recog area\n    const recogAreaPath = generateArc({\n      innerRadius: radius,\n      outerRadius: topR,\n      length: cutSiteLength,\n      largeArc: cutSiteLength > seqLength / 2,\n      sweepFWD: true\n    });\n\n    // find start and stop coordinates to cut site line\n    const cutLinePath = this.calculateLinePath(\n      fcut - start,\n      radius + lineHeight * 2,\n      radius + lineHeight * 1.5\n    );\n\n    // find start and stop coordinates of connector line\n    const connectorLinePath = generateArc({\n      innerRadius: radius + lineHeight * 1.5,\n      outerRadius: radius + lineHeight * 1.5,\n      length: Math.abs(fcut - rcut),\n      largeArc: Math.abs(fcut - rcut) > seqLength / 2,\n      sweepFWD: true,\n      offset: Math.min(fcut, rcut) - start\n    });\n\n    // find start and stop coordinates to hang site line\n    const hangLinePath = this.calculateLinePath(\n      rcut - start,\n      radius + lineHeight * 1.5,\n      radius + lineHeight / 1.2\n    );\n\n    const fill = \"rgba(255, 165, 0, 0.2)\";\n\n    const cutSiteStyle = {\n      stroke: \"black\",\n      strokeWidth: 1,\n      fill: fill,\n      shapeRendering: \"auto\",\n      cursor: \"pointer\",\n      fillOpacity: 0\n    };\n\n    const lineStyle = {\n      fill: \"transparent\",\n      stroke: \"black\",\n      strokeWidth: 1,\n      shapeRendering: \"auto\"\n    };\n\n    return (\n      <g\n        id={`la-vz-circular-cutsite-${id}`}\n        key={id}\n        transform={getRotation(start)}\n      >\n        {<path d={cutLinePath} {...lineStyle} />}\n        {<path d={connectorLinePath} {...lineStyle} />}\n        {<path d={hangLinePath} {...lineStyle} />}\n        <path\n          {...cutSiteStyle}\n          d={recogAreaPath}\n          className={id}\n          ref={inputRef(id, {\n            ref: id,\n            start: start,\n            end: end,\n            type: \"ENZYME\"\n          })}\n        />\n      </g>\n    );\n  };\n\n  render() {\n    const { cutSites } = this.props;\n\n    if (!cutSites.length) {\n      return null;\n    }\n\n    return (\n      <g className=\"la-vz-circular-cutsites\">\n        {cutSites.map(this.displayCutSite)}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport default class CircularFind extends React.PureComponent {\n  /**\n   * Create an SVG `path` element that highlights the search result\n   *\n   * @param {SearchResult} result a single search result with start, end, direction\n   */\n  createHighlight = result => {\n    const {\n      radius,\n      lineHeight,\n      seqLength,\n      getRotation,\n      generateArc,\n      inputRef\n    } = this.props;\n    let { start, end } = result;\n    // crosses the zero index\n    if (end < start) {\n      end += seqLength;\n    }\n\n    const resultLength = Math.abs(end - start);\n    const findPath = generateArc({\n      innerRadius: radius - lineHeight / 2,\n      outerRadius: radius + lineHeight / 2,\n      length: resultLength,\n      largeArc: resultLength > seqLength / 2,\n      sweepFWD: true\n    });\n\n    const resultStyle = {\n      stroke: \"rgba(0, 0, 0, 0.5)\",\n      strokeWidth: 1,\n      fill: \"rgba(255, 251, 7, 0.5)\",\n      shapeRendering: \"auto\",\n      cursor: \"pointer\"\n    };\n\n    const id = `${start}${end}${result.direction}${result.start}`;\n\n    return (\n      <path\n        key={id}\n        id={id}\n        d={findPath}\n        transform={getRotation(result.start)}\n        ref={inputRef(id, {\n          ref: id,\n          start: result.start,\n          end: result.end,\n          type: \"FIND\"\n        })}\n        {...resultStyle}\n      />\n    );\n  };\n\n  render() {\n    const { seqLength, search } = this.props;\n    const threshold =\n      seqLength >= 200 ? search.length / seqLength <= 0.02 : true;\n\n    if (!search.length) {\n      return null;\n    }\n\n    return (\n      threshold && (\n        <g className=\"la-vz-circular-search-results\">\n          {search.map(this.createHighlight)}\n        </g>\n      )\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport CentralIndexContext from \"../handlers/centralIndex\";\n\n/**\n * this component renders the following:\n * \t\t1. the name (center or bottom)\n * \t\t2. the number of bps (center or bottom)\n * \t\t3. the plasmid circle\n * \t\t4. the index ticks and numbers along the plasmid circle\n *\n * center or bottom here refers to the fact that the name/bps of the\n * part need to be pushed to the bottom of the circular viewer if there\n * are too many elements in the circular viewer and the name won't fit\n */\nexport default class Index extends React.PureComponent {\n  static contextType = CentralIndexContext;\n\n  static getDerivedStateFromProps = nextProps => {\n    const { seqLength } = nextProps;\n    let centralIndex = 0;\n    if (this.context) {\n      centralIndex = this.context.circular;\n    }\n\n    const tickCount = 6;\n    // make each increment a multiple of 10 with two sig figs\n    const increments = Math.floor(seqLength / tickCount);\n    let indexInc = Math.max(+increments.toPrecision(2), 10);\n    while (indexInc % 10 !== 0) indexInc += 1;\n\n    // make all the ticks. Also, only keep ticks that are +/- 6 tick incremenets from the top\n    // centralIndex, as the others won't be shown/rendered anyway\n    let ticks = [];\n    for (let i = 0; i <= seqLength - indexInc / 2; i += indexInc) {\n      ticks.push(i === 0 ? 1 : i);\n    }\n    const tickTolerance = indexInc * 6;\n    ticks = ticks.filter(\n      t =>\n        Math.abs(centralIndex - t) < tickTolerance ||\n        Math.abs(centralIndex + seqLength - t) < tickTolerance ||\n        Math.abs(centralIndex - seqLength - t) < tickTolerance\n    );\n    return { ticks, indexInc };\n  };\n\n  state = {\n    ticks: [],\n    indexInc: 10\n  };\n\n  /**\n   * return a react element for the basepairs along the surface of the plasmid viewer\n   */\n  renderBasepairs = () => {\n    const {\n      seq,\n      compSeq,\n      seqLength,\n      lineHeight,\n      radius,\n      findCoor,\n      getRotation\n    } = this.props;\n    const { indexInc } = this.state;\n    const centralIndex = this.context.circular;\n\n    // we should show all basepairs, with only 4 ticks\n    const seqForCircular = seq + seq;\n    const compSeqForCircular = compSeq + compSeq;\n    let firstBase = centralIndex - indexInc * 5;\n    let lastBase = centralIndex + indexInc * 5;\n    if (centralIndex < seqLength / 2) {\n      firstBase += seqLength;\n      lastBase += seqLength;\n    }\n    const basepairsToRender = [];\n    for (let i = firstBase; i <= lastBase; i += 1) {\n      basepairsToRender.push(\n        <text\n          key={`la-vz-base_${i}`}\n          {...findCoor(0, radius + 2 * lineHeight)}\n          transform={getRotation(i + 0.25)}\n        >\n          {seqForCircular.charAt(i)}\n        </text>,\n        <text\n          key={`la-vz-base_comp_${i}`}\n          {...findCoor(0, radius + lineHeight)}\n          transform={getRotation(i + 0.25)}\n        >\n          {compSeqForCircular.charAt(i)}\n        </text>\n      );\n    }\n    return basepairsToRender;\n  };\n\n  render() {\n    const {\n      seq,\n      name,\n      radius,\n      center,\n      size,\n      yDiff,\n      seqLength,\n      lineHeight,\n      getRotation,\n      generateArc,\n      findCoor,\n      totalRows,\n      showIndex\n    } = this.props;\n    const { ticks } = this.state;\n\n    if (!showIndex) {\n      return null; // don't waste time, don't show\n    }\n\n    // split up the name so it fits within spans in the center\n    // 30 letters is arbitrary. would be better to first search for \"cleaveable characters\"\n    // like \"|\" or \",\" and revert to all chars if those aren't found. Or to decrease\n    // name size first before cleaving, etc\n    const mostInwardElementRadius = radius - totalRows * lineHeight;\n    const cutoff = 30;\n    const nameSpans = [];\n    let nameIndex = 0;\n    // TODO: react freaks out when the circ viewer is small and each line is one char\n    // bc there are shared keys (also it's just not a good look)\n    while (nameIndex < name.length) {\n      nameSpans.push(name.substring(nameIndex, nameIndex + cutoff).trim());\n      nameIndex += cutoff;\n    }\n\n    // generate the name text for the middle of the plasmid\n    const spanCountAdjust = 20 * nameSpans.length; // adjust for each tspan off name\n    const nameYAdjust = 14 + spanCountAdjust; // correct for both\n    const nameCoorRadius = (nameSpans[0].length / 2) * 12; // 12 px per character\n\n    // if the elements will begin to overlap with the\n    // name, move the name downward to the bottom of the viewer\n    const nameCoor =\n      nameCoorRadius > mostInwardElementRadius\n        ? {\n            x: center.x,\n            y: size.height - nameYAdjust - yDiff\n          }\n        : {\n            x: center.x,\n            y: center.y - ((nameSpans.length - 1) / 2) * 25 // shift the name up for >1 rows of text\n          };\n\n    // these are just created once, but are rotated to each position along the plasmid\n    const tickCoorStart = findCoor(0, radius);\n    const tickCoorEnd = findCoor(0, radius - 10);\n\n    // create tick and text style\n    const nameStyle = {\n      fontSize: 20,\n      textAnchor: \"middle\",\n      fontWeight: 500\n    };\n    const subtitleStyle = {\n      fontSize: 14,\n      textAnchor: \"middle\",\n      fill: \"gray\"\n    };\n    const indexCircleStyle = {\n      fill: \"transparent\",\n      stroke: \"#73777D\",\n      strokeWidth: 3\n    };\n    const tickLineStyle = {\n      fill: \"transparent\",\n      stroke: \"black\",\n      strokeWidth: 1,\n      shapeRendering: \"geometricPrecision\"\n    };\n    const tickTextStyle = {\n      textAnchor: \"middle\",\n      fontWeight: 300\n    };\n\n    // generate the full circle around the edge of the plasmid\n    const indexCurve = generateArc({\n      innerRadius: radius,\n      outerRadius: radius,\n      length: seqLength / 2,\n      largeArc: true\n    });\n    return (\n      <g className=\"la-vz-circular-index\">\n        {/* A label showing the name of the plasmid */}\n        <text {...nameStyle}>\n          {nameSpans.map((n, i) => (\n            <tspan key={n} x={nameCoor.x} y={nameCoor.y + i * 25}>\n              {n}\n            </tspan>\n          ))}\n        </text>\n\n        {/* A label for the length of the plasmid */}\n        <text\n          x={nameCoor.x}\n          y={nameCoor.y + 14 + 25 * (nameSpans.length - 1)}\n          {...subtitleStyle}\n        >\n          {`${seqLength} bp`}\n        </text>\n\n        {/* If less than 200bp long, render the bp of the plasmid */}\n        {seq.length < 200 ? (\n          <g className=\"la-vz-circular-bps\">{this.renderBasepairs()}</g>\n        ) : null}\n\n        {/* The ticks and their index labels */}\n        {ticks.map(t => (\n          <g key={`la-vz-${t}_tick`} transform={getRotation(t - 0.5)}>\n            <path\n              d={`M ${tickCoorStart.x} ${tickCoorStart.y}\n                L ${tickCoorEnd.x} ${tickCoorEnd.y}`}\n              {...tickLineStyle}\n            />\n            <text\n              x={tickCoorEnd.x}\n              y={tickCoorEnd.y + lineHeight}\n              {...tickTextStyle}\n            >\n              {t}\n            </text>\n          </g>\n        ))}\n\n        {/* The two arcs that make the plasmid's circle */}\n        <g>\n          <path\n            d={indexCurve}\n            transform={getRotation(seqLength * 0.75)}\n            {...indexCircleStyle}\n          />\n          <path\n            d={indexCurve}\n            transform={getRotation(seqLength * 0.25)}\n            {...indexCircleStyle}\n          />\n        </g>\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { CHAR_WIDTH } from \"./Circular.jsx\";\n\n/**\n * a component that groups several other labels together so they're all viewable at once\n */\nexport default class WrappedGroupLabel extends React.Component {\n  /**\n   * given the currently active annotation block, with multiple annotations and enzymes,\n   * render each in a single \"block\", which is a g element with a rect \"containing\" the\n   * names. This is slightly tricky because we can't put the text elements inside\n   * the rect as though it were a div and have them fill it. instead, we must calculate\n   * the height and width of the resulting annotaiton block\n   */\n  render() {\n    const {\n      group,\n      setHoveredGroup,\n      lineHeight,\n      size: { height, width }\n    } = this.props;\n\n    // utility function for calculating the width of the last row before this one\n    // the +1 after name.length is for a comma\n    const calcRowWidth = row =>\n      row.reduce((acc, label) => acc + (label.name.length + 1) * CHAR_WIDTH, 0);\n\n    // group the labels into rows with a preference with widths less than 200px\n    const lastRow = acc => acc[acc.length - 1];\n    const labelRows = group.labels.reduce((acc, l) => {\n      const nameWidth = l.name.length * CHAR_WIDTH;\n      if (nameWidth > width) {\n        // handle an edge case where the annotation name is MASSIVE and\n        // greater than the width of the sequence viewer\n        // split the name into separate rows so it's at max 75% of the\n        // seq viewer's width, but each still referencing the original label\n        const maxCharPerRow = Math.floor((width * 0.75) / CHAR_WIDTH);\n        const splitRegex = new RegExp(`.{1,${maxCharPerRow}}`, \"g\");\n        const splitLabelNameRows = l.name.match(splitRegex);\n        if (splitLabelNameRows.length) {\n          splitLabelNameRows.forEach(splitLabel => {\n            acc.push([{ ...l, name: splitLabel.trim() }]);\n          });\n          return acc;\n        }\n      }\n      if (lastRow(acc)) {\n        // this isn't the first element, check width of last label row\n        const lastRowWidth = calcRowWidth(lastRow(acc));\n        if (lastRowWidth + nameWidth <= 200) {\n          // there's space in the last row for this label as well\n          acc[acc.length - 1].push(l);\n          return acc;\n        }\n      }\n      acc.push([l]); // need to make a new row for this label\n      return acc;\n    }, []);\n\n    // find the grouping's height and width (max row width)\n    const groupHeight = labelRows.length * lineHeight;\n    const groupWidth = labelRows.reduce(\n      (max, row, i) =>\n        Math.max(\n          max,\n          calcRowWidth(row) - (i === labelRows.length - 1 ? CHAR_WIDTH : 0)\n        ), // no comma on last row, correct\n      0\n    );\n    // add one CHAR_WIDTH padding to all sides of label box\n    const [rectHeight, rectWidth] = [groupHeight, groupWidth].map(\n      x => x + 2 * CHAR_WIDTH\n    );\n\n    // generate the line between the name and plasmid surface\n    const forkCoor = group.forkCoor || group.textCoor;\n    const linePath = group.forkCoor\n      ? `M${group.textCoor.x} ${group.textCoor.y} L${forkCoor.x} ${forkCoor.y}`\n      : `M${group.lineCoor.x} ${group.lineCoor.y} L${forkCoor.x} ${forkCoor.y}`;\n\n    // find the upper left coordinate for the group. if this is on the right\n    // side of the plasmid, this is upper left. if it's on the left side of\n    // the plasmid, it should be upper right\n    let { x, y } = group.textCoor;\n    // the +3) is for \",+#\"\n    x =\n      group.textAnchor === \"end\"\n        ? x - (group.labels[0].name.length + 3) * CHAR_WIDTH\n        : x;\n    y -= CHAR_WIDTH;\n    x = Math.max(x, 2 * CHAR_WIDTH); // prevent overflow of left or right side\n    x = Math.min(x, width - 2 * CHAR_WIDTH - groupWidth);\n    y = Math.max(y, 2 * CHAR_WIDTH); // prevent overflow of top and bottom\n    y = Math.min(y, height - 2 * CHAR_WIDTH - groupHeight);\n\n    // add padding to the box by adding/subbing a CHAR_WIDTH from edges\n    const groupCoor = { x, y };\n    const rectCoor = { x: x - CHAR_WIDTH, y: y - CHAR_WIDTH - 2 };\n\n    const key = `${group.labels[0].id}_overlay`;\n\n    return (\n      <g key={key} onMouseLeave={() => setHoveredGroup(\"\")}>\n        <path d={linePath} className=\"la-vz-label-line\" />\n        <rect\n          fill=\"white\"\n          stroke=\"none\"\n          height={rectHeight}\n          width={rectWidth}\n          {...rectCoor}\n        />\n        <text {...groupCoor}>\n          {labelRows.map((r, i) => (\n            // turn each group of label rows into a text span\n            // that's vertically spaced from the row above it\n            // add a comma to all but the last label\n            <tspan\n              key={`${key}_${i}`}\n              y={groupCoor.y + (i + 0.5) * lineHeight}\n              x={groupCoor.x}\n              dominantBaseline=\"middle\"\n            >\n              {r.map((l, i2) => (\n                // every label should have its own id (used by selection\n                // handler) and trigger the hoverCutSite function\n                // if it's an enzyme\n                <React.Fragment key={l.id}>\n                  <tspan\n                    id={l.id}\n                    className=\"la-vz-circular-label\"\n                    y={groupCoor.y + (i + 0.5) * lineHeight}\n                    dominantBaseline=\"middle\"\n                    tabIndex={-1}\n                  >\n                    {l.name}\n                  </tspan>\n                  {i2 < r.length - 1 || i !== labelRows.length - 1 ? \",\" : \"\"}\n                </React.Fragment>\n              ))}\n            </tspan>\n          ))}\n        </text>\n        <rect\n          fill=\"none\"\n          stroke=\"black\"\n          strokeWidth={1.5}\n          height={rectHeight}\n          width={rectWidth}\n          {...rectCoor}\n        />\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { CHAR_WIDTH } from \"./Circular.jsx\";\nimport WrappedGroupLabel from \"./WrappedGroupLabel.jsx\";\n\n/**\n * used to build up all plasmid labels, for annotations, enzymes, etc\n *\n * a caveat to take into account here is that the names, outside the\n * map, might also overlap with one another. There will need to be a check, given\n * the dimensions of each name, calculated by the font, and the size\n * of the viewer, for scaling these names and positioning in the Y-direction\n * to avoid this overlap problem\n *\n * @type {Function}\n */\nexport default class Labels extends React.Component {\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    // I'm storing the name position groups in state because hovering and\n    // leaving a hover both trigger a change in whether to render and show\n    // the annotation block, it would be expensive to regroup labels\n    // on every hover event\n    return {\n      labelGroups: Labels.groupOverlappingLabels(nextProps),\n      hoveredGroup: prevState.hoveredGroup\n    };\n  };\n\n  /**\n   * need to avoid having overlapping names. if names\n   * overlap with one another, they should be grouped together and\n   * just show the first name of the group. Ex: \"M13-rev,GTP,+3\"\n   *\n   * On hover over this group, all the other names should be shown\n   *\n   * this should return all the informaiton needed to render the\n   * name by itself or in a grouping\n   */\n  static groupOverlappingLabels = props => {\n    const {\n      radius,\n      labels,\n      center,\n      seqLength,\n      findCoor,\n      lineHeight,\n      size,\n      yDiff\n    } = props;\n\n    // create a radius outside the plasmid map for placing the names\n    const textRadiusAdjust =\n      seqLength > 200 ? lineHeight * 2 : lineHeight * 3.5;\n    const textRadius = radius + textRadiusAdjust;\n\n    /**\n     * add positional information to each label. this includes the coordinates\n     * for the textCoor (starting point for text), line (starting point\n     * for the line connecting plasmid to name) and the textAnchor (does the name\n     * get positioned so it starts at the textCoor or ends at the textCoor?)\n     */\n    const labelsWithCoordinates = labels\n      .reduce((acc, labelRow) => acc.concat(labelRow), []) // flatten the rows\n      .map(a => {\n        // find the mid-point, vertically, for the label, correcting for entities\n        // that cross the zero-index\n        let annCenter;\n        if (a.type === \"enzyme\") {\n          annCenter = a.start;\n        } else if (a.end > a.start) {\n          const annMidSum = a.end + a.start;\n          annCenter = annMidSum / 2;\n        } else {\n          const annStart = a.start - seqLength;\n          const annMidSum = annStart + a.end;\n          annCenter = annMidSum / 2;\n        }\n\n        // find the seed-points\n        const lineCoor = findCoor(annCenter, radius, true);\n        const textCoor = findCoor(annCenter, textRadius, true);\n        const left = textCoor.x <= center.x;\n\n        // find the textAnchor, based on which side of plasmid it's on\n        const textAnchor = left ? \"end\" : \"start\";\n        const label = a; // just to keep short-hand in return\n        return { label, lineCoor, textCoor, textAnchor };\n      });\n\n    // a utility function for checking whether a label and textCoor will overflow\n    const groupOverflows = (label, textCoor) => {\n      const nameLength = (label.name.length + 4) * CHAR_WIDTH; // +4 for \",+#\" and padding\n      let overflow = false;\n\n      const heightYPos = textCoor.y + yDiff;\n      if (heightYPos < 0 || heightYPos > size.height) {\n        overflow = true; // vertical overflow\n      } else if (\n        textCoor.x - nameLength < 0 ||\n        textCoor.x + nameLength > size.width\n      ) {\n        overflow = true; // horizontal overflow\n      }\n      return overflow;\n    };\n\n    /**\n     * merge overlapping names into groupings. If multiple of the labels\n     * will overlap with one another, create an array of them and generate an\n     * overview name to show for all of them (ex above)\n     */\n    let labelsGrouped = labelsWithCoordinates.reduce((acc, n) => {\n      // search through the other names and check whether any would overlap\n      const overlapIndex = acc.findIndex(g => {\n        // first check whether the two labels are on the same side of the plasmid\n        if (g.textAnchor === n.textAnchor) {\n          // characters are 13px high, this is creating 2px of padding\n          return Math.abs(g.textCoor.y - n.textCoor.y) < 15;\n        }\n        return false;\n      });\n\n      if (overlapIndex > -1) {\n        // add this label to an already existing group\n        acc[overlapIndex].labels.push(n.label);\n        acc[overlapIndex].grouped = true;\n        return acc;\n      }\n\n      // this name doesn't overlap with any others\n      // check whether the its name overflows the side of the viewer\n      const overflow = groupOverflows(n.label, n.textCoor);\n\n      // create a new \"group\" from this single label\n      return acc.concat({\n        textAnchor: n.textAnchor,\n        textCoor: n.textCoor,\n        lineCoor: n.lineCoor,\n        labels: [n.label],\n        grouped: overflow,\n        overflow: overflow\n      });\n    }, []);\n\n    /**\n     * we now want to *ungroup* labels that we can do overlap avoidance for by doing small vertical\n     * adjustments. So for every group that is grouped but doesn't overlap (ie, the labels\n     * overlap but the group doesn't overflow the viewer's edge), try to spread out the\n     * labels so the user can see all of them at once and by default\n     *\n     * to do this we need to create a forkCoor, where the textCoors of the constituent\n     * labels will connect. That forkCoor, in turn, will be what connects to the edge of\n     * the plasmid\n     */\n    labelsGrouped = labelsGrouped.reduce((acc, g, i) => {\n      // wasn't grouped or overflows the side of viewer or too many labels to try and help\n      if (!g.grouped || g.overflow || g.labels.length > 4) return acc.concat(g);\n\n      // since the labels are sorted (see circular.filterOutsideLabels), we can just check the\n      // coordinate of this group's neighbors to see whether we can spread out\n      let leftNeighbor = acc[acc.length - 1];\n      let rightNeighbor = labelsGrouped[i + 1];\n      if (leftNeighbor && leftNeighbor.textAnchor !== g.textAnchor) {\n        leftNeighbor = undefined;\n      }\n      if (rightNeighbor && rightNeighbor.textAnchor !== g.textAnchor) {\n        rightNeighbor = undefined;\n      }\n\n      // try and split/shift labels horizontally\n      const newLabels = g.labels.map((l, i2) => {\n        // if on right side of the viewer, shfit rightward\n        let xDelta = i2 * (3 * CHAR_WIDTH);\n        if (g.textAnchor === \"end\") xDelta = -xDelta; // otherwise shift leftward\n\n        let yDelta = (g.labels.length - i2) * -15; // start off by shifting upwards 15px if on top half\n        if (g.textCoor.y > center.y) yDelta = (g.labels.length - i2) * 15; // otherwise shift down\n\n        const newTextCoor = {\n          x: g.textCoor.x + xDelta, // try to make the adjustment to the left/right\n          y: g.textCoor.y + yDelta // try ot make the adjustment to the top/bottom\n        };\n        const overflow = groupOverflows(l, newTextCoor);\n\n        return {\n          ...g,\n          textCoor: newTextCoor,\n          grouped: overflow, // only \"grouped\" (misnomer) if it overlaps\n          overflow: overflow,\n          labels: [l], // single label now\n          forkCoor: g.textCoor // fork point becomes the old textCoor\n        };\n      });\n\n      // check whether any of these attempted new labels overlaps with the neighbors\n      const overlapWithNeighbors = newLabels.some(l =>\n        [leftNeighbor, rightNeighbor].some(\n          n => n && Math.abs(n.textCoor.y - l.textCoor.y) < 15\n        )\n      );\n      if (overlapWithNeighbors) return acc.concat(g); // just bail and return the original grouping\n      return acc.concat(...newLabels); // add the newly created labels\n    }, []);\n\n    /**\n     * give actual names. this is in a separate loop because the group name\n     * is going to indicate how many other sub labels are in a block/grouping\n     * and it's easier to make them once than to update continually in the reduce above\n     */\n    labelsGrouped = labelsGrouped.map(a => {\n      const firstName = a.labels[0].name;\n      const restLength = a.labels.length - 1;\n      if (a.overflow) {\n        // would extend outside the viewer if we included the group name\n        return { ...a, name: `+${restLength + 1}` };\n      } else if (a.grouped) {\n        // does not extend outside width/height of the viewer with group name\n        return { ...a, name: `${firstName},+${restLength}` };\n      }\n      // didn't have to be grouped at all\n      return { ...a, name: firstName };\n    });\n\n    /**\n     * prevent the labels from overflowing the side of the viewer\n     * even the small \"+1\" labels can overflow the sides if the viewer is small enough\n     * this pushes their textCoors inward to prevent that\n     */\n    return labelsGrouped.map(g => {\n      let { x, y } = g.textCoor;\n      // prevent the text label from overflowing the sides (w/ one char padding)\n      x = Math.max(CHAR_WIDTH * (g.name.length + 1), x);\n      x = Math.min(size.width - (g.name.length + 1) * CHAR_WIDTH, x);\n      y = Math.max(CHAR_WIDTH, y);\n      y = Math.min(size.height - CHAR_WIDTH - 13, y); // assuming 13px font-size w/ padding\n      return { ...g, textCoor: { x, y } };\n    });\n  };\n\n  // empty arrays on first load\n  state = {\n    labelGroups: [],\n    hoveredGroup: \"\"\n  };\n\n  // set the currently hovered group\n  setHoveredGroup = hoveredGroup => {\n    if (hoveredGroup !== this.state.hoveredGroup) {\n      this.setState({ hoveredGroup });\n    }\n  };\n\n  render() {\n    const { labelGroups, hoveredGroup } = this.state;\n    const { size, lineHeight } = this.props;\n\n    // find the currently hovered group\n    const hovered = labelGroups.find(g => g.labels[0].id === hoveredGroup);\n\n    return (\n      <g\n        className=\"la-vz-circular-labels\"\n        onMouseLeave={() => this.setHoveredGroup(\"\")}\n      >\n        {labelGroups.map(g => {\n          const [first] = g.labels;\n          // generate the line between the name and plasmid surface\n          const fC = g.forkCoor || g.textCoor;\n          const labelLines = (\n            <React.Fragment>\n              <path\n                d={`M${g.lineCoor.x} ${g.lineCoor.y} L${fC.x} ${fC.y}`}\n                className=\"la-vz-label-line\"\n              />\n              {g.forkCoor && (\n                <path\n                  d={`M${fC.x} ${fC.y} L${g.textCoor.x} ${g.textCoor.y}`}\n                  className=\"la-vz-label-line\"\n                />\n              )}\n            </React.Fragment>\n          );\n\n          if (!g.grouped) {\n            // just a single name in this position\n            return (\n              <g key={first.id}>\n                {labelLines}\n                <text\n                  id={first.id}\n                  className=\"la-vz-circular-label\"\n                  {...g.textCoor}\n                  textAnchor={g.textAnchor}\n                  dominantBaseline=\"middle\"\n                >\n                  {g.name}\n                </text>\n              </g>\n            );\n          } else if (first.id === hoveredGroup) {\n            // return nothing, this group block needs to be rendered last to be\n            // on top of the other elements in the SVG\n            return null;\n          }\n          // a group of names which should render an overlap block\n          return (\n            <g key={`${first.id}_listener`} id={`${first.id}-label`}>\n              {labelLines}\n              <text\n                id={first.id}\n                className=\"la-vz-circular-label\"\n                textAnchor={g.textAnchor}\n                onMouseEnter={() => this.setHoveredGroup(first.id)}\n                dominantBaseline=\"middle\"\n                {...g.textCoor}\n              >\n                {g.name}\n              </text>\n            </g>\n          );\n        })}\n        {hovered && (\n          <WrappedGroupLabel\n            group={hovered}\n            size={size}\n            setHoveredGroup={this.setHoveredGroup}\n            lineHeight={lineHeight}\n          />\n        )}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\n/**\n * Used to build up all the path elements. Does not include a display\n * of the primer name or a line connecting name to primer\n *\n * one central consideration here is that primers might overlap with one another.\n * to avoid having those overalp visually, primers are first moved into rows,\n * which are non-overlapping arrays or primer arrays, which are then\n * used to create the array of array of primer paths\n *\n * When the Zoom is greater than 5, show the primer names in the primers\n * (move them to within the primer)\n *\n * @type {Function}\n */\nexport default class Primers extends React.PureComponent {\n  hoverPrimer = (className, opacity) => {\n    const elements = document.getElementsByClassName(className);\n    for (let i = 0; i < elements.length; i += 1) {\n      elements[i].style.fillOpacity = opacity;\n    }\n  };\n\n  render() {\n    const {\n      radius,\n      rowsToSkip,\n      Zoom,\n      lineHeight,\n      primers,\n      showPrimers\n    } = this.props;\n\n    const rowShiftHeight = lineHeight * rowsToSkip;\n    const radiusAdjust = lineHeight * 3;\n    let currBRadius = radius - radiusAdjust - rowShiftHeight;\n\n    // increasing the size of the primers during a \"zoom\"\n    let currTRadius = currBRadius - lineHeight; // top radius\n\n    if (!primers.length || !showPrimers) {\n      return null;\n    }\n\n    return (\n      <g className=\"la-vz-circular-primers\">\n        {primers.reduce((acc, primerRows, i) => {\n          if (i) {\n            currBRadius -= lineHeight + 3;\n            currTRadius -= lineHeight + 3;\n          } // increment the primerRow radii if on every loop after first\n          return acc.concat(\n            primerRows.map(primer => (\n              <SinglePrimer\n                {...this.props}\n                key={`${primer.id}-${primer.start}`}\n                id={primer.id}\n                primer={primer}\n                currBRadius={currBRadius}\n                currTRadius={currTRadius}\n                Zoom={Zoom}\n                hoverPrimer={this.hoverPrimer}\n              />\n            ))\n          );\n        }, [])}\n      </g>\n    );\n  }\n}\n\n/**\n * A component for a single primer within the Circular Viewer\n *\n * @param {PrimerProps} props for a single Primer\n */\nconst SinglePrimer = props => {\n  const {\n    primer,\n    seqLength,\n    getRotation,\n    generateArc,\n    currBRadius,\n    currTRadius,\n    inputRef,\n    hoverPrimer,\n    Zoom\n  } = props;\n\n  // shared style object for inlining\n  const primerStyle = {\n    strokeWidth: Zoom > 30 ? 1 : 0.5,\n    shapeRendering: \"geometricPrecision\",\n    cursor: \"pointer\",\n    fillOpacity: 0.2,\n    strokeLinejoin: \"round\",\n    fill: \"#1b1d21\",\n    stroke: \"#1b1d21\"\n  };\n\n  // do not try to render primers without binding site information\n  if (!primer.end || !primer.start) {\n    return null;\n  }\n\n  // if it crosses the zero index, correct for actual length\n  let primerLength =\n    primer.end >= primer.start\n      ? primer.end - primer.start\n      : seqLength - primer.start + primer.end;\n\n  // can't make an arc from a full circle\n  primerLength = primerLength === 0 ? seqLength - 0.1 : primerLength;\n\n  // how many degrees should it be rotated?\n  const rotation = getRotation(primer.start);\n\n  if (currBRadius < 0 || currTRadius < 0) {\n    return null;\n  }\n\n  const path = generateArc({\n    innerRadius: currBRadius,\n    outerRadius: currTRadius,\n    length: primerLength,\n    largeArc: primerLength > seqLength / 2,\n    sweepFWD: true,\n    arrowFWD: primer.direction === 1,\n    arrowREV: primer.direction === -1,\n    isInsert: primer.type === \"insert\"\n  });\n\n  return (\n    <g id={primer.id} transform={rotation}>\n      <path\n        d={path}\n        id={primer.id}\n        className={primer.id}\n        ref={inputRef(primer.id, {\n          ref: primer.id,\n          start: primer.start,\n          end: primer.end,\n          type: \"PRIMER\",\n          element: null\n        })}\n        onMouseOver={() => hoverPrimer(primer.id, 0.3)}\n        onMouseOut={() => hoverPrimer(primer.id, 0.2)}\n        onFocus={() => {}}\n        onBlur={() => {}}\n        {...primerStyle}\n      />\n    </g>\n  );\n};\n","import * as React from \"react\";\n\nimport { SelectionContext } from \"../handlers/selection.jsx\";\n\n/**\n * renders the selection range of the plasmid viewer\n * consists of three parts (during an active selection):\n * \t\tleft sidebar, right sidebar and the middle selection region\n *\n * if nothing is selected, it should just be the single cursor\n * without a middle highlighted region\n */\nexport default class CircularSelection extends React.PureComponent {\n  static contextType = SelectionContext;\n\n  render() {\n    const {\n      seq,\n      radius,\n      lineHeight,\n      seqLength,\n      getRotation,\n      findCoor,\n      generateArc,\n      totalRows\n    } = this.props;\n    const { ref, start, end, clockwise } = this.context;\n\n    // calculate the length of the current selection region\n    let selLength = 0;\n    // start and end is the same, and something has been selected\n    if (start === end && ref === \"ALL\") {\n      selLength = seqLength;\n    } else if (start > end) {\n      selLength =\n        clockwise !== false\n          ? Math.abs(end - start + seqLength)\n          : -Math.abs(start - end);\n    } else if (start < end) {\n      selLength =\n        clockwise !== false\n          ? Math.abs(end - start)\n          : -Math.abs(start - end + seqLength);\n    }\n\n    // for all cases when the entire circle is selected\n    if (Math.abs(selLength) === seqLength) {\n      const adjust = selLength > 0 ? -0.1 : 0.1;\n      selLength += adjust; // can't make an arc from a full circle\n    }\n\n    // const calc the size of the selection radii\n    let topR = radius + lineHeight; // outer radius\n    if (seq.length < 200) {\n      topR += 2 * lineHeight;\n    }\n    const bAdjust = lineHeight * totalRows; // adjust bottom radius\n    let bottomR = radius - bAdjust; // inner radius\n\n    if (bottomR < 0 || topR < 0) {\n      bottomR = 0;\n      topR = radius;\n    }\n\n    // find start and stop coordinates to created edges\n    const lineTop = findCoor(0, topR);\n    const lineBottom = findCoor(0, bottomR);\n    const edgePath = `M ${lineBottom.x} ${lineBottom.y}\n\t\t\tL ${lineTop.x} ${lineTop.y}`;\n\n    // !== false is needed because it can be undefined\n    const sFlagF = clockwise !== false || ref === \"ALL\" ? 1 : 0; // sweep flag of first arc\n\n    let lArc = false;\n    if (clockwise !== false && selLength > seqLength / 2) {\n      lArc = true;\n    } else if (clockwise === false && Math.abs(selLength) > seqLength / 2) {\n      lArc = true;\n    }\n\n    const selectPath = generateArc({\n      innerRadius: bottomR,\n      outerRadius: topR,\n      length: selLength,\n      largeArc: lArc,\n      sweepFWD: sFlagF\n    });\n\n    // this should be very thin when the selection range starts and ends at same point\n    let edgeStrokeWidth = 2;\n    if (start === end) {\n      edgeStrokeWidth = 1;\n    }\n\n    const edgeStyle = {\n      fill: \"transparent\",\n      stroke: \"black\",\n      strokeWidth: edgeStrokeWidth,\n      shapeRendering: \"auto\"\n    };\n    const selectStyle = {\n      stroke: \"none\",\n      fill: \"#DEF6FF\",\n      shapeRendering: \"auto\"\n    };\n\n    return (\n      <g className=\"la-vz-circular-selection\">\n        {selLength && (\n          <path\n            d={selectPath}\n            transform={getRotation(start)}\n            {...selectStyle}\n          />\n        )}\n        <path d={edgePath} transform={getRotation(start)} {...edgeStyle} />\n        {selLength && (\n          <path d={edgePath} transform={getRotation(end)} {...edgeStyle} />\n        )}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport bindingSites from \"../../utils/bindingSites\";\nimport isEqual from \"../../utils/isEqual\";\nimport { stackElements } from \"../elementsToRows\";\nimport withViewerHOCs from \"../handlers\";\nimport CentralIndexContext from \"../handlers/centralIndex\";\nimport Annotations from \"./Annotations.jsx\";\nimport CutSites from \"./CutSites.jsx\";\nimport Find from \"./Find.jsx\";\nimport Index from \"./Index.jsx\";\nimport Labels from \"./Labels.jsx\";\nimport Primers from \"./Primers.jsx\";\nimport Selection from \"./Selection.jsx\";\n\n// this will need to change whenever the css of the plasmid viewer text changes\n// just divide the width of some rectangular text by it's number of characters\nexport const CHAR_WIDTH = 7.801;\n\nclass Circular extends React.Component {\n  static contextType = CentralIndexContext;\n\n  static getDerivedStateFromProps = nextProps => {\n    const lineHeight = 14;\n    const annotationsInRows = stackElements(\n      nextProps.annotations.filter(ann => ann.type !== \"insert\"),\n      nextProps.seq.length\n    );\n    const primers = bindingSites(nextProps.primers, nextProps.seq);\n    const primersInRows = stackElements(primers, nextProps.seq.length);\n\n    /**\n     * find the element labels that need to be rendered outside the plasmid. This is done for\n     * annotation names/etc for element titles that don't fit within the width of the element\n     * they represent. For example, an annotation might be named \"Transcription Factor XYZ\"\n     * but be only 20bps long on a plasmid that's 20k bps. Obviously that name doesn't fit.\n     * But, a gene that's 15k on the same plasmid shouldn't have it's label outside the plasmid\n     * when it can easily fit on top of the annotation itself\n     */\n    const seqLength = nextProps.seq.length;\n    const cutSiteLabels = nextProps.cutSites;\n    const { radius } = nextProps;\n    let innerRadius = radius - 3 * lineHeight;\n    const inlinedLabels = [];\n    const outerLabels = [];\n    annotationsInRows.forEach(r => {\n      const circumf = innerRadius * Math.PI;\n      r.forEach(ann => {\n        // how large is the name of the annotation horizontally (with two char padding)\n        const annNameLengthPixels = (ann.name.length + 2) * CHAR_WIDTH;\n        // how large would part be if it were wrapped around the plasmid\n        let annLengthBases = ann.end - ann.start;\n        if (ann.start >= ann.end) annLengthBases += seqLength; // crosses zero-index\n        const annLengthPixels = 2 * circumf * (annLengthBases / seqLength);\n        if (annNameLengthPixels < annLengthPixels) {\n          inlinedLabels.push(ann.id);\n        } else {\n          const { id, name, start, end } = ann;\n          const type = \"annotation\";\n          outerLabels.push({ id, name, start, end, type });\n        }\n      });\n      innerRadius -= lineHeight;\n    });\n\n    cutSiteLabels.forEach(c =>\n      outerLabels.push({\n        ...c,\n        start: c.fcut,\n        type: \"enzyme\"\n      })\n    );\n\n    // sort all the labels so they're in ascending order\n    outerLabels.sort(\n      (a, b) => Math.min(a.start, a.end) - Math.min(b.start, b.end)\n    );\n\n    return {\n      seqLength: nextProps.seq.length,\n      lineHeight: lineHeight,\n      annotationsInRows: annotationsInRows,\n      primersInRows: primersInRows,\n      inlinedLabels: inlinedLabels,\n      outerLabels: outerLabels\n    };\n  };\n\n  // null arrays on initial load\n  state = {\n    seqLength: 0,\n    lineHeight: 0,\n    annotationsInRows: [],\n    primersInRows: [],\n    inlinedLabels: [],\n    outerLabels: []\n  };\n\n  /**\n   * Deep equality comparison\n   */\n  shouldComponentUpdate = nextProps => !isEqual(nextProps, this.props);\n\n  /**\n   * find the rotation transformation needed to put a child element in the\n   * correct location around the plasmid\n   *\n   * this func makes use of the centralIndex field in parent state\n   * to rotate the plasmid viewer\n   *\n   * @return {Coor}\n   */\n  getRotation = index => {\n    const { center } = this.props;\n    const { seqLength } = this.state;\n    const centralIndex = this.context.circular;\n\n    // how many degrees should it be rotated?\n    const adjustedIndex = index - centralIndex;\n    const startPerc = adjustedIndex / seqLength;\n    const degrees = startPerc * 360;\n\n    return `rotate(${degrees || 0}, ${center.x}, ${center.y})`;\n  };\n\n  /**\n   * given an index along the plasmid and its radius, find the coordinate\n   * will be used in many of the child components\n   *\n   * in general this is for lines and labels\n   *\n   * @param {boolean} rotate\tshould the central index be taken into account\n   * \t\t\t\t\t\t\twhen calculating the current coordinate?\n   * @return {Coor}\n   */\n  findCoor = (index, radius, rotate = false) => {\n    const { center } = this.props;\n    const { seqLength } = this.state;\n    const rotatedIndex = rotate ? index - this.context.circular : index;\n    const lengthPerc = rotatedIndex / seqLength;\n    const lengthPercCentered = lengthPerc - 0.25;\n    const radians = lengthPercCentered * Math.PI * 2;\n    const xAdjust = Math.cos(radians) * radius;\n    const yAdjust = Math.sin(radians) * radius;\n\n    return {\n      x: center.x + xAdjust,\n      y: center.y + yAdjust\n    };\n  };\n\n  /**\n   * given a coordinate, and the degrees to rotate it, find the new coordinate\n   * (assuming that the rotation is around the center)\n   *\n   * in general this is for text and arcs\n   *\n   * @return {Coor}\n   */\n  rotateCoor = (coor, degrees) => {\n    const { center } = this.props;\n\n    // find coordinate's current angle\n    const angle = degrees * (Math.PI / 180); // degrees to radians\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n\n    // find the new coordinate\n    const xDiff = coor.x - center.x;\n    const yDiff = coor.y - center.y;\n    const cosX = cos * xDiff;\n    const cosY = cos * yDiff;\n    const sinX = sin * xDiff;\n    const sinY = sin * yDiff;\n    const xAdjust = cosX - sinY;\n    const yAdjust = sinX + cosY;\n\n    return {\n      x: center.x + xAdjust,\n      y: center.y + yAdjust\n    };\n  };\n\n  /**\n   * given an inner and outer radius, and the length of the element, return the\n   * path for an arc that circles the plasmid. the optional paramters sweepFWD and sweepREV\n   * are needed for selection arcs (where the direction of the arc isn't known beforehand)\n   * and arrowFWD and arrowREV are needed for annotations, where there may be directionality\n   *\n   * @return {string}\n   */\n  generateArc = ({\n    innerRadius,\n    outerRadius,\n    length,\n    largeArc, // see svg.arc large-arc-flag\n    sweepFWD = false,\n    arrowFWD = false,\n    arrowREV = false,\n    offset = 0\n  }) => {\n    const { radius } = this.props;\n    const { seqLength, lineHeight } = this.state;\n    // build up the six default coordinates\n    let leftBottom = this.findCoor(offset, innerRadius);\n    let leftTop = this.findCoor(offset, outerRadius);\n    let rightBottom = this.findCoor(length + offset, innerRadius);\n    let rightTop = this.findCoor(length + offset, outerRadius);\n    let leftArrow = \"\";\n    let rightArrow = \"\";\n\n    // create arrows by making a midpoint along edge and shifting corners inwards\n    if (arrowREV || arrowFWD) {\n      // one quarter of lineHeight in px is the shift inward for arrows\n      const inwardShift = lineHeight / 4;\n      // given the arc length (inwardShift) and the radius (from SeqViewer),\n      // we can find the degrees to rotate the corners\n      const centralAngle = inwardShift / radius;\n      // Math.min here is to make sure the arrow it's larger than the element\n      const centralAnglePerc = Math.min(centralAngle / 2, length / seqLength);\n      const centralAngleDeg = centralAnglePerc * 360;\n\n      if (arrowREV) {\n        leftBottom = this.rotateCoor(leftBottom, centralAngleDeg);\n        leftTop = this.rotateCoor(leftTop, centralAngleDeg);\n        const lArrowC = this.findCoor(0, (innerRadius + outerRadius) / 2);\n        leftArrow = `L ${lArrowC.x} ${lArrowC.y}`;\n      } else {\n        rightBottom = this.rotateCoor(rightBottom, -centralAngleDeg);\n        rightTop = this.rotateCoor(rightTop, -centralAngleDeg);\n        const rArrowC = this.findCoor(length, (innerRadius + outerRadius) / 2);\n        rightArrow = `L ${rArrowC.x} ${rArrowC.y}`;\n      }\n    }\n\n    const lArc = largeArc ? 1 : 0;\n    const sFlagF = sweepFWD ? 1 : 0;\n    const sFlagR = sweepFWD ? 0 : 1;\n\n    return `M ${rightBottom.x} ${rightBottom.y}\n      A ${innerRadius} ${innerRadius}, 0, ${lArc}, ${sFlagR}, ${leftBottom.x} ${leftBottom.y}\n      L ${leftBottom.x} ${leftBottom.y}\n      ${leftArrow}\n      L ${leftTop.x} ${leftTop.y}\n      A ${outerRadius} ${outerRadius}, 0, ${lArc}, ${sFlagF}, ${rightTop.x} ${rightTop.y}\n      ${rightArrow}\n      Z`;\n  };\n\n  render() {\n    const {\n      showPrimers,\n      showIndex,\n      name,\n      inputRef,\n      mouseEvent,\n      onUnmount,\n      center,\n      radius,\n      yDiff,\n      size,\n\n      seq,\n      compSeq,\n      cutSites,\n      search\n    } = this.props;\n\n    const {\n      seqLength,\n      lineHeight,\n      annotationsInRows,\n      primersInRows,\n      inlinedLabels,\n      outerLabels\n    } = this.state;\n\n    const { getRotation, generateArc, findCoor, rotateCoor } = this;\n\n    // general values/functions used in many/all children\n    const general = {\n      radius,\n      center,\n      lineHeight,\n      seqLength,\n      findCoor,\n      getRotation,\n      generateArc,\n      rotateCoor,\n      inputRef\n    };\n\n    // an inward shift is needed for primers if the annotations are shown\n    let primerRowsToSkip = annotationsInRows.length + 1;\n\n    // calculate the selection row height based on number of annotation and primers\n    let totalRows = 4 + annotationsInRows.length;\n\n    if (showPrimers) {\n      totalRows += primersInRows.length;\n    }\n\n    const plasmidId = `la-vz-${name}-viewer-circular`;\n    if (!size.height) return null;\n\n    return (\n      <svg\n        id={plasmidId}\n        className=\"la-vz-circular-viewer\"\n        onMouseDown={mouseEvent}\n        onMouseUp={mouseEvent}\n        onMouseMove={mouseEvent}\n        ref={inputRef(plasmidId, { type: \"SEQ\" })}\n        {...size}\n      >\n        <g className=\"la-vz-circular-root\" transform={`translate(0, ${yDiff})`}>\n          <Selection\n            {...general}\n            onUnmount={onUnmount}\n            totalRows={totalRows}\n            seq={seq}\n          />\n          <Annotations\n            {...general}\n            annotations={annotationsInRows}\n            size={size}\n            rowsToSkip={0}\n            inlinedAnnotations={inlinedLabels}\n          />\n          <Find {...general} search={search} />\n          <Primers\n            {...general}\n            primers={primersInRows}\n            showPrimers={showPrimers}\n            size={size}\n            rowsToSkip={primerRowsToSkip}\n          />\n          <CutSites {...general} selectionRows={4} cutSites={cutSites} />\n          <Index\n            {...general}\n            name={name}\n            size={size}\n            yDiff={yDiff}\n            seq={seq}\n            compSeq={compSeq}\n            totalRows={totalRows}\n            showIndex={showIndex}\n          />\n          <Labels {...general} labels={outerLabels} size={size} yDiff={yDiff} />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default withViewerHOCs(Circular);\n","import * as React from \"react\";\n\nimport CentralIndexContext from \"../handlers/centralIndex\";\nimport isEqual from \"../../utils/isEqual\";\n\n/**\n * A wrapper around the seqBlocks. Renders only the seqBlocks that are\n * within the range of the current dom viewerport\n *\n * This component should sense scroll events and, during one, recheck which\n * seqBlocks should currently be shown\n */\nexport default class InfiniteScroll extends React.PureComponent {\n  static contextType = CentralIndexContext;\n\n  /** ref to a div that's for scrolling: https://flow.org/en/docs/react/types/ */\n  scroller;\n\n  insideDOM;\n\n  timeoutID;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // start off with first 5 blocks shown\n      visibleBlocks: new Array(Math.min(5, props.seqBlocks.length))\n        .fill(null)\n        .map((_, i) => i),\n      centralIndex: 0\n    };\n    this.scroller = React.createRef();\n    this.insideDOM = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.handleScrollOrResize(); // ref should now be set\n    window.addEventListener(\"resize\", this.handleScrollOrResize);\n  };\n\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\n    if (!this.scroller) {\n      // scroller not mounted yet\n      return;\n    }\n\n    const { seqBlocks, size } = this.props;\n    const { centralIndex, visibleBlocks } = this.state;\n\n    if (this.context && centralIndex !== this.context.linear) {\n      this.scrollToCentralIndex();\n    } else if (\n      !isEqual(prevProps.size, size) ||\n      seqBlocks.length !== prevProps.seqBlocks.length\n    ) {\n      this.handleScrollOrResize(); // reset\n    } else if (isEqual(prevState.visibleBlocks, visibleBlocks)) {\n      this.restoreSnapshot(snapshot); // something, like ORFs or index view, has changed\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.handleScrollOrResize);\n  };\n\n  /**\n   * more info at: https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate\n   */\n  getSnapshotBeforeUpdate = prevProps => {\n    // find the current top block\n    let top = this.scroller ? this.scroller.current.scrollTop : 0;\n\n    // find out 1) which block this is at the edge of the top\n    // and 2) how far from the top of that block we are right now\n    const { blockHeights } = prevProps;\n    let blockIndex = 0;\n    let accumulatedY = 0;\n    do {\n      accumulatedY += blockHeights[blockIndex];\n      blockIndex += 1;\n    } while (\n      accumulatedY + blockHeights[blockIndex] < top &&\n      blockIndex < blockHeights.length\n    );\n\n    const blockY = top - accumulatedY; // last extra distance\n    return { blockY, blockIndex };\n  };\n\n  /**\n   * Scroll to centralIndex. Likely from circular clicking on an element\n   * that should then be scrolled to in linear\n   */\n  scrollToCentralIndex = () => {\n    const {\n      seqBlocks,\n      blockHeights,\n      bpsPerBlock,\n      totalHeight,\n      size: { height }\n    } = this.props;\n    const { visibleBlocks } = this.state;\n    const { clientHeight, scrollHeight } = this.scroller.current;\n    const centralIndex = this.context.linear;\n\n    // find the first block that contains the new central index\n    const centerBlockIndex = seqBlocks.findIndex(\n      block =>\n        block.props.firstBase <= centralIndex &&\n        block.props.firstBase + bpsPerBlock >= centralIndex\n    );\n\n    // build up the list of blocks that are visible just beneath this first block\n    let newVisibleBlocks = [];\n    if (scrollHeight <= clientHeight) {\n      newVisibleBlocks = visibleBlocks;\n    } else if (centerBlockIndex > -1) {\n      const centerBlock = seqBlocks[centerBlockIndex];\n\n      // create some padding above the new center block\n      const topAdjust =\n        centerBlockIndex > 0 ? blockHeights[centerBlockIndex - 1] : 0;\n      let top = centerBlock.props.y - topAdjust;\n      let bottom = top + height;\n      if (bottom > totalHeight) {\n        bottom = totalHeight;\n        top = totalHeight - height;\n      }\n      blockHeights.reduce((total, h, i) => {\n        if (total >= top && total <= bottom) {\n          newVisibleBlocks.push(i);\n        }\n        return total + h;\n      }, 0);\n\n      // Don't scroll exactly to centralIndex because most of the time\n      // item of interest is at centralIndex and if this is at the top\n      // it can be obscured by things like the search box\n      this.scroller.current.scrollTop =\n        centerBlock.props.y - blockHeights[0] / 2;\n    }\n\n    if (!isEqual(newVisibleBlocks, visibleBlocks)) {\n      this.setState({\n        visibleBlocks: newVisibleBlocks,\n        centralIndex: centralIndex\n      });\n    }\n  };\n\n  /**\n   * the component has mounted to the DOM or updated, and the window should be scrolled downwards\n   * so that the central index is visible\n   */\n  restoreSnapshot = snapshot => {\n    const { blockHeights } = this.props;\n    const { blockIndex, blockY } = snapshot;\n\n    const scrollTop =\n      blockHeights.slice(0, blockIndex).reduce((acc, h) => acc + h, 0) + blockY;\n\n    this.scroller.current.scrollTop = scrollTop;\n  };\n\n  /**\n   * check whether the blocks that should be visible have changed from what's in state,\n   * update if so\n   */\n  handleScrollOrResize = () => {\n    const {\n      blockHeights,\n      size: { height },\n      totalHeight\n    } = this.props;\n    const { visibleBlocks } = this.state;\n\n    const newVisibleBlocks = [];\n\n    let top = 0;\n    if (this.scroller && this.insideDOM) {\n      const { top: parentTop } = this.scroller.current.getBoundingClientRect();\n      const { top: childTop } = this.insideDOM.current.getBoundingClientRect();\n      top = childTop - parentTop;\n    }\n\n    top = -top + 35;\n    top = Math.max(0, top); // don't go too high\n    top = Math.min(totalHeight - height, top); // don't go too low\n    const bottom = top + height;\n    top -= 2 * blockHeights[0]; // add two blocks padding on top\n    blockHeights.reduce((total, h, i) => {\n      if (total >= top && total <= bottom) {\n        newVisibleBlocks.push(i);\n      }\n      return total + h;\n    }, 0);\n\n    if (!isEqual(newVisibleBlocks, visibleBlocks)) {\n      this.setState({ visibleBlocks: newVisibleBlocks });\n    }\n  };\n\n  incrementScroller = incAmount => {\n    this.stopIncrementingScroller();\n    this.timeoutID = setTimeout(() => {\n      this.scroller.current.scrollTop += incAmount;\n      this.incrementScroller(incAmount);\n    }, 5);\n  };\n\n  stopIncrementingScroller = () => {\n    if (this.timeoutID) {\n      clearTimeout(this.timeoutID);\n      this.timeoutID = null;\n    }\n  };\n\n  /**\n   * handleMouseOver is for detecting when the user is performing a drag event\n   * at the very top or the very bottom of DIV. If they are, this starts\n   * a recursive incrementation of the DIV's scrollTop (ie an upward or downward scroll\n   * event), that's only terminated by the user leaving the scroll area\n   *\n   * also the rate of the scrollTop is proportional to how far from the top or the\n   * bottom the user is (within [-40, 0] for top, and [0, 40] for bottom)\n   */\n  handleMouseOver = e => {\n    // not relevant, some other type of event, not a selection drag\n    if (e.buttons !== 1) {\n      if (this.timeoutID) {\n        this.stopIncrementingScroller();\n      }\n      return;\n    }\n\n    // check whether the current drag position is near the bottom or the\n    // top of the viewer and, if it is, try and increment the current\n    // centralIndex (triggering a downward scroll event)\n    const scrollerBlock = this.scroller.current.getBoundingClientRect();\n    let percFromTop = (e.clientY - scrollerBlock.top) / scrollerBlock.height;\n    if (percFromTop > 0.9) {\n      percFromTop = Math.min(1, percFromTop);\n      let scaledPerc = percFromTop - 0.9;\n      scaledPerc *= 10;\n      const scaledScroll = 15 * scaledPerc;\n      this.incrementScroller(scaledScroll);\n    } else if (percFromTop < 0.1) {\n      percFromTop = 0.1 - Math.max(0, percFromTop);\n      const scaledPerc = 10 * percFromTop;\n      const scaledScroll = -15 * scaledPerc;\n      this.incrementScroller(scaledScroll);\n    } else {\n      this.stopIncrementingScroller();\n    }\n  };\n\n  render() {\n    const {\n      seqBlocks,\n      blockHeights,\n      totalHeight: height,\n      size: { width }\n    } = this.props;\n    const { visibleBlocks } = this.state;\n\n    // find the height of the empty div needed to correctly position the rest\n    const [firstRendered] = visibleBlocks;\n    const spaceAbove = blockHeights\n      .slice(0, firstRendered)\n      .reduce((acc, h) => acc + h, 0);\n\n    return (\n      <div\n        className=\"la-vz-linear-scroller\"\n        ref={this.scroller}\n        onScroll={this.handleScrollOrResize}\n        onMouseOver={this.handleMouseOver}\n        onFocus={() => {}}\n      >\n        <div\n          className=\"la-vz-seqblock-container\"\n          style={{ height }}\n          ref={this.insideDOM}\n        >\n          <div style={{ width: width || 0, height: spaceAbove }} />\n          {visibleBlocks.map(i => seqBlocks[i])}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { COLOR_BORDER_MAP, darkerColor } from \"../../../utils/colors\";\n\nexport default class AnnotationRows extends React.PureComponent {\n  render() {\n    const {\n      annotationRows,\n      yDiff,\n      findXAndWidth,\n      inputRef,\n      seqBlockRef,\n      onUnmount,\n      firstBase,\n      lastBase,\n      fullSeq,\n      elementHeight\n    } = this.props;\n\n    return (\n      <g className=\"la-vz-linear-annotations\">\n        {annotationRows.map((a, i) => {\n          const y = yDiff + elementHeight * i;\n\n          return (\n            <AnnotationRow\n              key={`ann-row-${y}${firstBase}${lastBase}`}\n              annotations={a}\n              y={y}\n              height={elementHeight}\n              inputRef={inputRef}\n              seqBlockRef={seqBlockRef}\n              onUnmount={onUnmount}\n              findXAndWidth={findXAndWidth}\n              firstBase={firstBase}\n              lastBase={lastBase}\n              fullSeq={fullSeq}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n\n/**\n * a single row of annotations. Multiple of these may be in one seqBlock\n * vertically stacked on top of one another in non-overlapping arrays\n */\nclass AnnotationRow extends React.PureComponent {\n  hoverOtherAnnotationRows = (className, opacity) => {\n    const elements = document.getElementsByClassName(className);\n    for (let i = 0; i < elements.length; i += 1) {\n      elements[i].style.fillOpacity = opacity;\n    }\n  };\n\n  renderAnnotation = (a, index) => {\n    const {\n      inputRef,\n      seqBlockRef,\n      findXAndWidth,\n      firstBase,\n      lastBase,\n      annotations,\n      fullSeq,\n      bpsPerBlock\n    } = this.props;\n\n    const { color, name, direction, start, end } = a;\n    const forward = direction === 1;\n    const reverse = direction === -1;\n    let { x: origX, width } = findXAndWidth(start, end);\n    const crossZero = start > end && end < firstBase;\n\n    // does the annotation begin or end within this seqBlock with a directionality?\n    const endFWD = forward && end > firstBase && end <= lastBase;\n    const endREV = reverse && start >= firstBase && start <= lastBase;\n\n    // does the annotation overflow to the left or the right of this seqBlock?\n    let overflowLeft = start < firstBase;\n    let overflowRight =\n      end > lastBase || (start === end && fullSeq.length > bpsPerBlock); // start === end means covers whole plasmid\n\n    // if the annotation starts and ends in a SeqBlock, by circling all the way around,\n    // it will be rendered twice (once from the firstBase to start and another from\n    // end to lastBase)\n    // eg: https://user-images.githubusercontent.com/13923102/35816281-54571e70-0a68-11e8-92eb-ab56884337ac.png\n    const splitAnnotation =\n      annotations.reduce((acc, ann) => {\n        if (ann.id === a.id) {\n          return acc + 1;\n        }\n        return acc;\n      }, 0) > 1; // is this annotation in two pieces?\n\n    if (splitAnnotation) {\n      if (annotations.findIndex(ann => ann.id === a.id) === index) {\n        // we're in the first half of the split annotation\n        ({ x: origX, width } = findXAndWidth(firstBase, end));\n        overflowLeft = true;\n        overflowRight = false;\n      } else {\n        // we're in the second half of the split annotation\n        ({ x: origX, width } = findXAndWidth(start, lastBase));\n        overflowLeft = false;\n        overflowRight = true;\n      }\n    } else if (start > end) {\n      // the annotation crosses over the zero index and this needs to be accounted for\n      // this is very similar to the Block rendering logic in ../Selection/Selection.jsx\n      ({ x: origX, width } = findXAndWidth(\n        start > lastBase ? firstBase : Math.max(firstBase, start),\n        end < firstBase ? lastBase : Math.min(lastBase, end)\n      ));\n\n      // if this is the first part of annotation that crosses the zero index\n      if (start > firstBase) {\n        overflowLeft = true;\n        overflowRight = end > lastBase;\n      }\n\n      // if this is the second part of an annotation, check if it overflows\n      if (end < firstBase) {\n        overflowLeft = start < firstBase;\n        overflowRight = true;\n      }\n    } else if (start === end) {\n      // the annotation circles the entire plasmid and we aren't currently in a SeqBlock\n      // where the annotation starts or ends\n      ({ x: origX, width } = findXAndWidth(start, end + fullSeq.length));\n    }\n\n    // create padding on either side, vertically, of an annotation\n    const height = this.props.height * 0.8;\n\n    const rectProps = {\n      shapeRendering: \"geometricPrecision\"\n    };\n\n    const textProps = {\n      dominantBaseline: \"middle\",\n      cursor: \"pointer\",\n      textAnchor: \"middle\",\n      textRendering: \"optimizeLegibility\",\n      x: width / 2,\n      y: height / 2 + 1.4,\n      style: {\n        color: \"black\",\n        fontWeight: 400\n      }\n    };\n\n    const cW = 4; // jagged cutoff width\n    const cH = height / 4; // jagged cutoff height\n    const [x, w] = [origX, width];\n\n    // create the SVG path, starting at the topLeft and working clockwise\n    // there is additional logic here for if the annotation overflows\n    // to the left or right of this seqBlock, where a \"jagged edge\" is created\n    const topLeft = endREV ? `M ${2 * cW} 0` : \"M 0 0\";\n    const topRight = endFWD ? `L ${width - 2 * cW} 0` : `L ${width} 0`;\n\n    let linePath;\n    if (a.type === \"insert\") {\n      linePath = `${topLeft} ${topRight}`;\n    } else {\n      let bottomRight = `L ${width} ${height}`; // flat right edge\n      if ((overflowRight && width > 2 * cW) || crossZero) {\n        bottomRight = `\n\t\t\t\tL ${width - cW} ${cH}\n\t\t\t\tL ${width} ${2 * cH}\n\t\t\t\tL ${width - cW} ${3 * cH}\n        L ${width} ${4 * cH}`; // jagged right edge\n      } else if (endFWD) {\n        bottomRight = `\n\t\t\t\tL ${width} ${height / 2}\n\t\t\t\tL ${width - Math.min(2 * cW, w)} ${height}`; // arrow forward\n      }\n\n      let bottomLeft = `L 0 ${height} L 0 0`; // flat left edge\n      if (overflowLeft && width > 2 * cW) {\n        bottomLeft = `\n\t\t\t\tL 0 ${height}\n\t\t\t\tL ${cW} ${3 * cH}\n\t\t\t\tL 0 ${2 * cH}\n\t\t\t\tL ${cW} ${cH}\n\t\t\t\tL 0 0`; // jagged left edge\n      } else if (endREV) {\n        bottomLeft = `\n\t\t\t\tL ${Math.min(2 * cW, w)} ${height}\n\t\t\t\tL 0 ${height / 2}\n\t\t\t\tL ${Math.min(2 * cW, w)} 0`; // arrow reverse\n      }\n\n      linePath = `${topLeft} ${topRight} ${bottomRight} ${bottomLeft}`;\n    }\n\n    if ((forward && overflowRight) || (forward && crossZero)) {\n      if (lastBase - start > 14) {\n        linePath += `\n      M ${width - 3 * cW} ${cH}\n      L ${width - 2 * cW} ${2 * cH}\n      L ${width - 3 * cW} ${3 * cH}\n      M ${width - 4 * cW} ${cH}\n      L ${width - 3 * cW} ${2 * cH}\n      L ${width - 4 * cW} ${3 * cH}`; // add double arrow forward\n      }\n    } else if ((reverse && overflowLeft) || (reverse && crossZero)) {\n      if (end - firstBase > 14) {\n        linePath += `\n      M ${3 * cW} ${3 * cH}\n      L ${2 * cW} ${cH * 2}\n      L ${3 * cW} ${cH}\n      M ${4 * cW} ${3 * cH}\n      L ${3 * cW} ${cH * 2}\n      L ${4 * cW} ${cH}`; // add double forward reverse\n      }\n    }\n\n    let strokeColor;\n    if (a.type === \"insert\") {\n      strokeColor = color;\n    } else {\n      strokeColor = COLOR_BORDER_MAP[color] || darkerColor(color);\n    }\n\n    const annotationPath = (\n      <path\n        id={a.id}\n        ref={inputRef(a.id, {\n          ref: a.id,\n          start: start,\n          end: end,\n          type: \"ANNOTATION\",\n          element: seqBlockRef\n        })}\n        className={a.id}\n        style={{\n          fillOpacity: 0.7,\n          cursor: \"pointer\",\n          fill: color,\n          stroke: strokeColor,\n          strokeWidth: a.type === \"insert\" ? 2.4 : 0.5\n        }}\n        {...rectProps}\n        d={linePath}\n        onMouseOver={() => this.hoverOtherAnnotationRows(a.id, 1.0)}\n        onMouseOut={() => this.hoverOtherAnnotationRows(a.id, 0.7)}\n        onFocus={() => 0}\n        onBlur={() => 0}\n      />\n    );\n\n    // determine whether the annotation name fits within the width of the annotation\n    const nameLength = name.length * 6.75; // aspect ratio of roboto mono is ~0.66\n    const nameFits = nameLength < width - 15;\n\n    return (\n      <g\n        key={`${a.id}-${firstBase}`}\n        id={a.id}\n        transform={`translate(${x}, 0)`}\n      >\n        {annotationPath},\n        {nameFits ? (\n          <text\n            fontSize={11}\n            {...textProps}\n            id={a.id}\n            onMouseOver={() => this.hoverOtherAnnotationRows(a.id, 1.0)}\n            onMouseOut={() => this.hoverOtherAnnotationRows(a.id, 0.7)}\n            onFocus={() => {}}\n            onBlur={() => {}}\n          >\n            {name}\n          </text>\n        ) : null}\n      </g>\n    );\n  };\n\n  render() {\n    const { annotations, width, y } = this.props;\n\n    const height = this.props.height * 0.8;\n    const size = { width, height };\n    const gTranslate = `translate(0, ${y - 5})`;\n\n    return (\n      <g\n        {...size}\n        transform={gTranslate}\n        className=\"la-vz-linear-annotation-row\"\n      >\n        {annotations.map(this.renderAnnotation)}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\n/**\n * on hover, an enzyme recognition site should have an opacity of 0.5. 0 otherwise\n * on hover, an enzyme name should have opacity 1.0, 0 otherwise\n *\n * first set the names to 1.0 and then the cut site regions (without the name) to 0.5\n */\nconst hoverCutSite = (className, on = false) => {\n  let elements = document.getElementsByClassName(`${className}-name`);\n  for (let i = 0; i < elements.length; i += 1) {\n    elements[i].style.fillOpacity = on ? 1.0 : 0.8;\n  }\n  elements = document.getElementsByClassName(className);\n  for (let i = 0; i < elements.length; i += 1) {\n    elements[i].style.fillOpacity = on ? 0.5 : 0;\n  }\n};\n\n/**\n * CutSites\n *\n * a component shown above the sequence viewer that shows the name of the\n * enzyme that has a cut-site within the sequence and a line for the resulting cutsite\n */\nconst CutSites = props => {\n  const {\n    zoom: { linear: zoom },\n    cutSiteRows,\n    findXAndWidth,\n    lineHeight,\n    enzymes,\n    firstBase,\n    lastBase,\n    inputRef,\n    yDiff\n  } = props;\n\n  if (enzymes.length < 1) return null;\n\n  const recogContiguous = (start, end, first, last) => {\n    if ((start < first && end < first) || (start > last && end > last))\n      return true;\n    if (end >= start) {\n      return end < last && start > first;\n    }\n    return start < last && end > first;\n  };\n\n  const sitesWithX = cutSiteRows.map(c => {\n    const { x: cutX } = findXAndWidth(c.fcut, c.fcut);\n    const { x: hangX } = findXAndWidth(c.rcut, c.rcut);\n    let { x: highlightX, width: highlightWidth } = findXAndWidth(\n      c.recogStart,\n      c.recogEnd\n    );\n    if (recogContiguous(c.recogStart, c.recogEnd, firstBase, lastBase)) {\n      if (c.recogStart > c.recogEnd) {\n        ({ x: highlightX, width: highlightWidth } = findXAndWidth(\n          c.recogEnd < firstBase ? lastBase : Math.min(lastBase, c.recogEnd),\n          c.recogStart > lastBase\n            ? firstBase\n            : Math.max(firstBase, c.recogStart)\n        ));\n      } else if (c.recogEnd > c.recogStart) {\n        ({ x: highlightX, width: highlightWidth } = findXAndWidth(\n          c.recogStart < firstBase\n            ? lastBase\n            : Math.min(lastBase, c.recogStart),\n          c.recogEnd > lastBase ? firstBase : Math.max(firstBase, c.recogEnd)\n        ));\n      }\n    }\n    return {\n      ...c,\n      cutX,\n      hangX,\n      highlightX,\n      highlightWidth\n    };\n  });\n\n  if (!sitesWithX.length) return null;\n\n  const textProps = {\n    dominantBaseline: \"inherit\",\n    textAnchor: \"start\",\n    y: yDiff\n  };\n\n  const getConnectorXAndWidth = (c, sequenceCutSite, complementCutSite) => {\n    if (sequenceCutSite && complementCutSite) {\n      return {\n        x: Math.min(c.cutX, c.hangX),\n        width: Math.abs(c.hangX - c.cutX)\n      };\n    }\n    if (sequenceCutSite) {\n      if (c.start + c.cutX > c.end + c.hangX) {\n        return findXAndWidth(firstBase, c.fcut);\n      }\n      if (c.fcut > c.rcut) return findXAndWidth(firstBase, c.fcut);\n      return findXAndWidth(c.fcut, lastBase);\n    }\n    if (complementCutSite) {\n      if (c.start + c.cutX > c.end + c.hangX) {\n        return findXAndWidth(c.rcut, lastBase);\n      }\n      if (c.fcut > c.rcut) return findXAndWidth(c.rcut, lastBase);\n      return findXAndWidth(firstBase, c.rcut);\n    }\n    return { x: 0, width: 0 };\n  };\n\n  return (\n    <g className=\"la-vz-cut-sites\">\n      {sitesWithX.map(c => {\n        // prevent double rendering, by placing the indeces only in the seqBlock\n        // that they need to be shown. Important for the zero-index edge case\n        const sequenceCutSite = c.fcut >= firstBase && c.fcut < lastBase;\n        const complementCutSite = c.rcut >= firstBase && c.rcut < lastBase;\n        const showIndex = sequenceCutSite || complementCutSite;\n\n        const { x: connectorX, width: connectorWidth } = getConnectorXAndWidth(\n          c,\n          sequenceCutSite,\n          complementCutSite\n        );\n\n        return (\n          <React.Fragment key={`la-vz-${c.id}-first-base`}>\n            {sequenceCutSite ? (\n              <text\n                {...textProps}\n                id={c.id}\n                className={`la-vz-cut-site-text ${c.id}-name`}\n                x={c.cutX}\n                style={{\n                  cursor: \"pointer\",\n                  fill: \"rgb(51, 51, 51)\",\n                  fillOpacity: 0.8\n                }}\n                onMouseOver={() => hoverCutSite(c.id, true)}\n                onMouseOut={() => hoverCutSite(c.id, false)}\n                onFocus={() => 0}\n                onBlur={() => 0}\n              >\n                {c.name}\n              </text>\n            ) : null}\n            {zoom > 10 && (\n              <rect\n                width={c.highlightWidth}\n                height={lineHeight * 2}\n                x={c.highlightX}\n                y={yDiff + 6}\n                strokeDasharray=\"4,5\"\n                style={{\n                  stroke: \"rgb(150,150,150)\",\n                  strokeWidth: 1,\n                  fill: \"rgb(255, 165, 0, 0.3)\",\n                  fillOpacity: 0\n                }}\n                className={c.id}\n                ref={inputRef(c.id, {\n                  id: c.id,\n                  start: c.start,\n                  end: c.end,\n                  type: \"ENZYME\",\n                  element: null\n                })}\n              />\n            )}\n            {sequenceCutSite ? (\n              <rect\n                width=\"1px\"\n                height={lineHeight}\n                x={c.cutX - 0.5}\n                y={lineHeight / 4 + yDiff}\n              />\n            ) : null}\n            {showIndex && zoom > 10 ? (\n              <rect\n                width={connectorWidth}\n                height=\"1px\"\n                x={connectorX - 0.5}\n                y={lineHeight * 1.25 + yDiff}\n              />\n            ) : null}\n            {complementCutSite && zoom > 10 ? (\n              <rect\n                width=\"1px\"\n                height={lineHeight + 1.5}\n                x={c.hangX - 0.5}\n                y={lineHeight * 1.25 + yDiff}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </g>\n  );\n};\n\nexport default CutSites;\n","import * as React from \"react\";\n\n/**\n * a basepair indexing row for tracking the location of the current bp of DNA.\n */\nexport default class Index extends React.PureComponent {\n  // given each basepair in the sequence, go through each and find whether 1) it is divisible\n  // by the number set for tally thresholding and, if it is, 2) add its location to the list\n  // of positions for tickInc\n  genTicks = () => {\n    const {\n      seq,\n      zoom,\n      firstBase,\n      lineHeight,\n      size,\n      findXAndWidth,\n      upstream=0\n    } = this.props;\n    const seqLength = seq.length;\n\n    // the tallie distance on the x-axis is zoom dependent:\n    // (0, 10]: every 50\n    // (10, 40]: every 20\n    // (40, 70]: every 10\n    // (70, 100] every 5\n    let tickInc = 0;\n    switch (true) {\n      case zoom.linear > 85:\n        tickInc = 5;\n        break;\n      case zoom.linear > 40:\n        tickInc = 10;\n        break;\n      case zoom.linear > 10:\n        tickInc = 20;\n        break;\n      case zoom.linear >= 0:\n        tickInc = 50;\n        break;\n      default:\n        tickInc = 10;\n    }\n\n    // create the array that will hold all the indexes in the array\n    const tickIndexes = [];\n    if (firstBase === 0) {\n      tickIndexes.push(1);\n    }\n\n    let i = 0;\n    while ((i + firstBase) % tickInc !== 0) {\n      i += 1;\n    }\n    while (i < seqLength) {\n      if (i + firstBase !== 0) {\n        tickIndexes.push(i + firstBase);\n      }\n      i += tickInc;\n    }\n\n    const tickStyle = {\n      width: 1,\n      height: 8\n      // shapeRendering: \"crispEdges\"\n    };\n\n    const textStyle = {\n      fontSize: 11,\n      textRendering: \"optimizeLegibility\"\n    };\n\n    return tickIndexes.map(p => {\n      const { x: leftDist } = findXAndWidth(p - 0.5, p - 0.5); // for midpoint\n      const tickFromLeft = leftDist;\n      let textFromLeft = leftDist; // 0.05 * 11\n\n      let digits = Math.ceil(Math.log10(Math.abs(p-upstream) + 1)); // digits in num\n      if(p-upstream < 0){digits += 1}\n      // 0.91 is the aspect ratio of roboto mono, 11 is the font width. 0.91 * 11 = 10\n      const textWidth = digits * 10;\n      digits -= 1; // don't shift if there's just one digit\n      digits /= 2; // shift by half the number's width\n\n      textFromLeft -= digits * 10; // 10 = 0.91 x 11\n      textFromLeft = Math.max(0, textFromLeft); // keep off left edge\n      textFromLeft = Math.min(size.width - textWidth / 2, textFromLeft); // keep off right edge\n\n      const transTick = `translate(${tickFromLeft}, -${0.3 * lineHeight - 1})`;\n      const transText = `translate(${textFromLeft}, ${-0.3 * lineHeight + 22})`;\n      return (\n        <React.Fragment key={p}>\n          <rect style={tickStyle} fill=\"#A3A3A3\" transform={transTick} />\n          <text style={textStyle} transform={transText}>\n            {p-upstream}\n          </text>\n        </React.Fragment>\n      );\n    });\n  };\n\n  render() {\n    const {\n      lineHeight,\n      transform,\n      showIndex,\n      findXAndWidth,\n      firstBase,\n      lastBase\n    } = this.props;\n\n    // 28 accounts for 10px padding on linear scroller and 8px scroller gutter\n    const { width } = findXAndWidth(firstBase, lastBase);\n\n    if (!showIndex) return null;\n\n    const axisStyle = {\n      width: width,\n      height: 1,\n      shapeRendering: \"crispEdges\"\n    };\n\n    return (\n      <g className=\"la-vz-linear-index\" transform={transform}>\n        <rect\n          style={axisStyle}\n          fill=\"#B0B9C2\"\n          transform={`translate(0, -${0.3 * lineHeight})`}\n        />\n        {this.genTicks()}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport randomid from \"../../../utils/randomid\";\n\n/**\n * Render rectangles around Search results.\n */\nexport default props => {\n  const {\n    filteredRows: searchRows,\n    findXAndWidth,\n    indexYDiff,\n    compYDiff,\n    seqBlockRef,\n    inputRef,\n    firstBase,\n    lastBase,\n    listenerOnly = false\n  } = props;\n\n  if (!searchRows.length) {\n    return null;\n  }\n\n  const findProps = {\n    height: 18,\n    stroke: listenerOnly ? \"none\" : \"rgba(0, 0, 0, 0.5)\",\n    cursor: \"pointer\",\n    strokeWidth: 1,\n    style: { fill: listenerOnly ? \"transparent\" : \"rgba(255, 251, 7, 0.5)\" }\n  };\n\n  return searchRows.map(s => {\n    let { x, width } = findXAndWidth(s.start, s.end);\n    if (s.start > s.end) {\n      ({ x, width } = findXAndWidth(\n        s.start > lastBase ? firstBase : Math.max(firstBase, s.start),\n        s.end < firstBase ? lastBase : Math.min(lastBase, s.end)\n      ));\n    }\n\n    const id = randomid();\n    const selReference = {\n      id: id,\n      start: s.start,\n      end: s.end,\n      type: \"FIND\",\n      element: seqBlockRef\n    };\n\n    let y = indexYDiff - findProps.height / 2; // template row result\n    if (s.direction < 0) {\n      y = compYDiff - findProps.height / 2; // complement row result\n    }\n\n    return (\n      <rect\n        key={id}\n        id={id}\n        x={x - 1}\n        y={y}\n        width={width}\n        ref={inputRef(id, selReference)}\n        {...findProps}\n      />\n    );\n  });\n};\n","import * as React from \"react\";\n\nimport randomid from \"../../../utils/randomid\";\nimport { reverse } from \"../../../utils/sequence\";\n\n/**\n * a single row of primers. Multiple of these may be in one seqBlock\n * vertically stacked on top of one another in non-overlapping arrays\n */\nclass PrimerRow extends React.PureComponent {\n  // Handles the rendering of a single Primer within a primer row\n  renderPrimer = singlePrimer => {\n    const {\n      inputRef,\n      seqBlockRef,\n      findXAndWidth,\n      firstBase,\n      lastBase,\n      fullSeq,\n      charWidth: characterWidth,\n      fontSize,\n      zoomed\n    } = this.props;\n    const primerUUID = randomid();\n    const { direction, start = 0, end = 0, seq: sequence, id, color, opacity=0.25, primerName } = singlePrimer;\n    const primerLength =\n      end < start ? fullSeq.length - start + end : end - start;\n\n    let { x: origX, width } = findXAndWidth(start, end);\n\n    // does the primer begin or end within this seqBlock with a directionality?\n    const endFWD = direction === 1 && end > firstBase && end <= lastBase;\n    const endREV = direction === -1 && start > firstBase && start <= lastBase;\n\n    // does the primer overflow to the left or the right of this seqBlock?\n    let primerOverflowLeft = start < firstBase;\n    let primerOverflowRight = end > lastBase || start === end; // start === end means covers whole plasmid\n\n    const primerPart = () => {\n      if (!primerOverflowLeft && primerOverflowRight) return \"TOP\";\n      if (primerOverflowLeft && !primerOverflowRight) return \"BOTTOM\";\n      if (primerOverflowLeft && primerOverflowRight) return \"MIDDLE\";\n      return \"WHOLE\";\n    };\n\n    const crossZero = start > end;\n    const crossZeroPre = crossZero && lastBase > start;\n    const crossZeroPost = crossZero && lastBase < start;\n\n    if (crossZero) {\n      ({ x: origX, width } = findXAndWidth(\n        start > lastBase ? firstBase : Math.max(firstBase, start),\n        end < firstBase ? lastBase : Math.min(lastBase, end)\n      ));\n\n      if (crossZeroPost) {\n        primerOverflowLeft = true;\n        primerOverflowRight = end > lastBase;\n      }\n\n      if (crossZeroPre) {\n        primerOverflowLeft = start < firstBase;\n        primerOverflowRight = true;\n      }\n    } else if (start === end) {\n      // the primer circles the entire plasmid and we aren't currently in a SeqBlock\n      // where the primer starts or ends\n      ({ x: origX, width } = findXAndWidth(start, end + fullSeq.length));\n    }\n\n    // create padding on either side, vertically, of an primer\n    let { height } = this.props;\n    height *= 0.4;\n\n    const rectProps = {\n      shapeRendering: \"geometricPrecision\"\n    };\n\n    const textProps = {\n      dominantBaseline: \"middle\",\n      cursor: \"pointer\",\n      lengthAdjust: \"spacing\",\n      textRendering: \"optimizeLegibility\",\n      style: {\n        color: \"black\",\n        fontWeight: 150\n      }\n    };\n\n    const cW = 4; // jagged cutoff width\n    const cH = height / 4; // jagged cutoff height\n    const [x, w] = [origX, width];\n\n    let { mismatches } = singlePrimer;\n\n    const mismatchPathes = [];\n    const forward = direction === 1;\n    let name = forward ? sequence : reverse(sequence);\n\n    // If there are mismatches, add \".\" into primer name\n    if (mismatches && mismatches.length > 0) {\n      mismatches.forEach(mismatch => {\n        const { start: mismatchStart, end: mismatchEnd } = mismatch;\n        const mismatchLength = mismatchEnd - mismatchStart;\n        name = forward\n          ? name.substring(0, mismatch.start) +\n            \"\\u00A0\".repeat(mismatchLength) +\n            name.substring(mismatch.end)\n          : reverse(\n              reverse(name).substring(0, mismatch.start) +\n                \"\\u00A0\".repeat(mismatchLength) +\n                reverse(name).substring(mismatch.end)\n            );\n      });\n    }\n\n    // create the SVG path, starting at the topLeft and working clockwise\n    // there is additional logic here for if the primer overflows\n    // to the left or right of this seqBlock, where a \"jagged edge\" is created\n    const topLeft = \"M 0 0\";\n    const topRight = endFWD\n      ? `L ${w} 0\n      l 5 ${height/2}\n      l 0 ${height/2}\n      l -5 0`\n      : `L ${width} 0`; // forward arrow\n\n    let bottomRight = `L ${w} ${height}`; // flat right edge\n    if (primerOverflowRight && w > 10 * cW) {\n      bottomRight = `\n\t\t\t\tL ${w - cW} ${cH}\n\t\t\t\tL ${w} ${2 * cH}\n\t\t\t\tL ${w - cW} ${3 * cH}\n\t\t\t\tL ${w} ${4 * cH}`; // jagged right edge\n    } else if (endFWD) {\n      bottomRight = `\n        L ${w} ${height}`; // flat edge\n    }\n\n    let bottomLeft = `L 0 ${height} L 0 0`; // flat left edge\n    if (primerOverflowLeft && w > 10 * cW) {\n      bottomLeft = `\n\t\t\t\tL 0 ${height}\n\t\t\t\tL ${cW} ${3 * cH}\n\t\t\t\tL 0 ${2 * cH}\n\t\t\t\tL ${cW} ${cH}\n\t\t\t\tL 0 0`; // jagged left edge\n    } else if (endREV) {\n      bottomLeft = `\n        L ${w} ${height}\n        l ${-w} 0\n        l -5 ${-height/2}\n        l 0 ${-height/2}\n        l 5 0\n        `; // reverse arrow\n    }\n    const mismatchLength = mismatch => mismatch.end - mismatch.start;\n\n    const mismatchOverflowLeft = mismatch => {\n      if (crossZeroPost) {\n        return forward\n          ? mismatch.end - (fullSeq.length - start) > firstBase &&\n              mismatch.start - (fullSeq.length - start) < firstBase\n          : end - mismatch.start - mismatchLength(mismatch) < firstBase &&\n              end - mismatch.end + mismatchLength(mismatch) > firstBase;\n      }\n      return forward\n        ? start + mismatch.end > firstBase && start + mismatch.start < firstBase\n        : start + (primerLength - mismatch.end) < firstBase &&\n            start + (primerLength - mismatch.start) > firstBase;\n    };\n\n    const mismatchOverflowRight = mismatch => {\n      if (crossZeroPost) {\n        return forward\n          ? mismatch.end - (fullSeq.length - start) > lastBase &&\n              mismatch.start - (fullSeq.length - start) < lastBase\n          : end - mismatch.start - mismatchLength(mismatch) < lastBase &&\n              end - mismatch.end + mismatchLength(mismatch) > lastBase;\n      }\n      return forward\n        ? start + mismatch.end > lastBase && start + mismatch.start < lastBase\n        : start + (primerLength - mismatch.end) < lastBase &&\n            start + (primerLength - mismatch.start) > lastBase;\n    };\n\n    const mismatchOverflow = mismatch => {\n      if (mismatchOverflowLeft(mismatch)) return \"LEFT\";\n      if (mismatchOverflowRight(mismatch)) return \"RIGHT\";\n      return \"NONE\";\n    };\n\n    const charWidth = characters => characters * characterWidth;\n\n    const drawMismatch = mismatch => {\n      const mStart = mismatch.start; // relative to primer\n      const mEnd = mismatch.end; // relative to primer\n      let mismatchName = \"\"; // label for mismatch (base pairs)\n      let mismatchPath = \"\"; // path for box enclosing mismatch\n      // forward primers\n      if (forward) {\n        let mismatchStart = start + mStart; // relative to sequence\n        let mismatchEnd = start + mEnd; // relative to sequence\n        if (crossZeroPost) {\n          mismatchStart = mStart - (fullSeq.length - start);\n          mismatchEnd = mEnd - (fullSeq.length - start);\n        }\n        // generate mismatch label\n        const overflowLeftAdjust = firstBase - mismatchStart;\n        const overflowRightAdjust = lastBase - mismatchEnd;\n        switch (mismatchOverflow(mismatch)) {\n          // mismatch crosses into seqBlock above\n          case \"LEFT\":\n            mismatchName = sequence.substring(\n              mStart + overflowLeftAdjust,\n              mEnd\n            );\n            break;\n          // mismatch crosses into seqBlock below\n          case \"RIGHT\":\n            mismatchName = sequence.substring(\n              mStart,\n              mEnd + overflowRightAdjust\n            );\n            break;\n          // mismatch doesn't cross seqBlocks\n          default:\n            mismatchName = sequence.substring(mStart, mEnd);\n        }\n        // generate mismatch path\n        const mNameLength = mismatchName.length; // length of part of this mismatch in this seqBlock\n        const overflowNameAdjust = mismatchLength(mismatch) - mNameLength; // length of part of this mismatch in other seqBlock\n        switch (mismatchOverflow(mismatch)) {\n          // mismatch crosses into seqBlock above\n          case \"LEFT\":\n            mismatchPath = `M 0 0\n            m ${charWidth(firstBase - mismatchStart - overflowNameAdjust)} 0\n            l 0 ${0 - height}\n            l ${charWidth(mNameLength)} 0\n            l 0 ${height}`;\n            break;\n          // mismatch crosses into seqBlock below or doesn't cross seqBlocks\n          default:\n            // mismatch is in the top part of a multi-seqBlock primer\n            if (primerPart() === \"TOP\") {\n              mismatchPath = `M 0 0\n              m ${charWidth(mStart)} 0\n              l 0 ${0 - height}\n              l ${charWidth(mNameLength)} 0\n              l 0 ${height}`;\n            } else {\n              mismatchPath = `M 0 0\n              m ${charWidth(mismatchStart - firstBase)} 0\n              l 0 ${0 - height}\n              l ${charWidth(mNameLength)} 0\n              l 0 ${height}`;\n            }\n        }\n        // reverse primers\n      } else if (!forward) {\n        let mismatchStart = end - mStart; // relative to sequence\n        let mismatchEnd = end - mEnd; // relative to sequence\n        if (crossZeroPre) {\n          mismatchStart = start + (primerLength - mStart);\n          mismatchEnd = start + (primerLength - mEnd);\n        }\n        // generate mismatch labels\n        const overflowLeftAdjust = firstBase - mismatchEnd;\n        const overflowRightAdjust = lastBase - mismatchStart;\n        switch (mismatchOverflow(mismatch)) {\n          // mismatch crosses into seqBlock above\n          case \"LEFT\":\n            mismatchName = reverse(\n              sequence.substring(mEnd - overflowLeftAdjust, mStart)\n            );\n            break;\n          // mismatch crosses into seqBlock below\n          case \"RIGHT\":\n            mismatchName = reverse(\n              sequence.substring(mEnd, mStart - overflowRightAdjust)\n            );\n            break;\n          // mismatch doesn't cross seqBlocks\n          default:\n            mismatchName = reverse(sequence.substring(mEnd, mStart));\n        }\n\n        // generate mismatch path\n        const mNameLength = mismatchName.length; // length of part of this mismatch in this seqBlock\n        const overflowNameAdjust = mismatchLength(mismatch) - mNameLength; // length of part of this mismatch in other seqBlock\n        switch (mismatchOverflow(mismatch)) {\n          // mismatch crosses into seqBlock below\n          case \"RIGHT\":\n            mismatchPath = `M 0 ${height}\n            m ${width -\n              charWidth(mismatchStart - lastBase - overflowNameAdjust)} 0\n            l 0 ${height}\n            l ${0 - charWidth(mNameLength)} 0\n            l 0 ${0 - height}`;\n            break;\n          // mismatch crosses into seqBlock above or doesn't cross seqBlocks\n          default:\n            // mismatch is in the bottom part of a multi-seqBlock primer\n            if (primerPart() === \"BOTTOM\") {\n              mismatchPath = `M 0 ${height}\n              m ${charWidth(name.length - mStart)} 0\n              l 0 ${height}\n              l ${0 - charWidth(mNameLength)} 0\n              l 0 ${0 - height}`;\n            } else {\n              mismatchPath = `M 0 ${height}\n              m ${width - charWidth(lastBase - mismatchStart)} 0\n              l 0 ${height}\n              l ${0 - charWidth(mNameLength)} 0\n              l 0 ${0 - height}`;\n            }\n        }\n      }\n      return { mismatchName, mismatchPath };\n    };\n\n    // Iterate through mismatches\n    // generate a path and add to path array\n    // generate a name and add to mismatch array\n    const drawMismatches = mismatchRow =>\n      mismatchRow.map(mismatch => {\n        const mismatchElement = mismatch;\n        const { mismatchName, mismatchPath } = drawMismatch(mismatch);\n        mismatchPathes.push(mismatchPath);\n        mismatchElement.name = mismatchName;\n        return mismatchElement;\n      });\n\n    // if primer crosses seqBlocks and this is the top row\n    if (primerPart() === \"TOP\") {\n      if (crossZeroPre) {\n        name = name.substring(0, lastBase - start);\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(\n                mismatch => mismatch.start - (fullSeq.length - start) < lastBase\n              )\n            : mismatches.filter(\n                mismatch =>\n                  primerLength - mismatch.end - (fullSeq.length - start) <\n                  lastBase\n              );\n          mismatches = drawMismatches(mismatches);\n        }\n      } else {\n        name = name.substring(0, lastBase - start);\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(mismatch => start + mismatch.start < lastBase)\n            : mismatches.filter(\n                mismatch => start + (primerLength - mismatch.end) < lastBase\n              );\n          mismatches = drawMismatches(mismatches);\n        }\n      }\n      // if primer crosses seqBlocks and this is a middle row\n    } else if (primerPart() === \"MIDDLE\") {\n      if (crossZeroPost) {\n        name = name.substring(\n          fullSeq.length - start + firstBase,\n          fullSeq.length - start + firstBase + (lastBase - firstBase)\n        );\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(\n                mismatch =>\n                  mismatch.end - (fullSeq.length - start) > firstBase &&\n                  mismatch.start - (fullSeq.length - start) < lastBase\n              )\n            : mismatches.filter(\n                mismatch =>\n                  primerLength - mismatch.start - (fullSeq.length - start) >\n                    firstBase &&\n                  primerLength - mismatch.end - (fullSeq.length - start) <\n                    lastBase\n              );\n        }\n      } else {\n        name = name.substring(\n          firstBase - start,\n          firstBase - start + lastBase - firstBase\n        );\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(\n                mismatch =>\n                  start + mismatch.end > firstBase &&\n                  start + mismatch.start < lastBase\n              )\n            : mismatches.filter(\n                mismatch =>\n                  start + (primerLength - mismatch.start) > firstBase &&\n                  start + (primerLength - mismatch.end) < lastBase\n              );\n        }\n      }\n      mismatches = drawMismatches(mismatches);\n\n      // if primer crosses seqBlocks and is this the bottom row\n    } else if (primerPart() === \"BOTTOM\") {\n      if (crossZeroPost) {\n        name = name.substring(fullSeq.length - start + firstBase);\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(\n                mismatch => mismatch.end - (fullSeq.length - start) > firstBase\n              )\n            : mismatches.filter(\n                mismatch =>\n                  primerLength - mismatch.start - (fullSeq.length - start) >\n                  firstBase\n              );\n        }\n      } else {\n        name = name.substring(firstBase - start);\n        if (mismatches && mismatches.length > 0) {\n          mismatches = forward\n            ? mismatches.filter(mismatch => start + mismatch.end > firstBase)\n            : mismatches.filter(\n                mismatch => start + (primerLength - mismatch.start) > firstBase\n              );\n        }\n      }\n\n      mismatches = drawMismatches(mismatches);\n      // if primer doesn't cross seqblocks\n    } else {\n      mismatches =\n        mismatches && mismatches.length > 0\n          ? mismatches.map(mismatch => {\n              const mismatchElement = mismatch;\n              mismatchElement.name = sequence.substring(\n                mismatch.start,\n                mismatch.end\n              );\n              if (mismatchElement.name.trim().length > 0) {\n                if (forward) {\n                  // forward primers\n                  mismatchPathes.push(`M 0 0\n              m ${charWidth(mismatch.start)} 0\n              l 0 ${0 - height}\n              l ${charWidth(mismatchLength(mismatch))} 0\n              l 0 ${height}`);\n                } else if (!forward) {\n                  // reverse primers\n                  mismatchElement.name = reverse(\n                      sequence.substring(mismatch.end, mismatch.start)\n                  );\n                  mismatchPathes.push(`M 0 ${height}\n              m ${charWidth(name.length - mismatch.start)} 0\n              l 0 ${height}\n              l ${charWidth(0 - mismatchLength(mismatch))} 0\n              l 0 ${0 - height}`);\n                }\n              }\n              return mismatchElement;\n            })\n          : [];\n    }\n\n    const mismatchPath = mismatchPathes.join(\" \");\n\n    const linePath = `${topLeft} ${topRight} ${bottomRight} ${bottomLeft} ${mismatchPath}`;\n\n    const primerPath = (\n      <path\n        id={id}\n        ref={inputRef(`${id}`, {\n          ref: `${id}`,\n          start: start,\n          end: end,\n          type: \"PRIMER\",\n          element: seqBlockRef\n        })}\n        className={id}\n        style={{\n          fillOpacity: opacity,\n          fill: color,\n          cursor: \"pointer\",\n          stroke: \"#1b1d21\",\n          strokeWidth: 0.5\n        }}\n        {...rectProps}\n        d={linePath}\n        //onMouseOver={() => this.hoverOtherPrimerRows(`${id}`, 0.2)}\n        //onMouseOut={() => this.hoverOtherPrimerRows(`${id}`, 0.1)}\n        onFocus={() => 0}\n        onBlur={() => 0}\n      />\n    );\n\n    const getMismatchX = mismatch => {\n      const overflowL = mismatchOverflowLeft(mismatch);\n      const overflowR = mismatchOverflowRight(mismatch);\n\n      if (forward) {\n        if (primerPart() === \"BOTTOM\" || primerPart() === \"MIDDLE\") {\n          if (crossZeroPost && forward) {\n            return overflowL\n              ? 0\n              : charWidth(\n                  mismatch.start - (fullSeq.length - start) - firstBase\n                );\n          }\n          return overflowL\n            ? charWidth(\n                mismatch.start -\n                  firstBase +\n                  start +\n                  (mismatchLength(mismatch) - mismatch.name.length)\n              )\n            : charWidth(mismatch.start - firstBase + start);\n        }\n        return charWidth(mismatch.start);\n      }\n      if (primerPart() === \"TOP\" || primerPart() === \"MIDDLE\") {\n        if (crossZeroPost) {\n          if (overflowL) {\n            return 0;\n          }\n          if (overflowR) {\n            return width - charWidth(mismatch.end + lastBase - end);\n          }\n          return forward\n            ? charWidth(mismatch.start - (fullSeq.length - start) - firstBase)\n            : width -\n                charWidth(\n                  mismatch.end +\n                    lastBase -\n                    end -\n                    (mismatchLength(mismatch) - mismatch.name.length)\n                );\n        }\n        if (crossZeroPre) {\n          return overflowL\n            ? width -\n                charWidth(\n                  lastBase -\n                    (start + (primerLength - mismatch.start)) +\n                    mismatch.name.length\n                )\n            : width -\n                charWidth(\n                  lastBase -\n                    (start + (primerLength - mismatch.start)) +\n                    mismatchLength(mismatch)\n                );\n        }\n        return overflowR\n          ? width - charWidth(mismatch.end + lastBase - end)\n          : width -\n              charWidth(\n                mismatch.end +\n                  lastBase -\n                  end -\n                  (mismatchLength(mismatch) - mismatch.name.length)\n              );\n      }\n      return (\n        width -\n        charWidth(\n          mismatch.end - (mismatchLength(mismatch) - mismatch.name.length)\n        )\n      );\n    };\n    return (\n      <g\n        key={`${id}_${primerUUID}-primer`}\n        id={id}\n        transform={`translate(${x}, 0)`}\n      >\n        <title>{primerName}</title>\n        <text\n          key={`${id}_${primerUUID}-primer`}\n          fontSize={fontSize}\n          x={width / 2}\n          y={height / 2 + 1.4}\n          textAnchor=\"middle\"\n          {...textProps}\n          textLength={width}\n          id={id}\n          //onMouseOver={() => this.hoverOtherPrimerRows(id, 0.2)}\n          //onMouseOut={() => this.hoverOtherPrimerRows(id, 0.1)}\n          onFocus={() => {}}\n          onBlur={() => {}}\n        >\n          {zoomed ? `${name}` : \"\"}\n        </text>\n        ,\n        {mismatches &&\n          mismatches.map(mismatch => (\n            <text\n              key={`mismatch_text_${id}_${primerUUID}`}\n              fontSize={fontSize}\n              x={getMismatchX(mismatch)}\n              y={forward ? 0 - height / 2 : (height * 3) / 2 + 1.4}\n              textAnchor=\"left\"\n              {...textProps}\n              textLength={charWidth(mismatch.name.length)}\n              id={id}\n            >\n              {zoomed ? `${mismatch.name}` : \"\"}\n            </text>\n          ))}\n        ,{primerPath}\n      </g>\n    );\n  };\n\n  render() {\n    const { y, primers } = this.props;\n    const gTranslate = `translate(0, ${y - 5})`;\n    return (\n      <g transform={gTranslate} className=\"linear-primer-row\">\n        {primers.map(this.renderPrimer)}\n      </g>\n    );\n  }\n}\n\nexport default class PrimerRows extends React.PureComponent {\n  render() {\n    const {\n      showPrimers,\n      forwardPrimerRows,\n      reversePrimerRows,\n      direction,\n      yDiff,\n      findXAndWidth,\n      inputRef,\n      seqBlockRef,\n      onUnmount,\n      firstBase,\n      lastBase,\n      fullSeq,\n      charWidth,\n      zoomed,\n      fontSize\n    } = this.props;\n    let { elementHeight } = this.props;\n    elementHeight *= 3;\n\n    if (!showPrimers) return null;\n    const primerRows = direction === 1 ? forwardPrimerRows : reversePrimerRows;\n\n    return (\n      <g className=\"la-vs-linear-primers\">\n        {primerRows.map((primerRow, i) => {\n          const id = randomid();\n\n          let rowDiff = yDiff + i * elementHeight;\n          if (direction === 1) {\n            rowDiff += 0.35 * elementHeight;\n          } else {\n            rowDiff -= 0.25 * elementHeight;\n          }\n\n          return (\n            <PrimerRow\n              id={id}\n              primers={primerRow}\n              y={rowDiff}\n              height={elementHeight}\n              key={`${id}-primer-linear-row`}\n              inputRef={inputRef}\n              seqBlockRef={seqBlockRef}\n              onUnmount={onUnmount}\n              findXAndWidth={findXAndWidth}\n              firstBase={firstBase}\n              lastBase={lastBase}\n              fullSeq={fullSeq}\n              direction={direction}\n              charWidth={charWidth}\n              fontSize={fontSize}\n              zoomed={zoomed}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { SelectionContext } from \"../../handlers/selection.jsx\";\nimport randomid from \"../../../utils/randomid\";\n\n/**\n * Edges on the side of selections of the Selection Viewer\n *\n * Only shown at the selection's start and end, not intermediate blocks\n * (if there are intermediate blocks)\n */\nexport class Edges extends React.PureComponent {\n  static contextType = SelectionContext;\n\n  id = randomid();\n\n  render() {\n    const {\n      findXAndWidth,\n      selectEdgeHeight,\n      firstBase,\n      lastBase,\n      fullSeq\n    } = this.props;\n    const { ref, start, end, clockwise } = this.context;\n\n    let startEdge = null;\n    let lastEdge = null;\n\n    if (clockwise) {\n      // clockwise, ie forward drag event\n      // the start or end edges are within this block\n      if (start >= firstBase && start < lastBase) startEdge = start;\n      if (end > firstBase && end <= lastBase) lastEdge = end;\n    } else {\n      // counterclockwise, ie reverse drag event\n      if (start > firstBase && start <= lastBase) startEdge = start;\n      if (end >= firstBase && end < lastBase) lastEdge = end;\n    }\n\n    // for cmd-a case\n    if (ref === \"ALL\" || (start === 0 && end === fullSeq.length - 1)) {\n      startEdge = null;\n      lastEdge = null;\n    }\n\n    // the end of the selection edges are not in this SeqBlock and\n    // do not need to be rendered\n    if (startEdge === null && lastEdge === null) {\n      return null;\n    }\n    if (startEdge === null) {\n      startEdge = lastEdge;\n      lastEdge = null;\n    }\n    let { x, width } = findXAndWidth(startEdge, lastEdge);\n\n    // if drag event in counter clockwise direction and both of the edges are\n    // within this range (if reverse but not both in one range, it'll be fine)\n    if (clockwise === false && startEdge !== null && lastEdge !== null) {\n      ({ x, width } = findXAndWidth(lastEdge, startEdge));\n    }\n\n    // the x position of the second edge\n    let secondEdgeX = x + width;\n    if (startEdge !== null && lastEdge !== null) {\n      if (\n        (start > end && clockwise === true) ||\n        (end > start && clockwise === false)\n      ) {\n        secondEdgeX = x - width;\n      } // in this scenario, the ending edge of the selection range is before the start\n    }\n\n    // for when it starts on the first bp of the next SeqBlock\n    if (start === end && start === lastBase) {\n      return null;\n    }\n\n    // inlining style in the SVG for speed sake\n    const rect = {\n      y: \"-10\",\n      style: {\n        fill: \"black\",\n        width: start === end ? 1 : 2\n      },\n      shapeRendering: \"crispEdges\"\n    };\n\n    if (startEdge === null || lastEdge === null) {\n      return null;\n    }\n\n    return (\n      <g className=\"la-vz-linear-sel-edges\">\n        {startEdge !== null && (\n          <rect\n            {...rect}\n            x={start === end ? x - 1 : x - 2}\n            height={selectEdgeHeight}\n          />\n        )}\n        {lastEdge !== null && (\n          <rect\n            {...rect}\n            x={start === end ? secondEdgeX - 1 : secondEdgeX - 2}\n            height={selectEdgeHeight}\n          />\n        )}\n      </g>\n    );\n  }\n}\n\n// eslint-disable-next-line\nexport class Block extends React.PureComponent {\n  static contextType = SelectionContext;\n\n  id = randomid();\n\n  render() {\n    const {\n      findXAndWidth,\n      selectHeight,\n      firstBase,\n      lastBase,\n      fullSeq\n    } = this.props;\n    const { clockwise, ref } = this.context;\n    let { start, end } = this.context;\n\n    // there's no need to render a selection block (rect) if just one point\n    // has been selected\n    if (start === end && ref !== \"ALL\") return null;\n    if (ref === \"ALL\" || (start === 0 && end === fullSeq.length)) {\n      // it's not \"ALL\" or some element's id\n      start = 0;\n      end = 0;\n    }\n\n    let x;\n    let width;\n    let secondBlock = null;\n    if (clockwise && end > start) {\n      // does not cross the zero index, FWD direction\n      if (start <= lastBase && end > firstBase) {\n        ({ x, width } = findXAndWidth(\n          Math.max(firstBase, start),\n          Math.min(lastBase, end)\n        ));\n      }\n    } else if (clockwise && start > end) {\n      // crosses the zero index in FWD direction\n      if (!(start > lastBase && end < firstBase)) {\n        // is this seq block relevant\n        if (start < lastBase && end > firstBase) {\n          // the selection range both starts and ends in this seqblock, but wraps\n          // all the way around the rest of the plasmid\n          // ex: https://user-images.githubusercontent.com/13923102/34791431-f56df23a-f612-11e7-94b4-e302ede155a0.png\n          const { x: secBlockX, width: secBlockWidth } = findXAndWidth(\n            start,\n            lastBase\n          );\n          secondBlock = (\n            <rect\n              x={secBlockX}\n              y={-10}\n              height={selectHeight + 5}\n              width={secBlockWidth}\n              className=\"la-vz-linear-sel-block\"\n            />\n          );\n          ({ x, width } = findXAndWidth(firstBase, end));\n        } else {\n          ({ x, width } = findXAndWidth(\n            start > lastBase ? firstBase : Math.max(firstBase, start),\n            end < firstBase ? lastBase : Math.min(lastBase, end)\n          ));\n        }\n      }\n    } else if (!clockwise && start > end) {\n      // does not cross zero index but is in reverse direction\n      if (end <= lastBase && start >= firstBase) {\n        ({ x, width } = findXAndWidth(\n          Math.max(firstBase, end),\n          Math.min(lastBase, start)\n        ));\n      }\n    } else if (!clockwise && end > start) {\n      // crosses zero index and is in reverse direction\n      if (start > firstBase || end < lastBase) {\n        if (start > firstBase && start < lastBase && end > firstBase) {\n          // the selection range both starts and ends in this seqblock, but wraps\n          // all the way around the rest of the plasmid\n          // ex: https://user-images.githubusercontent.com/13923102/34791431-f56df23a-f612-11e7-94b4-e302ede155a0.png\n          const { x: secBlockX, width: secBlockWidth } = findXAndWidth(\n            end,\n            lastBase\n          );\n          secondBlock = (\n            <rect\n              x={secBlockX}\n              y={-10}\n              height={selectHeight + 5}\n              width={secBlockWidth}\n              className=\"la-vz-linear-sel-block\"\n              shapeRendering=\"auto\"\n            />\n          );\n          ({ x, width } = findXAndWidth(firstBase, start));\n        } else {\n          ({ x, width } = findXAndWidth(\n            start < firstBase ? end : firstBase,\n            end > lastBase ? start : lastBase\n          ));\n        }\n      }\n    }\n\n    // sreflect\n    if (ref === \"ALL\" || start === end) {\n      ({ x, width } = findXAndWidth(\n        Math.max(firstBase, 0),\n        Math.min(lastBase, fullSeq.length + 1)\n      ));\n    }\n\n    // nothing was set for this selection block\n    if (!x && !width) return null;\n\n    return (\n      <React.Fragment>\n        <rect\n          className=\"la-vz-linear-sel-block\"\n          x={x}\n          y={-10}\n          height={selectHeight + 5}\n          width={width}\n          shapeRendering=\"auto\"\n        />\n        {secondBlock}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default { Edges, Block };\n","import * as React from \"react\";\n\nimport { borderColorByIndex, colorByIndex } from \"../../../utils/colors\";\nimport randomid from \"../../../utils/randomid\";\n\nexport default class TranslationRows extends React.PureComponent {\n  render() {\n    const {\n      translations,\n      yDiff,\n      inputRef,\n      seqBlockRef,\n      onUnmount,\n      fullSeq,\n      firstBase,\n      lastBase,\n      bpsPerBlock,\n      charWidth,\n      findXAndWidth,\n      elementHeight\n    } = this.props;\n\n    return (\n      <g className=\"la-vz-linear-translations\">\n        {translations.map((t, i) => (\n          <TranslationRow\n            translation={t}\n            y={yDiff + elementHeight * i - 10}\n            height={elementHeight}\n            key={`${t.id}-${firstBase}`}\n            id={t.id}\n            inputRef={inputRef}\n            seqBlockRef={seqBlockRef}\n            onUnmount={onUnmount}\n            fullSeq={fullSeq}\n            firstBase={firstBase}\n            lastBase={lastBase}\n            charWidth={charWidth}\n            bpsPerBlock={bpsPerBlock}\n            findXAndWidth={findXAndWidth}\n          />\n        ))}\n      </g>\n    );\n  }\n}\n\n/**\n * TranslationRow\n *\n * a single translation row\n *\n * a row for translations of DNA into Amino Acid sequences so a user can\n * see the resulting protein or peptide sequence within in the viewer\n *\n * chose here to have the row itself, with the pull part seq as a reference\n * cut up the sequence into the dna associated with the current row and\n * translate\n */\nclass TranslationRow extends React.Component {\n  static textProps = {\n    dominantBaseline: \"middle\",\n    cursor: \"pointer\",\n    textAnchor: \"middle\",\n    style: {\n      color: \"black\",\n      fontSize: 13,\n      fontWeight: 400\n    }\n  };\n  static textProps2 = {\n    dominantBaseline: \"middle\",\n    cursor: \"pointer\",\n    textAnchor: \"middle\",\n    style: {\n      color: \"black\",\n      fontSize: 10,\n      fontWeight: 400\n    }\n  };\n\n  static aaProps = {\n    shapeRendering: \"geometricPrecision\",\n    style: {\n      cursor: \"pointer\",\n      strokeWidth: 0.8,\n      opacity: 0.7\n    }\n  };\n\n  AAs = [];\n\n  componentWillUnmount = () => {\n    const { onUnmount } = this.props;\n    this.AAs.forEach(a => {\n      onUnmount(a);\n    });\n  }; // clear all AA references\n\n  /**\n   * make the actual path string\n   *\n   * c = base pair count\n   * m = multiplier (FWD or REV)\n   */\n  genPath = (count, multiplier) => {\n    const { height: h, charWidth } = this.props; // width adjust\n    const nW = count * charWidth;\n    const wA = multiplier * 3;\n    return `M 0 0\n\t\t\tL ${nW} 0\n\t\t\tL ${nW + wA} ${h / 2}\n\t\t\tL ${nW} ${h}\n\t\t\tL 0 ${h}\n\t\t\tL ${wA} ${h / 2}\n\t\t\tZ`;\n  };\n\n  render() {\n    const {\n      inputRef,\n      seqBlockRef: element,\n      translation,\n      fullSeq,\n      findXAndWidth,\n      y,\n      charWidth,\n      bpsPerBlock\n    } = this.props;\n\n    let { firstBase, lastBase, height: h } = this.props;\n\n    const { id, AAseq, direction, offset, firstAAIndex } = translation;\n    let { end } = translation;\n\n    let { start } = translation;\n    if (start < 0) {\n      //end -= start -2;\n      start -= start - (start % 3 + 3) % 3;\n    }\n    const refStart = Math.max(0, start);\n    lastBase = Math.min(lastBase, end);\n    firstBase = Math.max(firstBase, start);\n\n    if (offset > 0) {\n      start += offset - 3;\n    }\n\n    // build up a reference to this whole translation for\n    // selection handler (used only for context clicking right now)\n    const type = \"TRANSLATION\";\n    let ref = { start: refStart, end, type, element };\n    // substring and split only the amino acids that are relevant to this\n    // particular sequence block\n    const AAs = AAseq.split(\"\");\n    return (\n      <g transform={`translate(0, ${y})`} ref={inputRef(id, ref)} id={id}>\n        {AAs.map((a, i) => {\n          // generate and store an id reference (that's used for selection)\n          const aaId = randomid();\n          this.AAs.push(aaId);\n\n          // calculate the start and end point of each amino acid\n          // modulo needed here for translations that cross zero index\n          let AAStart = (start + i * 3) % fullSeq.length;\n          let AAEnd = (start + i * 3 + 3) % fullSeq.length;\n\n          if (AAStart > AAEnd && firstBase >= bpsPerBlock) {\n            // amino acid has crossed zero index in the last SeqBlock\n            AAEnd += fullSeq.length;\n          } else if (AAStart > AAEnd && firstBase < bpsPerBlock) {\n            // amino acid has crossed zero index in the first SeqBlock\n            AAStart -= fullSeq.length;\n          } else if (AAStart === 0 && firstBase >= bpsPerBlock) {\n            // extreme edge case (1/3 around zero) where modulo returns zero\n            AAStart += fullSeq.length;\n            AAEnd += fullSeq.length;\n          }\n\n          // build up a selection handler reference for just this amino acid,\n          // so a singly translated amino acid can be selected from within the\n          // larger translation\n\n          // the amino acid doesn't fit within this SeqBlock (even partially)\n          if (AAStart > lastBase || AAEnd < firstBase) return null;\n\n          let textShow = true; // whether to show amino acids abbreviation\n          let bpCount = 3; // start off assuming the full thing is shown\n          if (AAStart < firstBase) {\n            bpCount = Math.min(3, AAEnd - firstBase);\n            if (bpCount < 2) {\n              // w/ one bp, the amino acid is probably too small for an abbreviation\n              textShow = false;\n            }\n          } else if (AAEnd > lastBase) {\n            bpCount = Math.min(3, lastBase - AAStart);\n            if (bpCount < 2) {\n              textShow = false;\n            }\n          }\n\n          const { x } = findXAndWidth(Math.max(AAStart, firstBase));\n\n          // direction check needed to determine which direction the amino acid translation\n          // arrow are facing\n          const path = this.genPath(bpCount, direction === 1 ? 1 : -1);\n\n          return (\n            <g\n              key={aaId}\n              id={aaId}\n              transform={`translate(${x}, 0)`}\n              ref={inputRef(aaId, ref)}\n            >\n              <path\n                id={aaId}\n                d={path}\n                {...TranslationRow.aaProps}\n                fill={colorByIndex(a.charCodeAt(0))}\n                stroke={borderColorByIndex(a.charCodeAt(0))}\n              />\n              {textShow && (i + firstAAIndex + 1) % 10 && (\n                <text\n                  id={aaId}\n                  x={charWidth * 1.5}\n                  y={`${h / 2 + 1.5}`}\n                  {...TranslationRow.textProps}\n                >\n                  {a}\n                </text>\n              )}\n              {textShow && !((i + firstAAIndex + 1) % 10) && (\n                <>\n                  <text\n                    id={aaId}\n                    x={charWidth * 1.5}\n                    y={`${h / 2 - 4.5}`}\n                    {...TranslationRow.textProps2}\n                  >\n                    {a}\n                  </text>\n                  <text\n                    id={aaId}\n                    x={charWidth * 1.5}\n                    y={`${h / 2 + 4.5}`}\n                    {...TranslationRow.textProps2}\n                  >\n                    {i + firstAAIndex + 1}\n                  </text>\n                </>\n              )}\n            </g>\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport Annotations from \"./Annotations.jsx\";\nimport CutSiteRow from \"./CutSites.jsx\";\nimport IndexRow from \"./Index.jsx\";\nimport Find from \"./Find.jsx\";\nimport Primers from \"./Primers.jsx\";\nimport Selection from \"./Selection.jsx\";\nimport TranslationRows from \"./Translations.jsx\";\n\n/**\n * SeqBlock\n *\n * Comprised of:\n * \t   IndexRow (the x axis basepair index)\n * \t   AnnotationRow (annotations)\n * \t   Selection (cursor selection range)\n * \t   Find (regions that match the users current find search)\n *\n * a single block of linear sequence. Essentially a row that holds\n * the sequence, and flair around it including the\n * complementary sequence, sequence index, and anotations *\n */\nexport default class SeqBlock extends React.PureComponent {\n  static defaultProps = {};\n\n  componentWillUnmount = () => {\n    const { onUnmount, id } = this.props;\n    onUnmount(id);\n  };\n\n  /**\n   * @typedef {Object} SeqBlockPosition\n   * @property {Number}     x              [the x positioning, from left...]\n   * @property {Number}     width          [the width of the passed element]\n   * @property {Number}     charWidth      [the width of each character in the element]\n   */\n\n  /**\n   * findXAndWidth\n   *\n   * a helper method that's used in several of the child components to figure\n   * out how far from the left the element is and how wide it should be\n   *\n   * @param  {Number} firstIndex [the first index of the annotation/ORF/cutSite etc]\n   * @param  {Number} lastIndex  [last index/basepair of the element]\n   * @return {SeqBlockPosition}  [the position information of the given element]\n   */\n  findXAndWidth = (firstIndex = 0, lastIndex = 0) => {\n    const {\n      fullSeq: { length: seqLength },\n      firstBase,\n      size,\n      bpsPerBlock\n    } = this.props;\n\n    const lastBase = Math.min(firstBase + bpsPerBlock, seqLength);\n    const multiBlock = seqLength >= bpsPerBlock;\n\n    // 28 accounts for 10px padding on linear scroller and 8px scroller gutter\n    // find the distance from the left to start\n    let x = 0;\n    if (firstIndex >= firstBase) {\n      x = ((firstIndex - firstBase) / bpsPerBlock) * size.width;\n      x = Math.max(x, 0) || 0;\n    }\n\n    // find the width for the current element\n    let width = size.width;\n    if (firstIndex === lastIndex) {\n      // it starts on the last bp\n      width = 0;\n    } else if (firstIndex >= firstBase || lastIndex < lastBase) {\n      // it starts or ends in this SeqBlock\n      const start = Math.max(firstIndex, firstBase);\n      const end = Math.min(lastIndex, lastBase);\n\n      width = size.width * ((end - start) / bpsPerBlock);\n      width = Math.abs(width) || 0;\n    } else if (firstBase + bpsPerBlock > seqLength && multiBlock) {\n      // it's an element in the last SeqBlock, that doesn't span the whole width\n      width = size.width * ((seqLength % bpsPerBlock) / bpsPerBlock);\n    }\n\n    return { x, width };\n  };\n\n  /**\n   * Given a bp, return either the bp as was, or a text span if it should have a color\n   *\n   * We're looking up each bp in the props.bpColors map to see if it should\n   * be shadded and, if so, wrapping it in a textSpan\n   */\n  seqTextSpan = (bp, i) => {\n    const { id, charWidth } = this.props;\n\n    const color = this.bpColorLookup(bp);\n\n    if (color) {\n      return (\n        <tspan key={i + bp + id} fill={color} x={charWidth * i}>\n          {bp}\n        </tspan>\n      );\n    }\n\n    return (\n      <tspan key={i + bp + id} x={charWidth * i}>\n        {bp}\n      </tspan>\n    );\n  };\n\n  /**\n   * Lookup a bp in the bpColors prop and return the color\n   * associated with the character, if one exists. Store the results\n   */\n  bpColorLookup = bp => {\n    const { bpColors } = this.props;\n\n    const color =\n      bpColors[bp] ||\n      bpColors[bp.toUpperCase()] ||\n      bpColors[bp.toLowerCase()] ||\n      null;\n\n    return color;\n  };\n\n  render() {\n    const {\n      seq,\n      compSeq,\n      fullSeq,\n      annotationRows,\n      forwardPrimerRows,\n      reversePrimerRows,\n      cutSiteRows,\n      searchRows,\n      translations,\n      blockHeight,\n\n      showIndex,\n      showComplement,\n      showPrimers,\n\n      selection,\n      seqFontSize,\n      firstBase,\n      size,\n      lineHeight,\n      elementHeight,\n      mouseEvent,\n\n      inputRef,\n      id,\n      onUnmount,\n\n      charWidth,\n      zoomed\n    } = this.props;\n\n    if (!size.width || !size.height) return null;\n\n    const svgProps = {\n      display: \"block\",\n      height: blockHeight,\n      width: size.width\n    };\n    const textProps = {\n      dominantBaseline: \"middle\",\n      fontSize: seqFontSize,\n      lengthAdjust: \"spacing\",\n      textAnchor: \"start\",\n      textLength: size.width,\n      textRendering: \"optimizeLegibility\"\n    };\n\n    const lastBase = firstBase + seq.length;\n    const seqRange = {\n      ref: id,\n      start: firstBase,\n      end: lastBase,\n      type: \"SEQ\",\n      element: this\n    };\n\n    // height and yDiff of forward primers (above sequence)\n    const forwardPrimerYDiff = 0;\n    const forwardPrimerHeight =\n      showPrimers && forwardPrimerRows.length\n        ? elementHeight * 3 * forwardPrimerRows.length\n        : 0;\n\n    // height and yDiff of cut sites\n    const cutSiteYDiff =\n      zoomed && cutSiteRows.length\n        ? elementHeight / 2 + forwardPrimerHeight\n        : forwardPrimerHeight; // spacing for cutSite names\n    const cutSiteHeight = zoomed && cutSiteRows.length ? elementHeight : 0;\n\n    // height and yDiff of the sequence strand\n    const indexYDiff = cutSiteYDiff + cutSiteHeight;\n    const indexHeight = zoomed ? lineHeight : 0; // bases not shown at < 10 zoom\n\n    // height and yDiff of the complement strand\n    const compYDiff = indexYDiff + indexHeight;\n    const compHeight = zoomed && showComplement ? lineHeight : 0;\n\n    // height and yDiff of reverse primers (below sequence)\n    const reversePrimerYDiff = compYDiff + compHeight;\n    const reversePrimerHeight =\n      showPrimers && reversePrimerRows.length\n        ? elementHeight * 3 * reversePrimerRows.length\n        : 0;\n\n    // height and yDiff of translations\n    let translationYDiff = reversePrimerYDiff + reversePrimerHeight;\n    const translationHeight = elementHeight * translations.length;\n    if (translations.length) {\n      translationYDiff += 0.25 * elementHeight;\n    }\n\n    // height and yDiff of annotations\n    const annYDiff = translationYDiff + translationHeight;\n    const annHeight = elementHeight * annotationRows.length;\n\n    // calc the height necessary for the sequence selection\n    let selectHeight =\n      forwardPrimerHeight +\n      indexHeight +\n      compHeight +\n      translationHeight +\n      annHeight +\n      cutSiteHeight +\n      cutSiteYDiff +\n      reversePrimerHeight;\n    let selectEdgeHeight = showIndex ? selectHeight + 13 : selectHeight;\n\n    // small edge-case for translation shifting downward\n    if (translations.length) {\n      selectHeight += 0.25 * elementHeight;\n    }\n\n    // needed because otherwise the selection height is very small\n    if (!zoomed && selectHeight <= elementHeight) {\n      selectHeight += lineHeight;\n      selectEdgeHeight += lineHeight;\n    }\n\n    // find index row (the actual bar+ticks) Y diff\n    const elementRowShown = annotationRows.length;\n    let indexRowYDiff = annYDiff + annHeight;\n    if (elementRowShown) {\n      indexRowYDiff += 0.5 * elementHeight;\n      selectHeight += 0.5 * elementHeight;\n      selectEdgeHeight += 0.25 * elementHeight;\n    }\n\n    const filteredSearchRows = showComplement\n      ? searchRows\n      : searchRows.filter(r => r.direction === 1);\n\n    return (\n      <svg\n        {...svgProps}\n        className=\"la-vz-seqblock\"\n        id={id}\n        ref={inputRef(id, seqRange)}\n        onMouseDown={mouseEvent}\n        onMouseUp={mouseEvent}\n        onMouseMove={mouseEvent}\n        cursor=\"text\"\n      >\n        <g transform=\"translate(0, 10)\">\n          <Selection.Block\n            selection={selection}\n            selectHeight={selectHeight}\n            findXAndWidth={this.findXAndWidth}\n            inputRef={inputRef}\n            onUnmount={onUnmount}\n            firstBase={firstBase}\n            lastBase={lastBase}\n            fullSeq={fullSeq}\n          />\n          <Selection.Edges\n            lastBase={lastBase}\n            findXAndWidth={this.findXAndWidth}\n            firstBase={firstBase}\n            fullSeq={fullSeq}\n            inputRef={inputRef}\n            onUnmount={onUnmount}\n            selection={selection}\n            selectEdgeHeight={selectEdgeHeight}\n          />\n          <Find\n            {...this.props}\n            filteredRows={filteredSearchRows}\n            findXAndWidth={this.findXAndWidth}\n            indexYDiff={indexYDiff}\n            compYDiff={compYDiff}\n            seqBlockRef={this}\n            lastBase={lastBase}\n          />\n          <Annotations\n            {...this.props}\n            findXAndWidth={this.findXAndWidth}\n            lastBase={lastBase}\n            yDiff={annYDiff}\n            seqBlockRef={this}\n            fullSeq={fullSeq}\n          />\n          {showPrimers && (\n            <Primers\n              {...this.props}\n              findXAndWidth={this.findXAndWidth}\n              firstBase={firstBase}\n              lastBase={lastBase}\n              yDiff={forwardPrimerYDiff}\n              direction={1}\n              seqBlockRef={this}\n              fullSeq={fullSeq}\n              charWidth={charWidth}\n              fontSize={seqFontSize}\n              zoomed={zoomed}\n            />\n          )}\n          {showPrimers && (\n            <Primers\n              {...this.props}\n              findXAndWidth={this.findXAndWidth}\n              firstBase={firstBase}\n              lastBase={lastBase}\n              yDiff={reversePrimerYDiff}\n              direction={-1}\n              seqBlockRef={this}\n              fullSeq={fullSeq}\n              charWidth={charWidth}\n              fontSize={seqFontSize}\n              zoomed={zoomed}\n            />\n          )}\n          {showIndex && (\n            <IndexRow\n              {...this.props}\n              firstBase={firstBase}\n              lastBase={lastBase}\n              transform={`translate(0, ${indexRowYDiff})`}\n              findXAndWidth={this.findXAndWidth}\n            />\n          )}\n          {zoomed ? (\n            <CutSiteRow\n              {...this.props}\n              findXAndWidth={this.findXAndWidth}\n              lastBase={lastBase}\n              yDiff={cutSiteYDiff}\n            />\n          ) : null}\n          {zoomed ? (\n            <text {...textProps} y={indexYDiff} id={id}>\n              {seq.split(\"\").map((bp, i) => this.seqTextSpan(bp, i))}\n            </text>\n          ) : null}\n          {compSeq && zoomed && showComplement ? (\n            <text {...textProps} y={compYDiff} id={id}>\n              {compSeq.split(\"\").map((bp, i) => this.seqTextSpan(bp, i))}\n            </text>\n          ) : null}\n          <TranslationRows\n            {...this.props}\n            yDiff={translationYDiff}\n            seqBlockRef={this}\n            firstBase={firstBase}\n            lastBase={lastBase}\n            findXAndWidth={this.findXAndWidth}\n          />\n          <Find\n            {...this.props}\n            filteredRows={filteredSearchRows}\n            findXAndWidth={this.findXAndWidth}\n            indexYDiff={indexYDiff}\n            compYDiff={compYDiff}\n            seqBlockRef={this}\n            lastBase={lastBase}\n            listenerOnly\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport bindingSites from \"../../utils/bindingSites\";\nimport isEqual from \"../../utils/isEqual\";\nimport { createLinearTranslations } from \"../../utils/sequence\";\nimport {\n  createMultiRows,\n  createSingleRows,\n  stackElements\n} from \"../elementsToRows\";\nimport withViewerHOCs from \"../handlers\";\nimport InfiniteScroll from \"./InfiniteScroll.jsx\";\nimport SeqBlock from \"./SeqBlock/SeqBlock.jsx\";\n\n/**\n * A linear sequence viewer.\n *\n * Comprised of SeqBlock(s), which are themselves comprised of:\n * \tSeqBlock:\n * \t\tSeqRow\n * \t\tIndexRow (axis)\n * \t\tAnnotations\n *    Primers\n *    Finds\n *    Translations\n *    Selections\n *\n * the width, sequence of each seqBlock, annotations,\n * indexRow, is passed in the child component\n *\n * seq: a string of the DNA/RNA to be displayed/manipulated\n * zoom: a number (1-100) for the sizing of the sequence\n * comp: whether or not to show complement\n * compSeq: the complement sequence to the orig sequence\n * annotations: an array of annotations to show above the seq\n * primers: an array of primers to show above and below the seq\n */\nclass Linear extends React.Component {\n  /**\n   * Deep equality comparison\n   */\n  shouldComponentUpdate = nextProps => !isEqual(nextProps, this.props);\n\n  /**\n   * given all the information needed to render all the seqblocks (ie, sequence, compSeq\n   * list of annotations), cut up all that information into an array.\n   * Each element in that array pertaining to one SeqBlock\n   *\n   * For example, if each seqblock has 2 bps, and the seq is \"ATGCAG\", this should first\n   * make an array of [\"AT\", \"GC\", \"AG\"], and then pass \"AT\" to the first SeqBlock, \"GC\" to\n   * the second seqBlock, and \"AG\" to the third seqBlock.\n   */\n  render() {\n    const {\n      seq,\n      compSeq,\n      zoom,\n      showIndex,\n      showComplement,\n      showPrimers,\n\n      cutSites,\n      annotations,\n      translations,\n\n      lineHeight,\n      elementHeight,\n      bpsPerBlock,\n      size,\n      onUnmount,\n\n      search,\n      findBindingSites=false,\n    } = this.props;\n\n    let { primers=[] } = this.props;\n    if(findBindingSites){\n      primers = bindingSites(primers, seq);\n    }\n\n    const forwardPrimers = primers.filter(primer => primer.direction === 1);\n    const reversePrimers = primers.filter(primer => primer.direction === -1);\n\n    // un-official definition for being zoomed in. Being over 10 seems like a decent cut-off\n    const zoomed = zoom.linear > 10;\n\n    // the actual fragmenting of the sequence into subblocks. generates all info that will be needed\n    // including sequence blocks, complement blocks, annotations, blockHeights\n    const seqLength = seq.length;\n    let arrSize = Math.round(Math.ceil(seqLength / bpsPerBlock));\n    if (arrSize === Number.POSITIVE_INFINITY) arrSize = 1;\n\n    const ids = new Array(arrSize); // array of SeqBlock ids\n    const seqs = new Array(arrSize); // arrays for sequences...\n    const compSeqs = new Array(arrSize); // complements...\n    const blockHeights = new Array(arrSize); // block heights...\n\n    const cutSiteRows = cutSites.length\n      ? createSingleRows(cutSites, bpsPerBlock, arrSize)\n      : new Array(arrSize).fill([]);\n\n    /**\n     * Vet the annotations for starts and ends at zero index\n     * @param {*} annotations\n     * @return annotations\n     */\n    const vetAnnotations = annotations => {\n      annotations.forEach(ann => {\n        if (ann.end === 0 && ann.start > ann.end) ann.end = seqLength;\n        if (ann.start === seqLength && ann.end < ann.start) ann.start = 0;\n      });\n      return annotations;\n    };\n\n    const annotationRows = createMultiRows(\n      stackElements(vetAnnotations(annotations), seq.length),\n      bpsPerBlock,\n      arrSize\n    );\n\n    const forwardPrimerRows = showPrimers // primers...\n      ? createMultiRows(\n          stackElements(forwardPrimers, seq.length),\n          bpsPerBlock,\n          arrSize\n        )\n      : new Array(arrSize).fill([]);\n\n    const reversePrimerRows = showPrimers // primers...\n      ? createMultiRows(\n          stackElements(reversePrimers, seq.length),\n          bpsPerBlock,\n          arrSize\n        )\n      : new Array(arrSize).fill([]);\n\n    const searchRows =\n      search && search.length\n        ? createSingleRows(search, bpsPerBlock, arrSize)\n        : new Array(arrSize).fill([]);\n\n    const translationRows = translations.length\n      ? createSingleRows(\n          createLinearTranslations(translations, seq),\n          bpsPerBlock,\n          arrSize\n        )\n      : new Array(arrSize).fill([]);\n\n    for (let i = 0; i < arrSize; i += 1) {\n      const firstBase = i * bpsPerBlock;\n      const lastBase = firstBase + bpsPerBlock;\n\n      // cut the new sequence and, if also looking for complement, the complement as well\n      seqs[i] = seq.substring(firstBase, lastBase);\n      compSeqs[i] = compSeq.substring(firstBase, lastBase);\n\n      // store a unique id from the block\n      ids[i] = seqs[i] + String(i);\n\n      const spacingHeight = 0.25 * elementHeight;\n      // find the line height for the seq block based on how many rows need to be shown\n      let blockHeight = lineHeight * 1.1; // this is for padding between the rows\n      if (zoomed) {\n        blockHeight += lineHeight; // is zoomed in enough + 2px margin\n        blockHeight += showComplement ? lineHeight : 0; // double for complement + 2px margin\n      }\n      if (showIndex) {\n        blockHeight += 25; // another for index row (height is fixed right now)\n      }\n      if (annotationRows[i].length) {\n        blockHeight += annotationRows[i].length * elementHeight + spacingHeight;\n      }\n      if (cutSiteRows[i].length) {\n        blockHeight += lineHeight + spacingHeight; // space for cutsite name\n      }\n      if (showPrimers && forwardPrimerRows[i].length) {\n        blockHeight += elementHeight * 3 * forwardPrimerRows[i].length;\n      }\n      if (showPrimers && reversePrimerRows[i].length) {\n        blockHeight += elementHeight * 3 * reversePrimerRows[i].length;\n      }\n      if (translationRows[i].length) {\n        blockHeight +=\n          translationRows[i].length * elementHeight + spacingHeight;\n      }\n      blockHeights[i] = blockHeight;\n    }\n\n    const seqBlocks = [];\n    let yDiff = 0;\n    for (let i = 0; i < arrSize; i += 1) {\n      const firstBase = i * bpsPerBlock;\n      seqBlocks.push(\n        <SeqBlock\n          {...this.props}\n          key={ids[i]}\n          id={ids[i]}\n          y={yDiff}\n          seq={seqs[i]}\n          compSeq={compSeqs[i]}\n          blockHeight={blockHeights[i]}\n          annotationRows={annotationRows[i]}\n          forwardPrimerRows={forwardPrimerRows[i]}\n          reversePrimerRows={reversePrimerRows[i]}\n          cutSiteRows={cutSiteRows[i]}\n          searchRows={searchRows[i]}\n          translations={translationRows[i]}\n          firstBase={firstBase}\n          onUnmount={onUnmount}\n          fullSeq={seq}\n          size={{ ...size }}\n          zoomed={zoomed}\n        />\n      );\n      yDiff += blockHeights[i];\n    }\n\n    return (\n      seqBlocks.length && (\n        <InfiniteScroll\n          {...this.props}\n          seqBlocks={seqBlocks}\n          blockHeights={blockHeights}\n          totalHeight={blockHeights.reduce((acc, h) => acc + h, 0)}\n          size={size}\n          bpsPerBlock={bpsPerBlock}\n        />\n      )\n    );\n  }\n}\n\nexport default withViewerHOCs(Linear);\n","import * as React from \"react\";\nimport sizeMe from \"react-sizeme\";\n\nimport isEqual from \"../utils/isEqual\";\nimport CircularViewer from \"./Circular/Circular.jsx\";\nimport LinearViewer from \"./Linear/Linear.jsx\";\nimport CentralIndexContext from \"./handlers/centralIndex\";\n\n/**\n * a parent sequence viewer component that holds whatever is common between\n * the linear and circular sequence viewers. The Header is an example\n */\nclass SeqViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    const { size } = props;\n\n    if ((!size.height || !size.width) && process.env.NODE_ENV !== \"test\") {\n      console.error(`SeqViz viewer rendered in an element without a height or width.\nGenerally, SeqViz expands to fill the height/width of its parent element.\n\nThe two solutions are to:\n  1. render SeqViz within a container element with a defined height + width\n  2. pass an options.style object to SeqViz with a height + width\n\nSee: https://github.com/Lattice-Automation/seqviz#optionsstyle-`);\n    }\n  }\n\n  /** this is here because the size listener is returning a new \"size\" prop every time */\n  shouldComponentUpdate = (nextProps, nextState) =>\n    !isEqual(nextProps, this.props) || !isEqual(nextState, this.state);\n\n  /**\n   * given the width of the screen, and the current zoom, how many basepairs should be displayed\n   * on the screen at a given time and what should their size be\n   */\n  linearProps = () => {\n    const { seq, size, oneLine } = this.props;\n\n    let zoom = this.props.zoom.linear || 0;\n    zoom = Math.max(zoom, 0);\n    zoom = Math.min(zoom, 100);\n\n    const seqFontSize = Math.min(Math.round(zoom * 0.1 + 9.5), 18); // max 18px\n\n    // otherwise the sequence needs to be cut into smaller subsequences\n    // a sliding scale in width related to the degree of zoom currently active\n    let bpsPerBlock = Math.round((size.width / seqFontSize) * 1.4) || 1; // width / 1 * seqFontSize\n\n    if (zoom <= 5) {\n      bpsPerBlock *= 3;\n    } else if (zoom <= 10) {\n      // really ramp up the range, since at this zoom it'll just be a line\n      bpsPerBlock *= 2;\n    } else if (zoom > 70) {\n      // keep font height the same but scale number of bps in one row\n      bpsPerBlock = Math.round(bpsPerBlock * (70 / zoom));\n    }\n\n    if (oneLine) {\n      bpsPerBlock = seq.length;\n    }\n\n    if (bpsPerBlock <= seq.length) {\n      size.width -= 28; // -28 px for the padding (10px) + scroll bar (18px)\n    }\n\n    const charWidth = size.width / bpsPerBlock; // width of each basepair\n\n    const lineHeight = 1.4 * seqFontSize; // aspect ratio is 1.4 for roboto mono\n    const elementHeight = 16; // the height, in pixels, of annotations, ORFs, etc\n\n    return {\n      seqFontSize,\n      lineHeight,\n      elementHeight,\n      bpsPerBlock,\n      charWidth,\n      size,\n      zoom: { linear: zoom },\n      Linear: true\n    };\n  };\n\n  /**\n   * given the length of the sequence and the dimensions of the viewbox, how should\n   * zoom of the plasmid viewer affect the radius of the circular viewer and its vertical shift\n   *\n   * minPixelPerBP = s / 50 where\n   * s = theta * radius where\n   * radius = h / 2 + c ^ 2 / 8 h    (https://en.wikipedia.org/wiki/Circular_segment)\n   * and theta = 50 / seqLength\n   */\n  circularProps = () => {\n    const {\n      size,\n      seq: { length: seqLength }\n    } = this.props;\n\n    let zoom = this.props.zoom.circular || 0;\n    zoom = Math.max(zoom, 0);\n    zoom = Math.min(zoom, 100);\n\n    const center = {\n      x: size.width / 2,\n      y: size.height / 2\n    };\n\n    const limitingDim = Math.min(size.height, size.width);\n\n    const exp = 0.83; // exponent... greater exp leads to flatter curve (c in fig)\n    const beta = Math.exp(Math.log(50 / seqLength) / -(100 ** exp)); // beta coefficient (b in fig)\n    const bpsOnArc = seqLength * beta; // calc using the full expression\n\n    // scale the radius so only (bpsOnArc) many bps are shown\n    let radius = limitingDim * 0.34;\n\n    const pixelPerBP = (radius * Math.PI) / seqLength;\n    const totalPixelsOfArc = pixelPerBP * bpsOnArc;\n\n    radius = totalPixelsOfArc / (Math.PI * (bpsOnArc / seqLength));\n    radius = radius === 0 ? 1 : radius;\n    const yDiff = 0;\n    return {\n      radius,\n      yDiff,\n      Linear: false,\n      size,\n      zoom: { circular: zoom },\n      bpsOnArc,\n      center\n    };\n  };\n\n  render() {\n    const { Circular: circular, seq, cutSites } = this.props;\n\n    return (\n      <div className=\"la-vz-viewer-container\">\n        {circular ? (\n          <CentralIndexContext.Consumer>\n            {({ circular, setCentralIndex }) => (\n              <CircularViewer\n                {...this.props}\n                {...this.state}\n                {...this.circularProps()}\n                centralIndex={circular}\n                setCentralIndex={setCentralIndex}\n                cutSites={cutSites}\n              />\n            )}\n          </CentralIndexContext.Consumer>\n        ) : (\n          <LinearViewer\n            {...this.props}\n            {...this.state}\n            {...this.linearProps()}\n            seqLength={seq.length}\n            cutSites={cutSites}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default sizeMe({ monitorHeight: true })(SeqViewer);\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport externalToPart from \"../io/externalToPart\";\nimport filesToParts from \"../io/filesToParts\";\nimport { cutSitesInRows } from \"../utils/digest\";\nimport isEqual from \"../utils/isEqual\";\nimport { directionality, dnaComplement } from \"../utils/parser\";\nimport search from \"../utils/search\";\nimport { annotationFactory } from \"../utils/sequence\";\nimport CentralIndexContext from \"./handlers/centralIndex\";\nimport { SelectionContext, defaultSelection } from \"./handlers/selection.jsx\";\nimport SeqViewer from \"./SeqViewer.jsx\";\n\nimport \"./style.css\";\n\n/**\n * A container for processing part input and rendering either\n * a linear or circular viewer or both\n */\nexport default class SeqViz extends React.Component {\n  static propTypes = {\n    accession: PropTypes.string,\n    annotations: PropTypes.arrayOf(\n      PropTypes.shape({\n        start: PropTypes.number.isRequired,\n        end: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        direction: PropTypes.oneOf([1, 0, -1, \"REVERSE\", \"NONE\", \"FORWARD\"]),\n        color: PropTypes.string,\n        type: PropTypes.string\n      })\n    ),\n    backbone: PropTypes.string.isRequired,\n    bpColors: PropTypes.object.isRequired,\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    compSeq: PropTypes.string,\n    copyEvent: PropTypes.func.isRequired,\n    enzymes: PropTypes.arrayOf(PropTypes.string).isRequired,\n    file: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    name: PropTypes.string,\n    onSearch: PropTypes.func.isRequired,\n    onSelection: PropTypes.func.isRequired,\n    search: PropTypes.shape({\n      query: PropTypes.string,\n      mismatch: PropTypes.number\n    }).isRequired,\n    seq: PropTypes.string,\n    showComplement: PropTypes.bool.isRequired,\n    showIndex: PropTypes.bool.isRequired,\n    showPrimers: PropTypes.bool.isRequired,\n    style: PropTypes.object.isRequired,\n    translations: PropTypes.arrayOf(\n      PropTypes.shape({\n        start: PropTypes.number.isRequired,\n        end: PropTypes.number.isRequired,\n        direction: PropTypes.oneOf([1, -1, \"FORWARD\", \"REVERSE\"]).isRequired\n      })\n    ).isRequired,\n    viewer: PropTypes.oneOf([\"linear\", \"circular\", \"both\", \"both_flip\"])\n      .isRequired,\n    zoom: PropTypes.shape({\n      circular: PropTypes.number,\n      linear: PropTypes.number\n    }).isRequired\n  };\n\n  static defaultProps = {\n    accession: \"\",\n    annotations: [],\n    backbone: \"\",\n    bpColors: {},\n    colors: [],\n    compSeq: \"\",\n    copyEvent: () => false,\n    enzymes: [],\n    file: null,\n    name: \"\",\n    onSearch: results => results,\n    onSelection: selection => selection,\n    search: { query: \"\", mismatch: 0 },\n    seq: \"\",\n    showComplement: true,\n    showIndex: true,\n    showPrimers: true,\n    style: {},\n    translations: [],\n    viewer: \"both\",\n    zoom: { circular: 0, linear: 50 }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accession: \"\",\n      centralIndex: {\n        circular: 0,\n        linear: 0,\n        setCentralIndex: this.setCentralIndex\n      },\n      cutSites: [],\n      selection: { ...defaultSelection },\n      search: [],\n      annotations: this.parseAnnotations(props.annotations, props.seq),\n      part: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.setPart();\n  };\n\n  componentDidUpdate = async (\n    { accession, backbone, enzymes, file, search },\n    { part }\n  ) => {\n    if (\n      accession !== this.props.accession ||\n      backbone !== this.props.backbone ||\n      file !== this.props.file\n    ) {\n      await this.setPart(); // new accesion/remote ID\n    } else if (\n      search.query !== this.props.search.query ||\n      search.mismatch !== this.props.search.mismatch\n    ) {\n      this.search(part); // new search parameters\n    } else if (!isEqual(enzymes, this.props.enzymes)) {\n      this.cut(part); // new set of enzymes for digest\n    }\n  };\n\n  /**\n   * Set the part from a file or an accession ID\n   */\n  setPart = async () => {\n    const { accession, file } = this.props;\n\n    try {\n      if (accession) {\n        const part = await externalToPart(accession, this.props);\n        this.setState({\n          part: {\n            ...part,\n            annotations: this.parseAnnotations(part.annotations, part.seq)\n          }\n        });\n        this.search(part);\n        this.cut(part);\n      } else if (file) {\n        const parts = await filesToParts([file], this.props);\n\n        this.setState({\n          part: {\n            ...parts[0],\n            annotations: this.parseAnnotations(\n              parts[0].annotations,\n              parts[0].seq\n            )\n          }\n        });\n        this.search(parts[0]);\n        this.cut(parts[0]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  /**\n   * Search for the query sequence in the part sequence, set in state\n   */\n  search = (part = null) => {\n    const {\n      onSearch,\n      search: { query, mismatch },\n      seq\n    } = this.props;\n\n    if (!(seq || (part && part.seq))) {\n      return;\n    }\n\n    const results = search(query, mismatch, seq || part.seq);\n    if (isEqual(results, this.state.search)) {\n      return;\n    }\n\n    this.setState({ search: results });\n    onSearch(results);\n    if(results.length > 0){\n      this.setCentralIndex(\"linear\", results[0].end);\n    }\n  };\n\n  /**\n   * Find and save enzymes' cutsite locations\n   */\n  cut = (part = null) => {\n    const { enzymes, seq } = this.props;\n\n    const cutSites = enzymes.length\n      ? cutSitesInRows(seq || (part && part.seq) || \"\", enzymes)\n      : [];\n\n    this.setState({ cutSites });\n  };\n\n  /**\n   * Modify the annotations to add unique ids, fix directionality and\n   * modulo the start and end of each to match SeqViz's API\n   */\n  parseAnnotations = (annotations, seq) =>\n    (annotations || []).map((a, i) => ({\n      ...annotationFactory(a.name, i),\n      ...a,\n      direction: directionality(a.direction),\n      start: a.start % (seq.length + 1),\n      end: a.end % (seq.length + 1)\n    }));\n\n  /**\n   * Update the central index of the linear or circular viewer\n   */\n  setCentralIndex = (type, value) => {\n    if (type !== \"linear\" && type !== \"circular\") {\n      throw new Error(`Unknown central index type: ${type}`);\n    }\n\n    if (this.state.centralIndex[type] === value) {\n      return; // nothing changed\n    }\n\n    this.setState({\n      centralIndex: { ...this.state.centralIndex, [type]: value }\n    });\n  };\n\n  /**\n   * Update selection in state. Should only be performed from handlers/selection.jsx\n   */\n  setSelection = selection => {\n    const { onSelection } = this.props;\n\n    this.setState({ selection });\n\n    onSelection(selection);\n  };\n\n  render() {\n    const { style, viewer } = this.props;\n    let { annotations, compSeq, name, seq } = this.props;\n    const { centralIndex, cutSites, part, search, selection } = this.state;\n\n    // part is either from a file/accession, or each prop was set\n    seq = seq || part.seq || \"\";\n    compSeq = compSeq || part.compSeq || dnaComplement(seq).compSeq;\n    name = name || part.name;\n    annotations =\n      annotations && annotations.length ? annotations : part.annotations || [];\n\n    if (!seq.length) {\n      return <div className=\"la-vz-seqviz\" />;\n    }\n\n    const linear = (viewer === \"linear\" || viewer.includes(\"both\")) && (\n      <SeqViewer\n        key=\"linear\"\n        {...this.props}\n        search={search}\n        selection={selection}\n        setSelection={this.setSelection}\n        annotations={annotations}\n        compSeq={compSeq}\n        name={name}\n        seq={seq}\n        cutSites={cutSites}\n        Circular={false}\n      />\n    );\n    const circular = (viewer === \"circular\" || viewer.includes(\"both\")) && (\n      <SeqViewer\n        key=\"circular\"\n        {...this.props}\n        search={search}\n        selection={selection}\n        setSelection={this.setSelection}\n        annotations={annotations}\n        compSeq={compSeq}\n        name={name}\n        seq={seq}\n        cutSites={cutSites}\n        Circular\n      />\n    );\n    const bothFlipped = viewer === \"both_flip\";\n    const viewers = bothFlipped ? [linear, circular] : [circular, linear];\n\n    return (\n      <div className=\"la-vz-seqviz\" style={style}>\n        <CentralIndexContext.Provider value={centralIndex}>\n          <SelectionContext.Provider value={selection}>\n            {viewers.filter(v => v).map(v => v)}\n          </SelectionContext.Provider>\n        </CentralIndexContext.Provider>\n      </div>\n    );\n  }\n}\n","export default {\n  name: \"L09136\",\n  seq:\n    \"tcgcgcgtttcggtgatgacggtgaaaacctctgacacatgcagctcccggagacggttgtctgtaagcggatgccgggagcagacaagcccgtcagggcagcgggtgttggcgggtgtcggggctggcttaactatgcggcatcagagcagattgtactgagagtgcaccatatgcggtgtgaaataccgcacagatgcgtaaggagaaaataccgcatcaggcgccattcgccattcaggctgcgcaactgttgggaagggcgatcggtgcgggcctcttcgctattacgccagctggcgaaagggggatgtgctgcaaggcgattaagttgggtaacgccagggttttcccagtcacgacgttgtaaaacgacggccagtgccaagcttgcatgcctgcaggtcgactctagaggatccccgggtaccgagctcgaattcgtaatcatggtcatagctgtttcctgtgtgaaattgttatccgctcacaattccacacaacatacgagccggaagcataaagtgtaaagcctggggtgcctaatgagtgagctaactcacattaattgcgttgcgctcactgcccgctttccagtcgggaaacctgtcgtgccagctgcattaatgaatcggccaacgcgcggggagaggcggtttgcgtattgggcgctcttccgcttcctcgctcactgactcgctgcgctcggtcgttcggctgcggcgagcggtatcagctcactcaaaggcggtaatacggttatccacagaatcaggggataacgcaggaaagaacatgtgagcaaaaggccagcaaaaggccaggaaccgtaaaaaggccgcgttgctggcgtttttccataggctccgcccccctgacgagcatcacaaaaatcgacgctcaagtcagaggtggcgaaacccgacaggactataaagataccaggcgtttccccctggaagctccctcgtgcgctctcctgttccgaccctgccgcttaccggatacctgtccgcctttctcccttcgggaagcgtggcgctttctcatagctcacgctgtaggtatctcagttcggtgtaggtcgttcgctccaagctgggctgtgtgcacgaaccccccgttcagcccgaccgctgcgccttatccggtaactatcgtcttgagtccaacccggtaagacacgacttatcgccactggcagcagccactggtaacaggattagcagagcgaggtatgtaggcggtgctacagagttcttgaagtggtggcctaactacggctacactagaaggacagtatttggtatctgcgctctgctgaagccagttaccttcggaaaaagagttggtagctcttgatccggcaaacaaaccaccgctggtagcggtggtttttttgtttgcaagcagcagattacgcgcagaaaaaaaggatctcaagaagatcctttgatcttttctacggggtctgacgctcagtggaacgaaaactcacgttaagggattttggtcatgagattatcaaaaaggatcttcacctagatccttttaaattaaaaatgaagttttaaatcaatctaaagtatatatgagtaaacttggtctgacagttaccaatgcttaatcagtgaggcacctatctcagcgatctgtctatttcgttcatccatagttgcctgactccccgtcgtgtagataactacgatacgggagggcttaccatctggccccagtgctgcaatgataccgcgagacccacgctcaccggctccagatttatcagcaataaaccagccagccggaagggccgagcgcagaagtggtcctgcaactttatccgcctccatccagtctattaattgttgccgggaagctagagtaagtagttcgccagttaatagtttgcgcaacgttgttgccattgctacaggcatcgtggtgtcacgctcgtcgtttggtatggcttcattcagctccggttcccaacgatcaaggcgagttacatgatcccccatgttgtgcaaaaaagcggttagctccttcggtcctccgatcgttgtcagaagtaagttggccgcagtgttatcactcatggttatggcagcactgcataattctcttactgtcatgccatccgtaagatgcttttctgtgactggtgagtactcaaccaagtcattctgagaatagtgtatgcggcgaccgagttgctcttgcccggcgtcaatacgggataataccgcgccacatagcagaactttaaaagtgctcatcattggaaaacgttcttcggggcgaaaactctcaaggatcttaccgctgttgagatccagttcgatgtaacccactcgtgcacccaactgatcttcagcatcttttactttcaccagcgtttctgggtgagcaaaaacaggaaggcaaaatgccgcaaaaaagggaataagggcgacacggaaatgttgaatactcatactcttcctttttcaatattattgaagcatttatcagggttattgtctcatgagcggatacatatttgaatgtatttagaaaaataaacaaataggggttccgcgcacatttccccgaaaagtgccacctgacgtctaagaaaccattattatcatgacattaacctataaaaataggcgtatcacgaggccctttcgtc\",\n  compSeq:\n    \"agcgcgcaaagccactactgccacttttggagactgtgtacgtcgagggcctctgccaacagacattcgcctacggccctcgtctgttcgggcagtcccgtcgcccacaaccgcccacagccccgaccgaattgatacgccgtagtctcgtctaacatgactctcacgtggtatacgccacactttatggcgtgtctacgcattcctcttttatggcgtagtccgcggtaagcggtaagtccgacgcgttgacaacccttcccgctagccacgcccggagaagcgataatgcggtcgaccgctttccccctacacgacgttccgctaattcaacccattgcggtcccaaaagggtcagtgctgcaacattttgctgccggtcacggttcgaacgtacggacgtccagctgagatctcctaggggcccatggctcgagcttaagcattagtaccagtatcgacaaaggacacactttaacaataggcgagtgttaaggtgtgttgtatgctcggccttcgtatttcacatttcggaccccacggattactcactcgattgagtgtaattaacgcaacgcgagtgacgggcgaaaggtcagccctttggacagcacggtcgacgtaattacttagccggttgcgcgcccctctccgccaaacgcataacccgcgagaaggcgaaggagcgagtgactgagcgacgcgagccagcaagccgacgccgctcgccatagtcgagtgagtttccgccattatgccaataggtgtcttagtcccctattgcgtcctttcttgtacactcgttttccggtcgttttccggtccttggcatttttccggcgcaacgaccgcaaaaaggtatccgaggcggggggactgctcgtagtgtttttagctgcgagttcagtctccaccgctttgggctgtcctgatatttctatggtccgcaaagggggaccttcgagggagcacgcgagaggacaaggctgggacggcgaatggcctatggacaggcggaaagagggaagcccttcgcaccgcgaaagagtatcgagtgcgacatccatagagtcaagccacatccagcaagcgaggttcgacccgacacacgtgcttggggggcaagtcgggctggcgacgcggaataggccattgatagcagaactcaggttgggccattctgtgctgaatagcggtgaccgtcgtcggtgaccattgtcctaatcgtctcgctccatacatccgccacgatgtctcaagaacttcaccaccggattgatgccgatgtgatcttcctgtcataaaccatagacgcgagacgacttcggtcaatggaagcctttttctcaaccatcgagaactaggccgtttgtttggtggcgaccatcgccaccaaaaaaacaaacgttcgtcgtctaatgcgcgtctttttttcctagagttcttctaggaaactagaaaagatgccccagactgcgagtcaccttgcttttgagtgcaattccctaaaaccagtactctaatagtttttcctagaagtggatctaggaaaatttaatttttacttcaaaatttagttagatttcatatatactcatttgaaccagactgtcaatggttacgaattagtcactccgtggatagagtcgctagacagataaagcaagtaggtatcaacggactgaggggcagcacatctattgatgctatgccctcccgaatggtagaccggggtcacgacgttactatggcgctctgggtgcgagtggccgaggtctaaatagtcgttatttggtcggtcggccttcccggctcgcgtcttcaccaggacgttgaaataggcggaggtaggtcagataattaacaacggcccttcgatctcattcatcaagcggtcaattatcaaacgcgttgcaacaacggtaacgatgtccgtagcaccacagtgcgagcagcaaaccataccgaagtaagtcgaggccaagggttgctagttccgctcaatgtactagggggtacaacacgttttttcgccaatcgaggaagccaggaggctagcaacagtcttcattcaaccggcgtcacaatagtgagtaccaataccgtcgtgacgtattaagagaatgacagtacggtaggcattctacgaaaagacactgaccactcatgagttggttcagtaagactcttatcacatacgccgctggctcaacgagaacgggccgcagttatgccctattatggcgcggtgtatcgtcttgaaattttcacgagtagtaaccttttgcaagaagccccgcttttgagagttcctagaatggcgacaactctaggtcaagctacattgggtgagcacgtgggttgactagaagtcgtagaaaatgaaagtggtcgcaaagacccactcgtttttgtccttccgttttacggcgttttttcccttattcccgctgtgcctttacaacttatgagtatgagaaggaaaaagttataataacttcgtaaatagtcccaataacagagtactcgcctatgtataaacttacataaatctttttatttgtttatccccaaggcgcgtgtaaaggggcttttcacggtggactgcagattctttggtaataatagtactgtaattggatatttttatccgcatagtgctccgggaaagcag\",\n  annotations: [\n    {\n      id: \"lxcC1L3M4z\",\n      start: 133,\n      end: 457,\n      direction: -1,\n      name: \"lacZ fragment\",\n      color: \"#8FDE8C\",\n      type: \"CDS\"\n    },\n    {\n      id: \"8DkP5cHpaE\",\n      start: 386,\n      end: 443,\n      direction: 1,\n      name: \"MCS\",\n      color: \"#CFF283\",\n      type: \"misc_feature\"\n    },\n    {\n      id: \"3fdyiQcona\",\n      start: 476,\n      end: 493,\n      direction: 1,\n      name: \"lac operator\",\n      color: \"#9DEAED\",\n      type: \"protein_bind\"\n    },\n    {\n      id: \"lsd_X-s5yM\",\n      start: 500,\n      end: 531,\n      direction: -1,\n      name: \"lac promoter\",\n      color: \"#9DEAED\",\n      type: \"promoter\"\n    },\n    {\n      id: \"mnaEqs-lfH\",\n      start: 854,\n      end: 1443,\n      direction: -1,\n      name: \"ori\",\n      color: \"#CFF283\",\n      type: \"rep_origin\"\n    },\n    {\n      id: \"7GHnMGoV2j\",\n      start: 1613,\n      end: 2474,\n      direction: -1,\n      name: \"bla\",\n      color: \"#8FDE8C\",\n      type: \"CDS\"\n    },\n    {\n      id: \"fPLcYWJU1f\",\n      start: 2474,\n      end: 2579,\n      direction: -1,\n      name: \"bla\",\n      color: \"#6B81FF\",\n      type: \"promoter\"\n    }\n  ]\n};\n","import React from 'react';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nexport default ({baseURL, sequenceType, sequenceObject}) => (\n    <>\n        <label style={{display: 'block', textTransform: \"capitalize\"}}>{sequenceType}</label>\n        <strong style={{display: 'block'}}>{sequenceObject.name}{sequenceObject.id && ': ' + sequenceObject.id}</strong>\n        { sequenceObject.source && <small style={{display: 'block'}}><a href={`${baseURL}${sequenceObject.id.replace('gene-', '').replace('rna-', '')}`} target=\"_blank\" rel=\"noopener noreferrer\">{sequenceObject.source} <FaExternalLinkAlt/></a></small>}\n    </>\n)","import React from 'react';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nexport default ({organism}) => (\n    <>\n        <label style={{display: 'block'}}>Genome</label>\n        <strong style={{display: 'block'}}>{organism.name}</strong>\n        <a href={organism.source} target=\"_blank\" rel=\"noopener noreferrer\"><small style={{display: 'block'}}>{organism.annotation} <FaExternalLinkAlt/></small></a>\n    </>\n)","import React, { Component } from 'react';\n\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { FaSearch } from 'react-icons/fa';\n\nimport { Loading } from 'view/Loading';\nimport EditsForm from './EditsForm';\nimport { SeqViz } from 'seqvizcustom/viewer';\n\nimport SequenceBox from \"../Shared/SequenceBox\";\nimport OrganismBox from \"../Shared/OrganismBox\";\n\nexport class Submission extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedEdit: 0,\n            selectedSequence: 0,\n            selection: {\n                start: undefined,\n                end: undefined,\n                sequence: undefined,\n            },\n            search: '',\n            seqvizActive: false,\n        };\n        if (this.props.edits.length > 0) {\n            this._params = JSON.parse(JSON.stringify(this.props.edits[0].options));\n            this._staticOptions = {\n                repairMutation: {value: false},\n                silencePAM: {value: false},\n            }\n        } else {\n            this._params = {};\n            this._staticOptions = {\n                repairMutation: {value: false},\n                silencePAM: {value: false},\n            }\n        }\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.edits.length !== prevProps.edits.length || Object.keys(this._params).length === 0) {\n            if(this.props.edits.length !== 0) {\n                this._params = JSON.parse(JSON.stringify(this.props.edits[0].options));\n            }\n        }\n    }\n\n    _handleEditChange = (e) =>  {\n        const index = e.target.value;\n        this.setState({\n            selectedEdit: index\n        });\n        this._params = JSON.parse(JSON.stringify(this.props.edits[index].options));\n    };\n\n    _handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { sequenceType, submitJob, sequenceObject } = this.props;\n        let jobData = {\n            sequenceType: sequenceType.toLowerCase(),\n            //objectId: sequenceId,\n            sequence: sequenceObject.name,\n            edit: this.props.edits[this.state.selectedEdit].name,\n            options: Object.entries({...this._params, ...this._staticOptions}).filter(([k, v]) => v.value).map(([k,v]) => k+'='+v.value).join(','),\n        };\n        submitJob(jobData);\n    };\n\n    _handleOptionChange = (option, value) => {\n        this._params[option].value = value;\n\n    };\n\n    _handleStaticOptionChange = (option, value) => {\n        this._staticOptions[option].value = value;\n    };\n\n    _updateSelection = (selection) => {\n        const { start, end, seq: sequence } = selection;\n        const { upstream=0 } = this.props;\n        this.setState({\n            selection: {\n                start: Math.min(start, end) + 1 + upstream,\n                end: Math.max(start, end) + 1 + upstream,\n                sequence,\n            }\n        });\n    };\n\n    render() {\n\n        const { loading, submitError, isSubmitting, sequenceObject, sequenceError,\n            sequenceType, organism, edits, annotations, translations, canSubmit, upstream=0 } = this.props;\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <Card body>\n                            <EditsForm\n                                edits={edits}\n                                selectedEdit={this.state.selectedEdit}\n                                editChange={this._handleEditChange}\n                                optionChange={this._handleOptionChange}\n                                handleSubmit={this._handleSubmit}\n                                staticOptionChange={this._handleStaticOptionChange}\n                                canSubmit={canSubmit}\n                                isSubmitting={isSubmitting}\n                                error={submitError}\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                            <Card body style={{fontFamily: 'monospace', fontSize:12}}>\n                            <Row>\n                                <Col style={{borderRight: '1px solid #e0e7e9'}}>\n                                    <OrganismBox organism={organism}/>\n                                </Col>\n                                <Col style={{borderRight: '1px solid #e0e7e9'}}>\n                                    <SequenceBox baseURL={organism.sequenceSearch} sequenceType={sequenceType} sequenceObject={sequenceObject}/>\n                                </Col>\n                                <Col style={{overflowY: 'auto', height: '15vh'}}>\n                                    <label style={{display: 'block'}}>Selection</label>\n                                    Start: {this.state.selection.start} <br/>\n                                    End: {this.state.selection.end} <br/>\n                                    Selected sequence: {this.state.selection.sequence}\n                                </Col>\n                            </Row>\n                        {loading ?\n                            <div style={{ height: '55vh', verticalAlign: 'middle', textAlign: 'center', lineHeight: '55vh'}}>\n                                <Loading size={10} />\n                            </div> : ( sequenceError ? (sequenceError.response.status === 404 ? 'Sequence not found' : sequenceError.message) :\n                            <>\n                                <div className=\"d-flex justify-content-end\">\n                                    <div className=\"searchbar\">\n                                        <input\n                                            className=\"search_input\"\n                                            type=\"text\"\n                                            onChange={e => this.setState({search: e.target.value})}\n                                        />\n                                        <span className=\"search_icon\">\n                                            <FaSearch />\n                                        </span>\n                                    </div>\n                                </div>\n                            <div onMouseEnter={e => this.setState({seqvizActive: true})} onMouseLeave={e => this.setState({seqvizActive: false})} >\n                            <SeqViz\n                                name=\"SubmissionSeqViz\"\n                                seq={sequenceObject.sequence && sequenceObject.sequence.toLocaleUpperCase()}\n                                annotations={annotations}\n                                translations={translations}\n                                style={{ height: \"55vh\", width: \"100%\" }}\n                                viewer=\"linear\"\n                                showComplement={false}\n                                onSelection={(sele) => {this._updateSelection(sele)}}\n                                search={{query: this.state.search, mismatch: 0}}\n                                upstream={-upstream}\n                                copyEvent={event => event.key === \"c\" && (event.metaKey || event.ctrlKey) && this.state.seqvizActive}\n                            />\n                            </div>\n                            </> )\n                        }\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import { connect } from \"react-redux\";\n\nimport { requestAddEdit } from 'state/home';\nimport { Submission } from \"./Submission\";\n\nconst mapStateToProps = (state) => {\n    const { gene, loading, error: sequenceError } = state.gene;\n    const { submitting: isSubmitting, error: submitError } = state.home.addEdit;\n\n    const { selectedOrganism: organism={} } = state.home;\n\n    const { edits } = state.edits;\n\n    return {\n        loading,\n        sequenceError,\n        isSubmitting,\n        submitError,\n        sequenceType: 'Gene',\n        sequenceId: gene.id,\n        organism,\n        canSubmit: !!organism.id && !!gene.id,\n        sequenceObject: {id: gene.geneId, name: gene.name, source: gene.source, sequence: gene.sequence},\n        edits: edits.map(ed => ({ ...ed, disabled: !ed.allowGenomic})),\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitJob: (jobData) => {\n            dispatch(requestAddEdit(jobData));\n        },\n    }\n};\n\nexport const ConnectedGene = connect(mapStateToProps, mapDispatchToProps)(Submission);","import { connect } from \"react-redux\";\n\nimport { requestAddEdit } from 'state/home';\nimport { Submission } from \"./Submission\";\n\nconst mapStateToProps = (state) => {\n    const { sequence, loading, error: sequenceError } = state.region;\n    const { submitting: isSubmitting, error: submitError } = state.home.addEdit;\n    const [chromosome, start] = state.location.payload.region.replace(':', '-').split('-');\n\n    const { selectedOrganism: organism={} } = state.home;\n    const { edits } = state.edits;\n\n    return {\n        loading,\n        sequenceError,\n        isSubmitting,\n        submitError,\n        sequenceType: 'Genomic',\n        sequenceId: null,\n        organism,\n        chromosome,\n        upstream: parseInt(start) - 1,\n        canSubmit: !!organism.id && !!sequence,\n        sequenceObject: {id: null, name: chromosome, source: null, sequence: sequence},\n        edits: edits.map(ed => ({ ...ed, disabled: !ed.allowGenomic})),\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitJob: (jobData) => {\n            dispatch(requestAddEdit(jobData));\n        },\n    }\n};\n\nexport const ConnectedRegion = connect(mapStateToProps, mapDispatchToProps)(Submission);","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport logo from \"assets/logo.png\";\n\nexport default () => <Row>\n    <Col style={{textAlign: 'center'}}>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>pegRNAs for your desired edit</p>\n    </Col>\n</Row>","import React from 'react';\nimport { FlexibleWidthXYPlot, LineSeries, CustomSVGSeries } from \"react-vis\";\n\n\nconst TranscriptPlot = (props) => {\n    let { gene, transcript } = props;\n\n    let offset = 0;\n\n    let data = [\n      {x: offset, y: 50 },\n      {x: 1500, y: 50},\n    ];\n\n\n    const geneLength = gene.end - gene.start;\n\n    let exonData = transcript.exons.map((exon) => {\n        const exonStart = (exon.start - gene.start) / geneLength * 1000 + offset;\n        const exonEnd = (exon.end - gene.start) / geneLength * 1000 + offset;\n        return {\n            x: exonStart,\n            y: 100,\n            customComponent: (row, positionInPixels, globalStyle) => (\n                <g id=\"Exon 1\" transform=\"translate(0, 0)\">\n                    <path id=\"Exon 1\" className=\"Exon 1\" shapeRendering=\"geometricPrecision\" d={`M 0 0 L ${(exonEnd-exonStart)*.45} 0 L ${(exonEnd-exonStart)*.5} 5 L ${(exonEnd-exonStart)*.45} 10 L 0 10 L 0 0`}\n                          style={{fillOpacity: 1, cursor: \"pointer\", fill: \"rgb(107, 129, 255)\", stroke: \"rgb(46, 59, 133)\", strokeWidth: \"0.5px\"}}></path>\n                </g>\n            )\n        }\n        }\n    );\n\n\n   return <FlexibleWidthXYPlot height={55}>\n       <LineSeries key={transcript.name + 'line'} data={data} strokeStyle='dashed' color='grey'/>\n       <CustomSVGSeries data={exonData}/>\n   </FlexibleWidthXYPlot>;\n}\n\nexport default TranscriptPlot;\n","import React from \"react\";\nimport {Card, Col, Row} from \"react-bootstrap\";\nimport Link from \"redux-first-router-link\";\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nimport TranscriptPlot from \"view/Home/components/TranscriptPlot\";\n\nexport default ({selectedGene, selectedOrganism, routeTranscript}) => (\n    <Card body>\n        { selectedGene.transcripts.map(transcript => (\n            <Row key={transcript.id}>\n                <Col md={2}>\n                    <a href={`${selectedOrganism.sequenceSearch}${transcript.transcriptId.replace('gene-', '').replace('rna-', '')}`} target=\"_blank\"  rel=\"noopener noreferrer\">{transcript.name} <FaExternalLinkAlt/></a><br/>\n                    {transcript.transcriptType}<br/>\n                </Col>\n                <Col md={8}>\n                    <TranscriptPlot gene={selectedGene} transcript={transcript}/>\n                </Col>\n                <Col md={2}>\n                    <Link className=\"btn btn-outline-success\" to={ routeTranscript(transcript.id) }>Select</Link>\n                </Col>\n            </Row>\n        ))}\n    </Card>\n)","import React from \"react\";\nimport { Button, Card, Col, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\n\n\nexport default ({ clinVarResults, handleClinVarSubmit }) => {\n\n    return <Card body style={{maxHeight: '60vh', overflowY: 'auto'}}>\n        { clinVarResults.map((obj, i) => (\n            <Row key={i}>\n                <Col md={10}>\n                    <h4><a href={`https://www.ncbi.nlm.nih.gov/clinvar/variation/${obj.accession}`} target=\"_blank\" rel=\"noopener noreferrer\">{obj.title}</a></h4><br/>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-6\">Variant type</dt><dd className=\"col\">{obj.objType}</dd>\n                        <dt className=\"col-md-6\">Affected gene(s)</dt>\n                        <dd className=\"col-md-6\" style={{textOverflow: 'ellipsis', overflow: 'hidden', maxHeight:'50px'}}>\n                            { obj.genes.map(gene => gene.symbol).join(',') }\n                        </dd>\n                        <dt className=\"col-md-6\">Genomic location</dt>\n                        <dd className=\"col-md-6\">\n                            { obj.variationSet[0].variationLoc.map((loc, j) => (\n                                <React.Fragment key={obj.accession + '-' + j}>{loc.chr}:{loc.start}-{loc.stop} ({loc.assemblyName})<br/></React.Fragment>\n                            ))}\n                        </dd>\n                        <dt className=\"col-md-6\">Canonical SPDI</dt>\n                        <dd className=\"col-md-6\">{obj.variationSet[0].canonicalSpdi}</dd>\n                    </dl>\n                </Col>\n                <Col md={2} className=\"align-self-center\">\n                    { obj.variationSet[0].canonicalSpdi.length > 0 ? <React.Fragment>\n                            <Button variant=\"outline-danger\" onClick={() => handleClinVarSubmit(obj.accession, false, i)}>Introduce</Button><br/><br/>\n                            <Button variant=\"outline-success\" onClick={() => handleClinVarSubmit(obj.accession, true, i)}>Repair</Button>\n                        </React.Fragment> :\n                        <React.Fragment>\n                            <OverlayTrigger\n                                placement=\"right\"\n                                overlay={\n                                    <Tooltip id={`${obj.accession}-tooltip-install`}>\n                                        Sorry, we do not provide this functionality, for variants without a canonical SPDI at this point.\n                                    </Tooltip>\n                                }\n                            >\n                                <span className=\"d-inline-block\"><Button variant=\"outline-danger\" disabled style={{ pointerEvents: 'none' }}>Introduce</Button></span>\n                            </OverlayTrigger><br/><br/>\n                            <OverlayTrigger\n                                placement=\"right\"\n                                overlay={\n                                    <Tooltip id={`${obj.accession}-tooltip-repair`}>\n                                        Sorry, we do not provide this functionality, for variants without a canonical SPDI at this point.\n                                    </Tooltip>\n                                }\n                            >\n                                <span className=\"d-inline-block\"><Button variant=\"outline-success\" disabled style={{ pointerEvents: 'none' }}>Repair</Button></span>\n                            </OverlayTrigger>\n                        </React.Fragment>}\n\n                </Col>\n            </Row>\n        ))}\n    </Card>\n}","import React, {useState} from \"react\";\nimport {Col, Collapse, Form, OverlayTrigger, Popover, Row} from \"react-bootstrap\";\nimport { FaRegQuestionCircle, FaAngleDown, FaAngleRight } from 'react-icons/fa';\n\n\nfunction useToggleOpen(initial) {\n    const [open, setOpen] = useState(initial);\n    return [open, () => setOpen(!open)];\n}\n\nexport default ({changeAdvancedOption, advancedOptions}) => {\n    \n    const [open, toggleOpen] = useToggleOpen(false);\n\n    return <Col>\n        <span\n            onClick={toggleOpen}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}\n        >\n            { open ? <FaAngleDown/> : <FaAngleRight/> }Advanced Options\n        </span>\n        <Collapse in={open}>\n            <div id=\"example-collapse-text\">\n                <b>pegRNAs</b>\n                <Form.Row>\n                    <Form.Group as={Col} md={6}>\n                        <Form.Label>PBS length <OverlayTrigger\n                            placement=\"right\"\n                            overlay={\n                                <Popover id=\"pbsTooltip\">\n                                    <Popover.Content>\n                                        Desired length of the primer binding site\n                                    </Popover.Content>\n                                </Popover>\n                            }\n                        >\n                            <FaRegQuestionCircle/>\n                        </OverlayTrigger></Form.Label>\n                        <Row>\n                            <Col>\n                                <Form.Label>From:</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('pbsMinLength', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.pbsMinLength}\n                                />\n                            </Col>\n                            <Col>\n                                <Form.Label>To:</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('pbsMaxLength', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.pbsMaxLength}\n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group as={Col} md={6}>\n                        <Form.Label>RT length <OverlayTrigger\n                            placement=\"right\"\n                            overlay={\n                                <Popover id=\"repairTooltip\">\n                                    <Popover.Content>\n                                        Desired homology downstream of mutations.\n                                    </Popover.Content>\n                                </Popover>\n                            }\n                        >\n                            <FaRegQuestionCircle/>\n                        </OverlayTrigger></Form.Label>\n                        <Row>\n                            <Col>\n                                <Form.Label>From:</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('rtMinLength', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.rtMinLength}\n                                />\n                            </Col>\n                            <Col>\n                                <Form.Label>To:</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('rtMaxLength', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.rtMaxLength}\n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group as={Col} md={9}>\n                        <Form.Label>Spacers <OverlayTrigger\n                            placement=\"right\"\n                            overlay={\n                                <Popover id=\"repairTooltip\">\n                                    <Popover.Content>\n                                        Searching range for pegRNA and nicking sgRNA spacers.\n                                    </Popover.Content>\n                                </Popover>\n                            }\n                        >\n                            <FaRegQuestionCircle/>\n                        </OverlayTrigger></Form.Label>\n                        <Row>\n                            <Col>\n                                <Form.Label>pegRNA</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('spacerSearchRange', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.spacerSearchRange}\n                                />\n                            </Col>\n                            <Col>\n                                <Form.Label>Nicking</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('nickingRange', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.nickingRange}\n                                />\n                            </Col>\n                            <Col>\n                                <Form.Label>Number of pegRNAs to design</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('numPegs', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.numPegs}\n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group as={Col} md={12}>\n                        <Form.Label>Primers <OverlayTrigger\n                            placement=\"right\"\n                            overlay={\n                                <Popover id=\"repairTooltip\">\n                                    <Popover.Content>\n                                        Parameters for primer design\n                                    </Popover.Content>\n                                </Popover>\n                            }\n                        >\n                            <FaRegQuestionCircle/>\n                        </OverlayTrigger></Form.Label>\n                        <Row>\n                            <Col>\n                                <Form.Label>Minimum product size</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('productMinSize', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.productMinSize}\n                                />\n                            </Col>\n                            <Col>\n                                <Form.Label>Maximum product size</Form.Label>\n                                <Form.Control\n                                    onChange={(e) => (changeAdvancedOption('productMaxSize', e.target.value))}\n                                    type=\"number\"\n                                    value={advancedOptions.productMaxSize}\n                                />\n                            </Col>\n                        </Row><Row>\n                        <Col>\n                            <Form.Label>Minimum primer size</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerMinLength', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerMinLength}\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>Maximum primer size</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerMaxLength', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerMaxLength}\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>Optimal primer size</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerOptLength', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerOptLength}\n                            />\n                        </Col>\n                    </Row><Row>\n                        <Col>\n                            <Form.Label>Minimum primer TM</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerMinTm', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerMinTm}\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>Maximum primer TM</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerMaxTm', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerMaxTm}\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>Optimal primer TM</Form.Label>\n                            <Form.Control\n                                onChange={(e) => (changeAdvancedOption('primerOptTm', e.target.value))}\n                                type=\"number\"\n                                value={advancedOptions.primerOptTm}\n                            />\n                        </Col>\n                    </Row>\n                    </Form.Group>\n                </Form.Row>\n            </div>\n        </Collapse>\n    </Col>\n}","import React  from 'react';\nimport {Button, Card, Col, OverlayTrigger, Popover, Row} from \"react-bootstrap\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport { FaUndo, FaDownload, FaUpload } from 'react-icons/fa';\n\nimport AdvancedOptions from \"./AdvancedOptions\";\n\n\nexport default ({ edits, invalid, editColumns, removeEdit, resetEditList, selectedOrganism, handleJobSubmit, parseImportFile, changeAdvancedOption, advancedOptions, isParsing }) => {\n\n    return <Row>\n        <Col>\n            <ToolkitProvider\n                keyField='idx'\n                data={edits.map((e, i) => ({...e, idx: i}))}\n                columns={editColumns.map((e, i) => i === 0 ? { ...e, formatter: (cell, row) => (\n                        <><button aria-label=\"Remove\" className=\"close rbt-close\" style={{float: 'left'}}\n                                  type=\"button\" onClick={() => removeEdit(row.idx)}><span\n                            aria-hidden=\"true\">×</span><span\n                            className=\"sr-only\">Remove</span>\n                        </button> {cell}</>)} : e)}\n                exportCSV={ {\n                    fileName: selectedOrganism ? selectedOrganism.name + ' - ' + selectedOrganism.annotation + ' edits.tsv' : 'pegIT.tsv',\n                    ignoreHeader: true,\n                    separator: '\\t',\n                } }\n            >\n                {\n                    props => (\n                        <Card body>\n                            <BootstrapTable\n                                { ...props.baseProps }\n                                bootstrap4={true}\n                                bordered={false}\n                                striped\n                                hover\n                                height='60vh'\n                            />\n                                { invalid.length > 0 && <BootstrapTable\n                                keyField='idx'\n                                data={invalid.map((e, i) => ({...e, idx: i}))}\n                                rowClasses=\"table-danger\"\n                                columns={[  {dataField: 'line', text: 'Line', csvType: 'Number'}, ...editColumns, {dataField: 'error', text: 'Error', csvType: 'Number'}] }\n                                bootstrap4={true}\n                                bordered={false}\n                                striped\n                                hover\n                                height='30vh'\n                            /> }\n                            <Row>\n                                <Col md={3}>\n                                    <Button variant=\"link\" style={{color: 'black', fontWeight: 'bold'}}\n                                            onClick={() => resetEditList()} block>\n                                        <FaUndo /> Clear and reset\n                                    </Button>\n                                </Col>\n                                <Col md={5}>\n                                    <Button variant=\"outline-success \" disabled={edits.length < 1} block\n                                            onClick={handleJobSubmit}>\n                                        Submit\n                                    </Button>\n                                </Col>\n                                <Col md={2}>\n                                    <Button variant=\"link\" style={{color: 'black', fontWeight: 'bold'}}\n                                            onClick={ () => props.csvProps.onExport() } block disabled={edits.length < 1}>\n                                        <FaDownload /> Export edits\n                                    </Button>\n                                </Col>\n                                <Col md={2}>\n                                    <OverlayTrigger overlay={<Popover id=\"uploadTooltip\"><Popover.Content>{selectedOrganism ? 'Check Instructions page for file format' : 'Select an organism to enable upload'}</Popover.Content></Popover>}>\n                                                <span>\n                                                <label className={\"btn btn-link btn-block\" + ((!selectedOrganism || isParsing) ? \" disabled\" : \"\") } style={{color: 'black', fontWeight: 'bold'}}>\n                                                    <FaUpload /> {isParsing ? 'Parsing..' : 'Import edits'}\n                                                    <input type=\"file\" hidden onChange={parseImportFile} disabled={!selectedOrganism || isParsing}/>\n                                                </label>\n                                                </span>\n                                    </OverlayTrigger>\n                                </Col>\n                            </Row>\n                            <br/>\n                            <Row>\n                                <AdvancedOptions changeAdvancedOption={changeAdvancedOption} advancedOptions={advancedOptions}/>\n                            </Row>\n                        </Card>\n                    )\n                }\n            </ToolkitProvider>\n        </Col>\n    </Row>\n}","import React from 'react'\nimport { connect } from \"react-redux\";\nimport Link from 'redux-first-router-link'\n\nimport { FaRegQuestionCircle, FaExternalLinkAlt } from 'react-icons/fa';\n\nimport { Container, Row, Col, Card, Form, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { AsyncTypeahead, Typeahead, Highlighter } from 'react-bootstrap-typeahead';\n\nimport { searchGenes, requestSearchClinVar, clearSearchGenes, selectOrganism,\n         removeEdit, resetEditList, requestAddEdit,requestAddMultiple, changeAdvancedOption } from \"state/home\";\nimport { requestGene } from \"state/gene\";\nimport { submitJob, submitClinVar } from \"state/job\";\nimport { setCustomSequence } from \"state/customsequence\";\nimport { routeGene, routeTranscript, routeCustomSequence, routeRegion } from 'state/routes';\nimport LogoRow from \"view/Home/components/LogoRow\";\nimport TranscriptList from \"view/Home/components/TranscriptList\";\nimport ClinVarSelection from \"view/Home/components/ClinVarSelection\";\nimport SelectedEdits from \"view/Home/components/SelectedEdits\";\nimport { LoadingCard } from 'view/Loading';\n\nexport class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pasteSequence: false,\n            showSelectedGene: false,\n            query: '',\n            dnaSeq: '',\n            clinVarQuery: '',\n            dnaSeqInvalid: false,\n            open: false,\n        };\n    }\n\n    _handleOrganismChange = (organism) => {\n        this._geneSelector && this._geneSelector.getInstance().clear();\n        this.props.clearSearchGenes();\n        this.props.selectOrganism(organism[0]);\n        this.setState( {\n            showSelectedGene: false,\n        });\n    };\n\n    _setCustomSequence = () => {\n        let {dnaSeq, selectedOrganism} = this.state;\n        let name = 'customSequence';\n        let match = dnaSeq.match(/^(>.*\\n)?([actgACTG\\n]+)$/);\n        if (match) {\n            if(match[1]) {\n                name = match[1].substring(1, match[1].length-1);\n                name = name.split(/\\s+/)[0]\n            }\n            dnaSeq = match[2].replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            this.props.setCustomSequence(name, dnaSeq, selectedOrganism);\n        } else {\n            this.setState({dnaSeqInvalid: true});\n        }\n    };\n\n    _handleClinVarSearch = () => {\n        this.props.searchClinVar(this.state.clinVarQuery);\n    };\n\n    _handleAddClinvar = (clinvarId, repair) => {\n        this.props.requestAddEdit({\n            clinvarId,\n            repair: repair ? 'true' : 'false',\n        })\n\n    };\n\n    _handleSearch = (query) => {\n        this.setState({query});\n        this.props.searchGenes(this.props.selectedOrganism, query);\n    };\n\n    _handleGeneSelect = (s) => {\n        let selectedGene = s[0];\n        if(selectedGene){\n            this.props.loadGene(selectedGene.id);\n            this.setState({showSelectedGene: true})\n        } else {\n            this.setState({showSelectedGene: false});\n        }\n    };\n\n    _handleJobSubmit = () => {\n        const { selectedOrganism, edits, submitJob, advancedOptions } = this.props;\n        submitJob({\n            organism: selectedOrganism.id,\n            edits,\n            advancedOptions\n        })\n    };\n    _handleClinVarSubmit = () => {\n        const { edits, submitClinVar, advancedOptions } = this.props;\n        submitClinVar({\n            edits,\n            advancedOptions\n        })\n    };\n\n    _parseImportFile = (e) => {\n\n        const { requestAddMultiple, selectedOrganism } = this.props;\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let edits = [];\n        let error = undefined;\n        reader.onload = function (e) {\n            const lines = e.target.result.split(/\\r?\\n/).filter(l => l.length > 0);\n            if(selectedOrganism && selectedOrganism.name === 'ClinVar'){\n                lines.forEach((l) => {\n                    l = l.split(/\\s+/);\n                    if(l.length !== 2) {\n                        error = 'Invalid clinVar edits file, file should contain two tab-separated columns (clinvarID\\trepair)';\n                    }\n                    let [ clinvarId, repair] = l;\n                    edits.push({clinvarId, repair})\n                });\n            } else {\n                lines.forEach((l) => {\n                    l = l.split(/\\s+/);\n                    if(l.length !== 4) {\n                        error = 'Invalid edits file, file should contain four tab-separated columns (sequence_type\\tsequence\\tedit\\toptions)';\n                    }\n                    let [ sequenceType, sequence, edit, options] = l;\n                    edits.push({sequenceType, sequence, edit, options})\n                });\n            }\n            if(error) {\n                alert(error);\n            } else {\n                requestAddMultiple(edits)\n            }\n        };\n        reader.readAsText(file);\n        e.target.value = null;\n    };\n\n\n    render() {\n        let { organisms, organismsLoading, selectedOrganism,\n            gene: selectedGene, geneLoading,\n            edits, invalid,\n            removeEdit, resetEditList, isParsing,\n            advancedOptions, changeAdvancedOption } = this.props;\n        const { searching: clinVarSearching, results: clinVarResults } = this.props.clinvar;\n        const { query, pasteSequence, dnaSeq, clinVarQuery, dnaSeqInvalid } = this.state;\n        let { showSelectedGene } = this.state;\n        organisms = [{id: null, name: 'ClinVar', annotation: 'ClinVar'}, ...organisms ];\n        showSelectedGene = showSelectedGene && selectedGene.transcripts;\n        const clinVar = selectedOrganism && selectedOrganism.name === 'ClinVar';\n        const genes = this.props.genes.values.hasOwnProperty(query) ? this.props.genes.values[query] : [];\n\n        let selectRegion = false;\n        if (dnaSeq.match(/^.+:\\d+-\\d+/)) {\n            selectRegion = true;\n        };\n\n        return (\n            <Container>\n                <LogoRow />\n                <Row>\n                    <Col>\n                        <Card body>\n                            <Form>\n                                <Row>\n                                    <Col md={5}>\n                                        <label>Genome\n                                            <Typeahead\n                                                id=\"organism\"\n                                                clearButton\n                                                labelKey=\"name\"\n                                                filterBy={['name', 'assembly']}\n                                                options={organisms}\n                                                isLoading={organismsLoading}\n                                                placeholder=\"Type a genome name or ID\"\n                                                disabled={edits.length > 0}\n                                                selected={selectedOrganism ? [selectedOrganism] : []}\n                                                onChange={this._handleOrganismChange}\n                                                renderMenuItemChildren={(option, props) => (\n                                                    <React.Fragment key={option.name}>\n                                                        <Highlighter search={props.text}>\n                                                            {option.name}\n                                                        </Highlighter>\n                                                        <br/>\n                                                        <small>\n                                                            <Highlighter search={props.text}>\n                                                                {option.annotation}\n                                                            </Highlighter>\n                                                        </small>\n                                                    </React.Fragment>\n                                                )}\n                                            />\n                                        </label>\n                                        {selectedOrganism && selectedOrganism.source && <a href={selectedOrganism.source} target=\"_blank\" rel=\"noopener noreferrer\"><small style={{display: 'block'}}>{selectedOrganism.annotation} <FaExternalLinkAlt/></small></a>}\n                                    </Col>\n                                    <Col md={5}>\n                                        <label> {clinVar && <React.Fragment>Search ClinVar <OverlayTrigger\n                                            placement=\"right\"\n                                            overlay={\n                                                <Popover id=\"editTooltip1\">\n                                                    <Popover.Content>Click me for help</Popover.Content>\n                                                </Popover>\n                                            }\n                                        >\n                                        <span>\n                                            <OverlayTrigger\n                                                placement=\"right\"\n                                                trigger=\"click\"\n                                                overlay={\n                                                    <Popover id=\"editTooltip2\">\n                                                        <Popover.Content>Perform a text search in ClinVar. For info on how to construct queries, see <a href=\"https://www.ncbi.nlm.nih.gov/clinvar/docs/help/\" target=\"_blank\"  rel=\"noopener noreferrer\">here</a></Popover.Content>\n                                                    </Popover>\n                                                }\n                                            >\n                                                <FaRegQuestionCircle />\n                                            </OverlayTrigger>\n                                        </span>\n                                        </OverlayTrigger></React.Fragment>}\n                                                { !clinVar && pasteSequence && <React.Fragment>Target sequence <OverlayTrigger\n                                                    placement=\"right\"\n                                                    overlay={\n                                                        <Popover id=\"editTooltip1\">\n                                                            <Popover.Content>Input acustom DNA sequence. Use FASTA format to name the sequence.<br/>\n                                                                Or enter genetic coordinates in the format \"CHROMOSOME:START-END\"</Popover.Content>\n                                                        </Popover>\n                                                    }\n                                                >\n                                                    <FaRegQuestionCircle />\n                                                </OverlayTrigger></React.Fragment> }\n                                                { !clinVar && !pasteSequence && 'Gene' }\n                                            {clinVar && <Form.Control placeholder=\"Search ClinVar\" value={clinVarQuery} onChange={(e) => this.setState({ clinVarQuery: e.target.value })} onKeyPress={e => {if (e.key === \"Enter\") {this._handleClinVarSearch();}}}/>}\n                                            { !clinVar && pasteSequence && <><Form.Control as=\"textarea\" isInvalid={dnaSeqInvalid}  value={dnaSeq} onChange={(e) => this.setState({ dnaSeq: e.target.value, dnaSeqInvalid: false })}/>\n                                            {!clinVar && pasteSequence && selectedOrganism && <OverlayTrigger\n                                                placement=\"bottom\"\n                                                trigger=\"click\"\n                                                overlay={\n                                                    <Popover id=\"editTooltip2\">\n                                                        <Popover.Content>\n                                                            {selectedOrganism.scaffolds.map(s => <p key={s}>{s}</p>)}\n                                                        </Popover.Content>\n                                                    </Popover>\n                                                }\n                                            >\n                                                <Button variant=\"link\">Available sequences</Button>\n                                            </OverlayTrigger>}\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                Only DNA sequences or genetic coordinates(format \"CHROMOSOME:START-END\") are allowed\n                                            </Form.Control.Feedback></> }\n                                            {!clinVar && !pasteSequence &&<AsyncTypeahead\n                                                id=\"gene\"\n                                                clearButton\n                                                minLength={1}\n                                                useCache={false}\n                                                isLoading={this.props.genes.loading}\n                                                disabled={!selectedOrganism}\n                                                labelKey=\"name\"\n                                                filterBy={['name', 'geneId']}\n                                                options={genes}\n                                                placeholder={!selectedOrganism ? \"Select a genome first\" : \"Type a gene name or ID\"}\n                                                onChange={this._handleGeneSelect}\n                                                onSearch={this._handleSearch}\n                                                ref={(ref) => this._geneSelector = ref}\n                                                renderMenuItemChildren={(option, props, index) => (\n                                                    <React.Fragment key={option.geneId}>\n                                                        <Highlighter search={props.text}>\n                                                            {option.name}\n                                                        </Highlighter>\n                                                        <br/>\n                                                        <small>\n                                                            <Highlighter search={props.text}>\n                                                                {option.geneId}\n                                                            </Highlighter>\n                                                        </small>\n                                                    </React.Fragment>\n                                                )}\n                                            /> }\n                                        </label>\n                                    </Col>\n                                    <Col md={2}>\n                                        <br/>\n                                        { !clinVar && pasteSequence && (dnaSeq.length && selectedOrganism ? (\n                                            selectRegion ? <Link className=\"btn btn-outline-success\" to={routeRegion(dnaSeq)}>Select</Link> : <Button variant=\"outline-success\" onClick={this._setCustomSequence}>Select</Button>\n                                        ) : <Button variant=\"outline-success\" disabled>Select</Button>) }\n                                        { !clinVar && !pasteSequence && (showSelectedGene ? <Link className=\"btn btn-outline-success\" to={routeGene(selectedGene.id)}>Select</Link> : <Button variant=\"outline-success\" disabled>Select</Button>) }\n                                        { clinVar && <Button onClick={this._handleClinVarSearch} variant=\"outline-success\" disabled={!clinVarQuery}>Search</Button>}\n                                    </Col>\n                                </Row>\n                            </Form>\n                            <Row className=\"justify-content-center\">\n                                <Col md=\"auto\">\n                                    {!clinVar && <Button onClick={() => this.setState({pasteSequence: !pasteSequence, showSelectedGene: false})}>{pasteSequence ? 'Gene search' : 'Custom sequence / Genomic coordinates'}</Button>}\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <br/>\n                        {(geneLoading || clinVarSearching) && <LoadingCard size={10} style={{ textAlign: 'center', lineHeight: \"calc(30vh - 40px)\", height: \"30vh\" }}/> }\n                        { !clinVarSearching && clinVar && clinVarResults.length > 0 && <ClinVarSelection clinVarResults={clinVarResults} handleClinVarSubmit={this._handleAddClinvar}/> }\n                        {!clinVar && showSelectedGene && <TranscriptList selectedGene={selectedGene} selectedOrganism={selectedOrganism} routeTranscript={routeTranscript} />\n                        }\n                        </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <br/>\n                        <SelectedEdits\n                            edits={edits}\n                            invalid={invalid}\n                            editColumns={ clinVar ? [\n                                {dataField: 'clinvarId', text: 'ClinVar ID', csvType: 'Number'},\n                                {dataField: 'repair', text: 'Repair', csvType: 'Number'}\n                            ] : [\n                                {dataField: 'sequenceType', text: 'Sequence Type', csvType: 'Number'},\n                                {dataField: 'sequence', text: 'Sequence', csvType: 'Number'},\n                                {dataField: 'edit', text: 'Edit', csvType: 'Number'},\n                                {dataField: 'options', text: 'Options', csvType: 'Number'},\n                            ]}\n                            removeEdit={removeEdit}\n                            resetEditList={resetEditList}\n                            selectedOrganism={selectedOrganism}\n                            changeAdvancedOption={changeAdvancedOption}\n                            advancedOptions={advancedOptions}\n                            handleJobSubmit={clinVar ? this._handleClinVarSubmit : this._handleJobSubmit}\n                            parseImportFile={this._parseImportFile}\n                            isParsing={isParsing}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let { values: organisms, loading: organismsLoading } = state.organisms;\n    let { gene, loading: geneLoading } = state.gene;\n    let { clinvar, edits, genes, selectedOrganism, advancedOptions, addEdit } = state.home;\n\n    return {\n        organisms,\n        organismsLoading,\n        selectedOrganism,\n        genes,\n        gene,\n        geneLoading,\n        clinvar,\n        edits: edits.validated || [],\n        invalid: edits.errors || [],\n        advancedOptions,\n        isParsing: addEdit.submitting,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchGenes: (organism, query) => dispatch(searchGenes(organism, query)),\n        loadGene: (id) => dispatch(requestGene(id)),\n        clearSearchGenes: () => dispatch(clearSearchGenes()),\n        setCustomSequence: (name, sequence, organism) => {\n            dispatch(setCustomSequence(name, sequence, organism));\n            dispatch(routeCustomSequence());\n        },\n        searchClinVar: (query) => dispatch(requestSearchClinVar(query)),\n        submitClinVar: (jobData) => dispatch(submitClinVar(jobData)),\n        submitJob: (jobData) => dispatch(submitJob(jobData)),\n        selectOrganism: (organism) => dispatch(selectOrganism(organism)),\n        removeEdit: (idx) => dispatch(removeEdit(idx)),\n        resetEditList: () => dispatch(resetEditList()),\n        requestAddEdit: (edit) => dispatch(requestAddEdit(edit)),\n        requestAddMultiple: (edits) => dispatch(requestAddMultiple(edits)),\n        changeAdvancedOption: (option, value) => dispatch(changeAdvancedOption(option, value)),\n    }\n};\n\nexport const ConnectedHome = connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\n\nimport { Loading } from \"../../Loading\";\n\nexport default ({jobId, jobStatus, warning, queuePosition}) => (\n    <React.Fragment>\n        <dt>Job Id:</dt>\n        <dl>{jobId}</dl>\n        <dt>Status:</dt>\n        <dl>{jobStatus} {!['Failed', 'Completed', 'Not Found'].includes(jobStatus) && <Loading style={{  display:'inline-block', verticalAlign: 'bottom' }} size={3}/>}{queuePosition && <React.Fragment><br/>Position {queuePosition}</React.Fragment>}</dl>\n        { warning && <React.Fragment>\n            <dt>Warning:</dt>\n            <dl>{warning}</dl>\n        </React.Fragment> }\n\n    </React.Fragment>\n);","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Card, Col, Container, Row, Button } from \"react-bootstrap\";\nimport JobStatusBox from \"./components/JobStatusBox\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport OrganismBox from \"view/Shared/OrganismBox\";\nimport { routeJobDetail } from 'state/routes';\n\nimport { FaDownload } from 'react-icons/fa';\n\nexport const Summary = ({ organism={}, jobId, status, summary=[], routeJobDetail, warning, options={}, queuePosition }) => {\n\n    return <Container fluid>\n            <Row>\n                <Col>\n                    <Card body>\n                        <Row>\n                            <Col>\n                                <OrganismBox organism={organism} />\n                            </Col>\n                            <Col style={{borderLeft: '1px solid rgba(0,0,0,.1)'}}>\n                                <JobStatusBox jobId={jobId} jobStatus={status} warning={warning} queuePosition={queuePosition}/>\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <b>Options:</b>\n                                <dl className=\"row\">\n                                    {Object.entries(options).map(([k, v]) => {\n                                        return <React.Fragment key={k}>\n                                            <dt className=\"col-sm-2\">{k}</dt>\n                                            <dd className=\"col-sm-1\">{v}</dd>\n                                        </React.Fragment>\n                                    })\n                                    }\n                                </dl>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Button style={{float: 'right', margin: '10px'}} href={\"/api/jobs/\" + jobId + \"/download\"} disabled={['Queued', 'Finding pegRNAs'].includes(status)}><FaDownload /> Download</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Row>\n                            <Col>\n                                <BootstrapTable\n                                    keyField='idx'\n                                    data={ summary.map((e, i) => ({...e, idx: i})) }\n                                    columns={ [\n                                        {dataField: 'sequenceType', text: 'Sequence Type'},\n                                        {dataField: 'sequence', text: 'Sequence'},\n                                        {dataField: 'edit', text: 'Edit'},\n                                        {dataField: 'options', text: 'Options'},\n                                        {dataField: 'pegRNAs', text: '# pegRNAs'},\n                                        {dataField: 'detail', isDummyField: true, text: '', formatter: (cell, row) => (\n                                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={ () => routeJobDetail(jobId, 'edit' + row.idx ) }>Details</Button> )}] }\n                                    bootstrap4={true}\n                                    bordered={false}\n                                    striped\n                                    hover\n                                    height='60vh'\n                                />\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n};\n\nconst mapStateToProps = (state) => {\n\n    let { jobId, status, organism, summary, warning, options, queuePosition='' } = state.job.summary;\n\n    return {\n        organism,\n        jobId,\n        status,\n        summary,\n        warning,\n        options,\n        queuePosition,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        routeJobDetail: (jobId, idx) => dispatch(routeJobDetail(jobId, idx)),\n    }\n};\n\nexport const ConnectedSummary = connect(mapStateToProps, mapDispatchToProps)(Summary);\n","import React from 'react';\nimport { Row, Col, Popover, OverlayTrigger} from \"react-bootstrap\";\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nexport const OligosBox = ({pegRNA}) => {\n    return <OverlayTrigger\n        placement=\"right\"\n        trigger=\"click\"\n        overlay={\n            <Popover id=\"pegRNAOligosTooltip\">\n                <Popover.Title>Recommended oligos</Popover.Title>\n                <Popover.Content>\n                    <Row>\n                        <Col sm={12}><label>Spacer oligos</label></Col>\n                        <dt className=\"col-sm-3\">Top</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('oligos') && pegRNA.oligos.spacer.top}</dl>\n                        <dt className=\"col-sm-3\">Bottom</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('oligos') && pegRNA.oligos.spacer.bottom}</dl>\n\n                        <Col sm={12}><label>Extension oligos</label></Col>\n                        <dt className=\"col-sm-3\">Top</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('oligos') && pegRNA.oligos.extension.top}</dl>\n                        <dt className=\"col-sm-3\">Bottom</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('oligos') && pegRNA.oligos.extension.bottom}</dl>\n\n                        <Col sm={3}><label>Nicking oligos</label></Col>\n                        <Col sm={3}><label>Kind: {pegRNA && pegRNA.hasOwnProperty('nicking') && pegRNA.nicking.length > 0 && pegRNA.nicking[0].kind}</label></Col>\n                        <Col sm={6}><label>Position: {pegRNA && pegRNA.hasOwnProperty('nicking') && pegRNA.nicking.length > 0 && pegRNA.nicking[0].position}</label></Col>\n                        <dt className=\"col-sm-3\">Top</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('nicking') && pegRNA.nicking.length > 0 && pegRNA.nicking[0].top}</dl>\n                        <dt className=\"col-sm-3\">Bottom</dt>\n                        <dl className=\"col-sm-9\">{pegRNA && pegRNA.hasOwnProperty('nicking') && pegRNA.nicking.length > 0 && pegRNA.nicking[0].bottom}</dl>\n                    </Row>\n                </Popover.Content>\n            </Popover>\n        }\n    >\n        <FaExternalLinkAlt/>\n    </OverlayTrigger>\n};\n\nexport const NickingOligosBox = ({nicking}) => {\n    return <OverlayTrigger\n        placement=\"right\"\n        trigger=\"click\"\n        overlay={\n            <Popover id=\"nickingOligosTooltip\">\n                <Popover.Title>Oligos</Popover.Title>\n                <Popover.Content>\n                    <Row>\n                        <dt className=\"col-sm-3\">Top</dt>\n                        <dl className=\"col-sm-9\">{nicking && nicking.top}</dl>\n                        <dt className=\"col-sm-3\">Bottom</dt>\n                        <dl className=\"col-sm-9\">{nicking && nicking.bottom}</dl>\n                    </Row>\n                </Popover.Content>\n            </Popover>\n        }\n    >\n        <FaExternalLinkAlt/>\n    </OverlayTrigger>\n};\nexport const ExtensionOligosBox = ({extension}) => {\n    return <OverlayTrigger\n        placement=\"right\"\n        trigger=\"click\"\n        overlay={\n            <Popover id=\"nickingOligosTooltip\">\n                <Popover.Title>Oligos</Popover.Title>\n                <Popover.Content>\n                    <Row>\n                        <dt className=\"col-sm-3\">Top</dt>\n                        <dl className=\"col-sm-9\">{extension.oligos && extension.oligos.top}</dl>\n                        <dt className=\"col-sm-3\">Bottom</dt>\n                        <dl className=\"col-sm-9\">{extension.oligos && extension.oligos.bottom}</dl>\n                    </Row>\n                </Popover.Content>\n            </Popover>\n        }\n    >\n        <FaExternalLinkAlt/>\n    </OverlayTrigger>\n};","import React from 'react';\n\nexport default ({edit, editOptions}) => (\n    <React.Fragment>\n        <dl className=\"row\">\n        <dt className=\"col-sm-6\">Edit</dt>\n        <dd className=\"col-sm-6\">{edit && edit.replace(/([A-Z])/g, \" $1\")}</dd>\n            {editOptions.split(',').map(ed => {\n                let par = ed.split('=');\n                return <React.Fragment key={ed}>\n                    <dt className=\"col-sm-6\">{par[0]}</dt>\n                    <dd className=\"col-sm-6\">{par[1]}</dd>\n                    <br/>\n                </React.Fragment>\n            })\n            }\n        </dl>\n    </React.Fragment>\n)","import React from \"react\";\n\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { FaRegQuestionCircle } from 'react-icons/fa';\n\nimport Loading from 'view/Loading';\nimport Link from \"redux-first-router-link\";\n\nconst offTargetFormatter = (cell) => (\n    cell ? cell[0].join(',') : <Loading size={3} count={15} style={{verticalAlign: 'bottom'}}/>\n);\n\nconst primerFormatter = (cell, status) => {\n    return ['Queued', 'Finding pegRNAs', 'Queued for specificity check', 'Checking primer specificity'].includes(status) ? <Loading size={3} count={15} style={{verticalAlign: 'bottom'}}/> : cell.length\n};\n\nconst onTargetFormatter = cell => (\n    Math.round( cell * 1000 + Number.EPSILON ) / 1000\n);\n\nconst strandFormatter = cell => (\n    cell === 1 ? '+' : '-'\n);\n\nconst spacerURL = (route, cell) => (\n    <Link to={route}>{cell.toUpperCase()}</Link>\n);\n\nconst Header = (column, tooltip) => (\n    <React.Fragment>{column.text} <br/><OverlayTrigger\n        placement=\"top\"\n        overlay={\n            <Popover>\n                <Popover.Content>{tooltip}</Popover.Content>\n            </Popover>\n        }\n    >\n        <FaRegQuestionCircle/>\n    </OverlayTrigger>\n    </React.Fragment>\n);\n\nexport { Header, onTargetFormatter, offTargetFormatter, spacerURL, strandFormatter, primerFormatter }","import { findMismatches } from \"seqvizcustom/utils/bindingSites\";\nimport { reverseComplement } from \"seqvizcustom/utils/parser\";\n\nexport const pegRNASpacerPosition = (pegRNA, sequence, offset=0) => {\n    let start, end, mismatches;\n    start = pegRNA.position;\n    if (pegRNA.strand === -1) {\n        start -= (pegRNA.visualSpacer.length - 1);\n    }\n    start += offset;\n    end = start + pegRNA.visualSpacer.length;\n\n    if(pegRNA.strand === 1){\n        mismatches = findMismatches(sequence.substring(start, end), pegRNA.visualSpacer).mismatches;\n    } else {\n        mismatches = findMismatches(reverseComplement(sequence.substring(start, end)), pegRNA.visualSpacer).mismatches;\n    }\n\n    return { start, end, mismatches }\n};\n\nexport const pegRNAExtensionPosition = (pegRNA, sequence, offset=0) => {\n    let start, end, mismatches;\n    if(pegRNA.strand === 1){\n        start = pegRNA.position + (pegRNA.visualSpacer.length - 3) - pegRNA.pbsLength;\n        start -= (pegRNA.visualSpacer.match(/-/g) || []).length;\n\n    } else {\n        start = pegRNA.position - (pegRNA.visualSpacer.length - 3) - pegRNA.rtTemplateLength + pegRNA.extension.length - pegRNA.visualExtension.length + 1;\n        start += (pegRNA.visualSpacer.match(/-/g) || []).length;\n\n    }\n    start += offset;\n    end = start + pegRNA.visualExtension.length;\n\n    if(pegRNA.strand === 1){\n        mismatches = findMismatches(reverseComplement(sequence.substring(start, end)), pegRNA.visualExtension).mismatches;\n    } else {\n        mismatches = findMismatches(sequence.substring(start, end), pegRNA.visualExtension).mismatches;\n    }\n\n    return { start, end, mismatches}\n};\n\nexport const nickingGRNASpacerPosition = (pegRNA, nickingRNA, sequence, offset=0) => {\n    let start, end, mismatches=[];\n\n    if(pegRNA.strand === 1){\n        start = pegRNA.position + (nickingRNA.position - 3) + (pegRNA.visualSpacer.length - 3);\n        start += nickingRNA.push\n    } else {\n        start = pegRNA.position - (pegRNA.visualSpacer.length - 1) + 3;\n\n        start += -nickingRNA.position - nickingRNA.offset;\n        start += nickingRNA.push + (pegRNA.visualSpacer.match(/-/g) || []).length;\n    }\n\n    start += offset;\n    end = start + nickingRNA.visualSpacer.length;\n\n    if(pegRNA.strand === 1){\n        mismatches = findMismatches(reverseComplement(sequence.substring(start, end)), nickingRNA.visualSpacer).mismatches;\n    } else {\n        mismatches = findMismatches(sequence.substring(start, end), nickingRNA.visualSpacer).mismatches;\n    }\n\n    return { start, end, mismatches}\n};","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {Container, Row, Col, Card, Nav, Form, Button, ButtonGroup } from 'react-bootstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport { SeqViz } from 'seqvizcustom/viewer';\nimport { COLORS } from \"seqvizcustom/utils/colors\";\n\nimport { routePegRNADetail, routeJobDetail, routeJobSummary } from 'state/routes';\nimport OrganismBox from \"view/Shared/OrganismBox\";\nimport SequenceBox from \"view/Shared/SequenceBox\";\nimport JobStatusBox from \"./components/JobStatusBox\";\nimport { OligosBox } from \"./components/OligosBox\";\nimport EditBox from \"./components/EditBox\";\n\nimport { LoadingCard } from 'view/Loading';\n\nimport { IconContext } from \"react-icons\";\nimport { FaRegCheckCircle, FaRegTimesCircle, FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport { Header, onTargetFormatter, offTargetFormatter, spacerURL, strandFormatter } from './components/formatters'\nimport { pegRNASpacerPosition, pegRNAExtensionPosition } from \"./functions/positionCalculations\";\n\nexport class Job extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'pegRNAs',\n        }\n    }\n\n    render() {\n\n        const { jobId, pegRNAs, organism, edits=[], edit, status='Loading', queuePosition, editOptions, sequenceType,\n                sequenceObject, warning, minPos, primers, routeJobDetail, routeJobSummary,\n                chosenEdit, visualSequence, translations } = this.props;\n        const { annotations } = sequenceObject;\n        const { selectedTab } = this.state;\n        const chosenEditIndex = edits.map((e, i) => 'edit' + i).indexOf(chosenEdit);\n\n        const pegRNAColumns = [{\n            dataField: 'spacer',\n            text: 'Spacer',\n            formatter: (cell ) => spacerURL(routePegRNADetail(jobId, chosenEdit, cell), cell),\n            headerFormatter: (column) => Header(column, 'Sequence of the sgRNA spacer'),\n        }, {\n            dataField: 'distance',\n            text: 'Distance',\n            headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n        }, {\n            dataField: 'pamDisrupted',\n            text: 'PAM disrupted',\n            headerFormatter: (column) => Header(column, 'Whether the pegRNA PAM will be disrupted by the edit'),\n            formatter: (cell, row) => (\n                cell ? <IconContext.Provider value={{ className: \"text-success\" }}><FaRegCheckCircle /></IconContext.Provider>\n                : (row.pamSilenced ? <IconContext.Provider value={{ className: \"text-warning\" }}><FaRegCheckCircle /></IconContext.Provider>\n                : <IconContext.Provider value={{ className: \"text-danger\" }}><FaRegTimesCircle /></IconContext.Provider> ))\n        }, {\n            dataField: 'oligos',\n            isDummyField: true,\n            text: 'Oligos',\n            headerFormatter: (column) => Header(column, 'Oligos for recommended design'),\n            formatter: (cell, row) => <OligosBox pegRNA={row} />\n        }, {\n            dataField: 'strand',\n            text: 'Strand',\n            formatter: strandFormatter,\n            headerFormatter: (column) => Header(column, 'Spacer strand, relative to target sequence'),\n        }, {\n            dataField: 'pbsLength',\n            text: 'PBS length',\n            headerFormatter: (column) => Header(column, 'Length of the pegRNA primer binding site'),\n        }, {\n            dataField: 'rtTemplateLength',\n            text: 'RTT length',\n            headerFormatter: (column) => Header(column, 'Length of the pegRNA reverse transcriptase template'),\n        }, {\n            dataField: 'score',\n            text: 'On Target Score',\n            formatter: onTargetFormatter,\n            headerFormatter: (column) => Header(column, 'Score based on Doench et. al, 2016'),\n        }, {\n            dataField: 'offtargets',\n            text: 'Targets',\n            formatter: offTargetFormatter,\n            headerFormatter: (column) => Header(column, 'Potential Targets with [0,1,2,3] mismatches. Also includes on target if present in the genome.'),\n        },\n        ];\n\n        const primerColumns = [\n            {\n                dataField: 'primers.LEFT.SEQUENCE',\n                text: 'Left primer',\n                //headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n            }, {\n                dataField: 'primers.LEFT.TM',\n                text: 'Left primer TM',\n                //headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n            }, {\n                dataField: 'primers.RIGHT.SEQUENCE',\n                text: 'Right primer',\n                //headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n            }, {\n                dataField: 'primers.RIGHT.TM',\n                text: 'Right primer TM',\n                //headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n            }, {\n                dataField: 'primers.PAIR.PRODUCT_SIZE',\n                text: 'Product size',\n                //headerFormatter: (column) => Header(column, 'Distance between Cas9 nicking site and mutation'),\n            }, {\n                dataField: 'productCount',\n                text: 'Products',\n                //formatter: (cell) => primerFormatter(cell, status),\n            }\n        ];\n\n        let seqvizPegRNAs = [];\n\n        pegRNAs.forEach((pegRNA, i) => {\n            seqvizPegRNAs.push({\n                primerName: `SPACER ${i+1}`,\n                id: `SPACER ${i+1}`,\n                seq: pegRNA.visualSpacer,\n                color: COLORS[i%12],\n                direction: pegRNA.strand,\n                //start: pegRNA.position,\n                //end: pegRNA.position + pegRNA.visualSpacer.length,\n                ...pegRNASpacerPosition(pegRNA, visualSequence),\n            });\n\n            seqvizPegRNAs.push({\n                primerName: `EXTENSION ${i+1}`,\n                id: `EXTENSION ${i+1}`,\n                seq: pegRNA.visualExtension,\n                color: COLORS[i%12],\n                direction: -pegRNA.strand,\n                ...pegRNAExtensionPosition(pegRNA, visualSequence),\n            });\n        });\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <Button variant=\"outline-dark\" onClick={() => routeJobSummary(jobId)}>\n                            <FaArrowLeft />Back to edit list\n                        </Button>\n                    </Col>\n                    <Col md={6}>\n                        <Form.Control\n                            as=\"select\"\n                            custom\n                            onChange={(e) => routeJobDetail(jobId, e.target.value)}\n                            value={chosenEdit}\n                        >\n                            {edits.map((e, i) => <option value={'edit' + i} key={i}>{e.sequenceType === 'custom' ? e.sequence.split(',')[0] : e.sequence} {e.edit} {e.options}</option>)}\n                        </Form.Control>\n                    </Col>\n                    <Col md={3}>\n                        <ButtonGroup style={{float: 'right'}}>\n                        <Button variant=\"outline-dark\" onClick={ () => routeJobDetail(jobId, 'edit' + (chosenEditIndex - 1)) } disabled={ chosenEditIndex === 0 }>\n                            <FaArrowLeft/>Prev\n                        </Button>\n                        <Button variant=\"outline-dark\" onClick={ () => routeJobDetail(jobId, 'edit' + (chosenEditIndex + 1)) } disabled={ chosenEditIndex === edits.length - 1 }>\n                            <FaArrowRight/>Next\n                        </Button>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                        <Card body>\n                            <Row>\n                                <Col>\n                                    <OrganismBox organism={organism} />\n                                    <br />\n                                    <SequenceBox baseURL={organism.sequenceSearch} sequenceType={sequenceType} sequenceObject={sequenceObject} />\n                                </Col>\n                                <Col style={{borderLeft: '1px solid rgba(0,0,0,.1)'}}>\n                                    <JobStatusBox jobId={jobId} jobStatus={status} warning={warning} queuePosition={queuePosition}/>\n                                </Col>\n                                <Col style={{borderLeft: '1px solid rgba(0,0,0,.1)'}}>\n                                    <EditBox edit={edit} editOptions={editOptions}/>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <hr/>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    { !['Loading'].includes(status) ? <SeqViz\n                                        name=\"jobSequence\"\n                                        seq={visualSequence}\n                                        annotations={annotations}\n                                        showAnnotations={false}\n                                        translations={translations}\n                                        primers={seqvizPegRNAs}\n                                        showPrimers={true}\n                                        style={{ height: \"45vh\", width: \"100%\", backgroundColor: \"#fff\", marginBottom: \"10px\" }}\n                                        viewer=\"linear\"\n                                        showComplement={false}\n                                        showIndex={true}\n                                        zoom={{ linear: 11 }}\n                                        upstream={-minPos}\n                                        //copyEvent={event => event.key === \"c\" && (event.metaKey || event.ctrlKey)}\n                                        //findBindingSites={true}\n                                    /> : <LoadingCard size={10} style={{ lineHeight: \"calc(45vh - 40px)\", height: \"45vh\" }}/>}\n                                </Col>\n                            </Row>\n                        </Card>\n                        <Nav variant=\"tabs\" activeKey={selectedTab} onSelect={(k) => this.setState({selectedTab: k})} fill>\n                            <Nav.Item>\n                                <Nav.Link eventKey='pegRNAs'>pegRNAs</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey='primers'>Sequencing primers</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <Card>\n                            <Row>\n                                <Col>\n                                    {selectedTab === 'pegRNAs' ? <BootstrapTable\n                                        keyField='idx'\n                                        bootstrap4={true}\n                                        bordered={false}\n                                        data={pegRNAs.map((p, i) => ({...p, idx: i}))}\n                                        columns={pegRNAColumns}\n                                        striped\n                                        hover\n                                    /> : <BootstrapTable\n                                        keyField='id'\n                                        bootstrap4={true}\n                                        bordered={false}\n                                        data={primers}\n                                        columns={primerColumns}\n                                        striped\n                                        hover\n                                        />\n                                    }\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    let { jobId, organism, edits, status } = state.job.summary;\n    organism = organism ? organism : {name: undefined, assembly: undefined, source: undefined };\n    let { pegRNAs=[], primers=[], edit, queuePosition, warning, options='', sequenceType, start, nickingOffset, visualSequence, translations=[] } = state.job.detail;\n\n    let {sequenceObject = {id: 'undefined', name: 'undefined', source: 'undefined', sequence: ''}} = state.job.detail;\n\n    return {\n        organism,\n        jobId,\n        pegRNAs,\n        edit,\n        status,\n        warning,\n        editOptions: options || '',\n        sequenceObject,\n        visualSequence,\n        translations: translations.map(t => ({...t, direction: 1})),\n        sequenceType,\n        primers,\n        queuePosition,\n        edits,\n        minPos: start + nickingOffset,\n        chosenEdit: state.location.payload.edit,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        routeJobDetail: (jobId, idx) => dispatch(routeJobDetail(jobId, idx)),\n        routeJobSummary: (jobId) => dispatch(routeJobSummary(jobId)),\n    }\n};\n\nexport const ConnectedJob = connect(mapStateToProps, mapDispatchToProps)(Job);","import React from \"react\";\n\nimport { ExtensionOligosBox } from \"./OligosBox\";\nimport { Header } from \"./formatters\";\n\nexport const offTargetColumns = [{\n    dataField: 'off target site',\n    text: 'Target Site',\n    headerFormatter: (column) => Header(column, 'Target site sequence. Mismatches in lowercase'),\n}, {\n    dataField: 'mismatches',\n    text: 'Mismatches',\n    headerFormatter: (column) => Header(column, 'Number of mismatches'),\n}, {\n    dataField: 'chr',\n    text: 'Chromosome',\n    headerFormatter: (column) => Header(column, 'Chromosome (or contig) of detected target site'),\n}, {\n    dataField: 'position',\n    text: 'position',\n    headerFormatter: (column) => Header(column, 'Position of the target site'),\n}, {\n    dataField: 'pam',\n    text: 'PAM',\n    headerFormatter: (column) => Header(column, 'Target site PAM'),\n},\n];\n\nexport const alternateColumns = [{\n    dataField: 'sequence',\n    text: 'Sequence',\n    headerFormatter: (column) => Header(column, 'Extension sequence'),\n}, {\n    dataField: 'oligos',\n    dummyField: true,\n    text: 'Oligos',\n    formatter: (cell, row) => <ExtensionOligosBox extension={row} />,\n    headerFormatter: (column) => Header(column, 'Oligos for cloning nicking extension sequence.'),\n},\n{\n    dataField: 'pbsLength',\n    text: 'PBS length',\n    headerFormatter: (column) => Header(column, 'Length of the primer binding site'),\n}, {\n    dataField: 'pbsGc',\n    text: 'PBS GC',\n    headerFormatter: (column) => Header(column, 'GC content of the primer binding site'),\n}, {\n    dataField: 'rtTemplateLength',\n    text: 'RTT length',\n    headerFormatter: (column) => Header(column, 'Length of the reverse transcriptase template'),\n}, {\n    dataField: 'rtGc',\n    text: 'RTT GC',\n    headerFormatter: (column) => Header(column, 'GC content of the reverse transcriptase template'),\n}\n];\n","import React from \"react\";\nimport { dnaComplement } from \"seqvizcustom/utils/parser\";\n\nconst reverse = (seq) => (seq.split(\"\")\n    .reverse()\n    .join(\"\")\n);\n\nconst splitAt = (x, index) => [x.slice(0, index), x.slice(index)];\n\nconst rtTemplateFragments = (rtTemplate) => {\n    //rtTemplate = 's'+rtTemplate;\n    let first5, loopfirst, flip, looplast, last5, rest = '';\n    [first5, rest] = splitAt(rtTemplate,5);\n    [rest, last5] = splitAt(rest, rest.length-5);\n    if (rest.length % 2 === 0) {\n        [loopfirst, rest] = splitAt(rest, Math.floor(rest.length / 2));\n        [flip, looplast] = splitAt(rest, 1)\n    } else {\n        [loopfirst, rest] = splitAt(rest, Math.floor(rest.length / 2));\n        [flip, looplast] = splitAt(rest, 2)\n    }\n    return [first5, loopfirst, flip, looplast, last5];\n};\n\nexport default ({spacer='', pbs='', rtTemplate=''}) => {\n    rtTemplate = rtTemplate.toUpperCase();\n    const [first5, loopfirst, flip, looplast, last5] = rtTemplateFragments(rtTemplate);\n    //pbs = 'ABCDEFGHIJKLMNOPQRSTUV'\n    const pbsLength = pbs.length;\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0\"\n        y=\"0\"\n        enableBackground=\"new 0 0 900 450\"\n        version=\"1.1\"\n        viewBox=\"0 0 900 450\"\n        xmlSpace=\"preserve\"\n    >\n        <path\n            d=\"M422.3 61.6c-8.4-6.8-17-.3-24.8-6.9-6.3-5.4-7.2-16.2-5.4-23.5C397.7 8.4 434-.4 453.4.1c5.5.1 9.7 1 13.3 2.3 9.2 3.2 17.1 9.5 22.6 18.1 6.9 10.8 9.6 24 10.1 36.7.6 17.1 0 18.2 1.4 31.6 3.2 31.8 15.5 40 9.9 49-5.3 8.5-17.4 3.1-57.1 7.4-24.4 2.7-28.7 5-48 5.4-14.9.3-30.1-1.7-42.1-11.2-7.1-5.6-11.6-13.3-11.7-21.6-.1-5.1 1.6-9 2.4-11 .3-.7 5.7-12.6 15.7-16 13.8-4.7 21.5 11.5 38.6 8.8 7.8-1.2 17.9-6.4 20.5-15.8 2.3-8.2-.8-17.4-6.7-22.2z\"\n            className=\"st0\"\n        />\n        <g className=\"st1\">\n            <path\n                d=\"M365.7 94.9c13.8-4.7 21.5 11.5 38.6 8.8 6-.9 13.3-4.2 17.6-9.9-4.1 3.1-9.1 5-13.4 5.7-17.1 2.7-24.8-13.5-38.6-8.8-4.4 1.5-7.9 4.6-10.5 7.8 1.8-1.5 3.9-2.8 6.3-3.6zM500.7 88.8c-1.4-13.4-.8-14.5-1.4-31.6-.4-12.7-3.2-25.9-10.1-36.7-5.5-8.6-13.3-15-22.6-18.1C463 1.2 458.8.3 453.3.1c-15.8-.4-43.1 5.5-55.5 20.1 13.6-11.6 37.1-16.3 51.3-16 5.5.1 9.7 1 13.3 2.3 9.2 3.2 17.1 9.5 22.6 18.1 6.9 10.8 9.6 24 10.1 36.7.6 17.1 0 18.2 1.4 31.6 3.1 30.9 14.8 39.5 10.3 48.3 1.6-.8 2.8-1.9 3.7-3.4 5.7-9-6.6-17.3-9.8-49z\"/>\n        </g>\n        <path\n            d=\"M262.5 259.5c34.7 15.5 59.5 11.6 91 17.2 25.2 4.4 68.7 12.1 92 43.5 22.3 30.1 7.8 57.4 38.1 88.1 6.5 6.6 17.9 17.7 34.7 19.6 24.6 2.7 44.3-16.1 52.6-24.2 15.7-15.2 22.1-31.6 26.2-42.1 8.5-21.7 9.3-40.4 9.7-51 .5-13.6-.7-24.7-1.8-34.5-1.8-16.6-4.6-28.9-5.4-32.3-2.3-9.8-4.7-20.4-10.1-33.1-7.5-17.8-16.7-30.1-20.1-34.5-20.6-26.4-45.5-38.5-58.9-44.9-5.2-2.5-25.3-11.7-53.6-16.2-25.2-4-44.5-2.1-67.2 0-19.1 1.8-32.4 4.5-54.6 9-27.6 5.6-41.4 8.8-52.1 13.9-9.1 4.3-52.4 24.9-56.8 62.7-.4 3.8-2 20.7 8.1 36.6 7.7 12 18.9 18 28.2 22.2z\"\n            className=\"st2\"\n        />\n        <path\n            d=\"M605 275.9c-1.8-16.6-4.6-28.9-5.4-32.3-2.3-9.8-4.7-20.4-10.1-33.1-7.5-17.8-16.7-30.1-20.1-34.5-20.6-26.4-45.5-38.5-58.9-44.9-5.2-2.5-25.3-11.7-53.6-16.2-25.2-4-44.5-2.1-67.2 0-19.1 1.8-32.4 4.5-54.6 9-27.6 5.6-41.4 8.8-52.1 13.9-5.8 2.8-25.4 12.1-40 28.2 13.5-12.3 28.8-19.6 33.8-22 10.7-5.1 24.5-8.3 52.1-13.9 22.3-4.5 35.5-7.2 54.6-9 22.7-2.1 42-4 67.2 0 28.3 4.4 48.4 13.7 53.6 16.2 13.4 6.4 38.3 18.6 58.9 44.9 3.5 4.4 12.6 16.7 20.1 34.5 5.3 12.7 7.8 23.2 10.1 33.1.8 3.5 3.6 15.7 5.4 32.3 1.1 9.8 2.3 20.9 1.8 34.5-.4 10.6-1.2 29.4-9.7 51-3.8 9.6-9.5 24.1-22.5 38.2.9-.9 1.7-1.7 2.5-2.4 15.7-15.2 22.1-31.6 26.2-42.1 8.5-21.7 9.3-40.4 9.7-51 .5-13.5-.7-24.6-1.8-34.4z\"\n            className=\"st1\"\n        />\n        <g>\n            <path d=\"M474.4 301.6c1.7.4 3.3 1.1 4.7 2.1\" className=\"st3\"/>\n            <path d=\"M481.7 291.4L476.9 302.4\" className=\"st4\"/>\n            <path d=\"M479.2 303.7c1.5 1 2.8 2.3 4 3.8\" className=\"st3\"/>\n            <path d=\"M489.5 296.7L481.3 305.4\" className=\"st4\"/>\n            <path\n                d=\"M483.2 307.5c.6.8 1.1 1.5 1.7 2.5l1.9 3\"\n                className=\"st3\"\n            />\n            <path d=\"M495 303.4L484.9 309.9\" className=\"st4\"/>\n            <path d=\"M486.8 312.9L490.7 318.8\" className=\"st3\"/>\n            <path d=\"M498.8 309.3L488.8 315.9\" className=\"st4\"/>\n            <path d=\"M490.7 318.8L494.6 324.7\" className=\"st3\"/>\n            <path d=\"M502.7 315.2L492.7 321.8\" className=\"st4\"/>\n            <path d=\"M494.6 324.7L498.6 330.6\" className=\"st3\"/>\n            <path d=\"M506.6 321L496.6 327.7\" className=\"st4\"/>\n            <path d=\"M498.6 330.6L502.6 336.5\" className=\"st3\"/>\n            <path d=\"M510.5 326.8L500.6 333.6\" className=\"st4\"/>\n            <path d=\"M502.6 336.5L506.6 342.3\" className=\"st3\"/>\n            <path d=\"M514.5 332.6L504.6 339.4\" className=\"st4\"/>\n            <path d=\"M506.6 342.3L510.7 348.1\" className=\"st3\"/>\n            <path d=\"M518.5 338.4L508.6 345.2\" className=\"st4\"/>\n            <path d=\"M510.7 348.1L514.7 353.9\" className=\"st3\"/>\n            <path d=\"M522.5 344.1L512.7 351\" className=\"st4\"/>\n            <path d=\"M514.7 353.9c1.3 1.9 2.7 3.8 3.9 5.7\" className=\"st3\"/>\n            <path d=\"M526.6 350L516.7 356.8\" className=\"st4\"/>\n            <path d=\"M518.6 359.6c1.4 2 2.1 3.2 2.6 5\" className=\"st3\"/>\n            <path d=\"M530.8 356.6L520.2 362.2\" className=\"st4\"/>\n            <path d=\"M521.2 364.6c.5 1.7.7 3.3.7 5.3\" className=\"st3\"/>\n            <path d=\"M533.7 365.7L521.7 367.1\" className=\"st4\"/>\n            <path d=\"M521.8 369.9c0 2-.4 4.5-.3 7.3\" className=\"st3\"/>\n            <path d=\"M533.6 374L521.7 373.3\" className=\"st4\"/>\n            <path\n                d=\"M521.6 377.3c0 1.4.2 2.9.5 4.4.2.7.3 1.5.6 2.2.2.7.4 1.4.7 2.1\"\n                className=\"st3\"\n            />\n            <path d=\"M533.8 379.2L522.1 381.6\" className=\"st4\"/>\n            <path d=\"M523.4 385.9c1.2 2.8 2.7 5.2 4.5 7.3\" className=\"st3\"/>\n            <path d=\"M535.6 383.5L525.4 389.8\" className=\"st4\"/>\n            <path d=\"M527.9 393.2c1.8 2.2 3.9 4.1 6.2 5.7\" className=\"st3\"/>\n            <path d=\"M538.9 387.4L530.8 396.3\" className=\"st4\"/>\n            <path d=\"M534 398.9c2.3 1.6 4.8 2.9 7.5 3.8\" className=\"st3\"/>\n            <path d=\"M543.1 390.4L537.7 401.1\" className=\"st4\"/>\n            <path d=\"M541.6 402.7c2.7.9 5.6 1.5 8.5 1.5\" className=\"st3\"/>\n            <path d=\"M547.8 392L545.7 403.8\" className=\"st4\"/>\n            <path d=\"M550 404.2c2.9 0 5.9-.4 8.8-1.5\" className=\"st3\"/>\n            <path d=\"M552.5 392.1L554.5 403.9\" className=\"st4\"/>\n            <path d=\"M558.8 402.8c2.8-1.1 5.4-2.7 7.6-4.7\" className=\"st3\"/>\n            <path d=\"M556.5 390.5L562.9 400.7\" className=\"st4\"/>\n            <path d=\"M566.4 398.1c2.2-2 4-4.3 5.4-6.8\" className=\"st3\"/>\n            <path d=\"M559.9 387.5L569.4 394.8\" className=\"st4\"/>\n            <path d=\"M571.8 391.3c1.4-2.5 2.4-5.1 3.1-7.9\" className=\"st3\"/>\n            <path d=\"M562.4 383.1L573.6 387.4\" className=\"st4\"/>\n            <path d=\"M574.8 383.4c.7-2.7 1-5.6.8-8.4\" className=\"st3\"/>\n            <path d=\"M563.6 378.1L575.5 379.3\" className=\"st4\"/>\n            <path d=\"M575.6 375c-.1-2.9-.7-5.8-1.8-8.5\" className=\"st3\"/>\n            <path d=\"M563.4 373.2L575.1 370.7\" className=\"st4\"/>\n            <path d=\"M573.9 366.5c-1-2.7-2.5-5.2-4.2-7.4\" className=\"st3\"/>\n            <path d=\"M561.6 368.6L572 362.7\" className=\"st4\"/>\n            <path d=\"M569.6 359.1c-1.8-2.2-3.8-4.2-6.1-5.8\" className=\"st3\"/>\n            <path d=\"M558.5 364.7L566.8 356\" className=\"st4\"/>\n            <path d=\"M563.5 353.3c-2.3-1.7-4.8-3-7.5-3.9\" className=\"st3\"/>\n            <path d=\"M554.3 361.7L559.9 351.1\" className=\"st4\"/>\n            <path d=\"M556 349.4c-2.7-.9-5.5-1.5-8.4-1.6\" className=\"st3\"/>\n            <path d=\"M549.6 360L551.9 348.2\" className=\"st4\"/>\n            <path\n                d=\"M547.6 347.7c-1.4-.1-2.6 0-3.6 0s-1.7-.1-2.2-.2\"\n                className=\"st3\"\n            />\n            <path d=\"M543.8 359.7L544 347.7\" className=\"st4\"/>\n            <path\n                d=\"M541.8 347.5c-.1 0-.1 0-.2-.1l-.1-.1-.2-.1c-.3-.2-.7-.4-1-.6-.3-.2-.6-.5-.9-.7-.3-.2-.5-.5-.7-.8\"\n                className=\"st3\"\n            />\n            <path d=\"M533.2 356.3L540.3 346.6\" className=\"st4\"/>\n            <path\n                d=\"M538.7 345.1c-.2-.3-.6-.7-.9-1.2-.3-.4-.6-.9-1-1.4l-2-2.8\"\n                className=\"st3\"\n            />\n            <path d=\"M527 349.4L536.8 342.5\" className=\"st4\"/>\n            <path d=\"M534.8 339.7L530.9 333.9\" className=\"st3\"/>\n            <path d=\"M522.9 343.5L532.9 336.8\" className=\"st4\"/>\n            <path d=\"M530.9 333.9L527.1 328\" className=\"st3\"/>\n            <path d=\"M519 337.6L529 331\" className=\"st4\"/>\n            <path d=\"M527.1 328L523.2 322.1\" className=\"st3\"/>\n            <path d=\"M515.1 331.6L525.1 325.1\" className=\"st4\"/>\n            <path d=\"M523.2 322.1L519.4 316.2\" className=\"st3\"/>\n            <path d=\"M511.2 325.7L521.3 319.2\" className=\"st4\"/>\n            <path d=\"M519.4 316.2L515.6 310.3\" className=\"st3\"/>\n            <path d=\"M507.4 319.7L517.5 313.2\" className=\"st4\"/>\n            <path d=\"M515.6 310.3L511.8 304.3\" className=\"st3\"/>\n            <path d=\"M503.6 313.8L513.7 307.3\" className=\"st4\"/>\n            <path d=\"M511.8 304.3L508 298.4\" className=\"st3\"/>\n            <path d=\"M499.8 307.8L509.9 301.4\" className=\"st4\"/>\n            <path d=\"M508 298.4L504.2 292.4\" className=\"st3\"/>\n            <path d=\"M496 301.8L506.1 295.4\" className=\"st4\"/>\n            <path d=\"M504.2 292.4L500.5 286.5\" className=\"st3\"/>\n            <path d=\"M492.2 295.9L502.3 289.5\" className=\"st4\"/>\n            <path d=\"M500.5 286.5L496.7 280.5\" className=\"st3\"/>\n            <path d=\"M488.4 289.9L498.6 283.5\" className=\"st4\"/>\n            <path d=\"M496.7 280.5L492.9 274.5\" className=\"st3\"/>\n            <path d=\"M484.7 283.9L494.8 277.5\" className=\"st4\"/>\n            <path d=\"M492.9 274.5L489.2 268.6\" className=\"st3\"/>\n            <path d=\"M480.9 277.9L491 271.6\" className=\"st4\"/>\n            <path\n                d=\"M489.2 268.6l-1.9-3c-.6-1-1.3-2-1.8-2.9\"\n                className=\"st3\"\n            />\n            <path d=\"M477.1 272L487.3 265.6\" className=\"st4\"/>\n            <path d=\"M485.5 262.7c-1.1-1.8-2.1-3.8-3-5.8\" className=\"st3\"/>\n            <path d=\"M473.3 265.4L483.9 259.9\" className=\"st4\"/>\n            <path d=\"M482.5 256.9c-.9-2-1.8-4.1-2.6-6.1\" className=\"st3\"/>\n            <path d=\"M470.1 258.4L481.2 253.8\" className=\"st4\"/>\n            <path d=\"M479.9 250.7c-.8-2.1-1.4-4.2-2-6.3\" className=\"st3\"/>\n            <path d=\"M467.4 251.3L478.9 247.6\" className=\"st4\"/>\n            <path d=\"M477.9 244.4c-.6-2.1-1.1-4.3-1.5-6.4\" className=\"st3\"/>\n            <path d=\"M465.4 243.9L477.1 241.2\" className=\"st4\"/>\n            <path d=\"M476.4 238c-.4-2.2-.7-4.3-.9-6.5\" className=\"st3\"/>\n            <path d=\"M464 236.4L475.9 234.7\" className=\"st4\"/>\n            <path d=\"M475.5 231.5c-.2-2.2-.3-4.4-.2-6.5\" className=\"st3\"/>\n            <path d=\"M463.3 228.7L475.3 228.2\" className=\"st4\"/>\n            <path d=\"M475.3 224.9c0-2.2.2-4.3.4-6.5\" className=\"st3\"/>\n            <path d=\"M463.4 220.9L475.4 221.7\" className=\"st4\"/>\n            <path\n                d=\"M475.7 218.5c.2-1.1.3-2.1.5-3.2s.4-2.1.7-3.2\"\n                className=\"st3\"\n            />\n            <path d=\"M464.4 213.1L476.2 215.3\" className=\"st4\"/>\n            <path\n                d=\"M476.9 212.1c.3-1 .5-2.1.9-3.1l.5-1.5.6-1.5\"\n                className=\"st3\"\n            />\n            <path d=\"M466.3 205.4L477.8 209\" className=\"st4\"/>\n            <path d=\"M478.8 205.9l1.2-3c.4-1 .9-1.9 1.4-2.9\" className=\"st3\"/>\n            <path d=\"M469.1 198.1L480 203\" className=\"st4\"/>\n            <path\n                d=\"M481.4 200.1c.5-1 1.1-1.9 1.6-2.8.5-.9 1.2-1.8 1.7-2.7\"\n                className=\"st3\"\n            />\n            <path d=\"M472.7 191.1L483 197.2\" className=\"st4\"/>\n            <path d=\"M484.7 194.5c1.2-1.8 2.5-3.5 4-5.1\" className=\"st3\"/>\n            <path d=\"M477.2 184.6L486.6 191.9\" className=\"st4\"/>\n            <path d=\"M488.7 189.4c1.4-1.6 2.9-3.2 4.5-4.7\" className=\"st3\"/>\n            <path d=\"M482.3 178.7L490.9 187\" className=\"st4\"/>\n            <path d=\"M493.2 184.7c1.6-1.5 3.3-2.9 5-4.3\" className=\"st3\"/>\n            <path d=\"M487.9 173.4L495.7 182.5\" className=\"st4\"/>\n            <path d=\"M498.3 180.5c1.7-1.4 3.6-2.6 5.5-3.9\" className=\"st3\"/>\n            <path d=\"M494 168.7L500.9 178.5\" className=\"st4\"/>\n            <path d=\"M503.7 176.6L509.6 172.7\" className=\"st3\"/>\n            <path d=\"M500.1 164.6L506.6 174.7\" className=\"st4\"/>\n            <g>\n                <path d=\"M509.6 172.7L515.5 168.8\" className=\"st3\"/>\n                <path d=\"M506 160.8L512.6 170.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M515.5 168.8L521.4 164.9\" className=\"st3\"/>\n                <path d=\"M511.8 156.9L518.5 166.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M521.4 164.9L527.3 161\" className=\"st3\"/>\n                <path d=\"M517.7 153L524.4 163\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M527.3 161L533.2 157\" className=\"st3\"/>\n                <path d=\"M523.5 149.1L530.2 159\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M533.2 157L539 153\" className=\"st3\"/>\n                <path d=\"M529.3 145.1L536.1 155\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M539 153L544.8 149\" className=\"st3\"/>\n                <path d=\"M535.1 141.1L541.9 151\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M544.8 149L550.7 145\" className=\"st3\"/>\n                <path d=\"M540.9 137.1L547.8 147\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M550.6 145L556.5 140.9\" className=\"st3\"/>\n                <path d=\"M546.7 133.1L553.6 143\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M556.5 140.9L562.2 136.9\" className=\"st3\"/>\n                <path d=\"M552.5 129.1L559.4 138.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M562.2 136.9L568 132.8\" className=\"st3\"/>\n                <path d=\"M558.2 125L565.1 134.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M568 132.8L573.8 128.7\" className=\"st3\"/>\n                <path d=\"M564 121L570.9 130.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M573.8 128.7L579.6 124.7\" className=\"st3\"/>\n                <path d=\"M569.7 116.9L576.7 126.7\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M579.6 124.7L585.3 120.6\" className=\"st3\"/>\n                <path d=\"M575.5 112.8L582.5 122.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M585.3 120.6L591.1 116.5\" className=\"st3\"/>\n                <path d=\"M581.2 108.7L588.2 118.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M591.1 116.5L596.8 112.3\" className=\"st3\"/>\n                <path d=\"M587 104.6L594 114.4\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M596.8 112.3L602.6 108.2\" className=\"st3\"/>\n                <path d=\"M592.7 100.5L599.7 110.3\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M602.6 108.2L608.3 104.1\" className=\"st3\"/>\n                <path d=\"M598.4 96.4L605.4 106.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M608.3 104.1L614 100\" className=\"st3\"/>\n                <path d=\"M604.1 92.3L611.2 102\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M614 100L619.7 95.8\" className=\"st3\"/>\n                <path d=\"M609.9 88.2L616.9 97.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M619.7 95.8L625.4 91.7\" className=\"st3\"/>\n                <path d=\"M615.6 84L622.6 93.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M625.4 91.7l1.4-1c.2-.2.3-.2.5-.3.2-.1.4-.3.6-.4.8-.5 1.7-.9 2.5-1.3\"\n                    className=\"st3\"\n                />\n                <path d=\"M622 79.6L628 90\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M630.5 88.7c1.7-.7 3.5-1.1 5.3-1.2\" className=\"st3\"/>\n                <path d=\"M630.4 76.2L633.1 87.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M635.8 87.5c.9-.1 1.7 0 2.6.1.9.1 1.7.3 3.1.6\"\n                    className=\"st3\"\n                />\n                <path d=\"M639.8 75.7L638.3 87.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M641.4 88.2c.7.2 1.6.3 2.4.3.4 0 .8.1 1.2.1l1.2-.1c.8 0 1.5-.1 2.3-.2.8-.1 1.5-.3 2.2-.5\"\n                    className=\"st3\"\n                />\n                <path d=\"M645.6 76.5L646.2 88.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M650.7 87.8c2.8-.7 5.4-1.9 7.8-3.3\" className=\"st3\"/>\n                <path d=\"M650 75.4L654.7 86.4\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M658.5 84.5c2.4-1.4 4.6-3.2 6.6-5.1\" className=\"st3\"/>\n                <path d=\"M654.5 72.7L661.9 82.1\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M665 79.4c2-1.9 3.7-4.3 5.1-6.7\" className=\"st3\"/>\n                <path d=\"M658.2 69L667.8 76.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M670.1 72.7c1.4-2.4 2.4-5.2 3.1-7.9\" className=\"st3\"/>\n                <path d=\"M660.7 64.5L671.9 68.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M673.2 64.8c.7-2.8.8-5.7.6-8.5\" className=\"st3\"/>\n                <path d=\"M661.8 59.6L673.8 60.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M673.8 56.3c-.2-2.8-.7-5.6-1.6-8.2\" className=\"st3\"/>\n                <path d=\"M661.5 54.5L673.2 52.1\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M672.1 48.1c-.9-2.6-2.1-5.1-3.7-7.5\" className=\"st3\"/>\n                <path d=\"M659.8 49.5L670.5 44.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M668.5 40.6c-1.5-2.3-3.4-4.5-5.5-6.3\" className=\"st3\"/>\n                <path d=\"M656.9 45.1L666 37.3\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M663 34.3c-2.1-1.9-4.5-3.5-7-4.7\" className=\"st3\"/>\n                <path d=\"M653 41.7L659.7 31.7\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M656 29.6c-2.6-1.2-5.3-2-8-2.5\" className=\"st3\"/>\n                <path d=\"M648.4 39.5L652 28.1\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M648 27.1c-2.7-.5-5.5-.6-8.3-.4\" className=\"st3\"/>\n                <path d=\"M643.3 38.6L643.8 26.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M639.7 26.7c-2.7.2-5.5.7-8.1 1.6\" className=\"st3\"/>\n                <path d=\"M637.9 39L635.6 27.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M631.6 28.3c-2.6.9-5.2 2-7.5 3.5\" className=\"st3\"/>\n                <path d=\"M632.8 40.6L627.7 29.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M624.1 31.8l-1.7 1.2c-.6.4-1.1.9-1.6 1.3-1.1.9-2.1 1.8-3 2.9\"\n                    className=\"st3\"\n                />\n                <path d=\"M628.4 43.4L620.7 34.3\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M617.6 37.2c-1.9 2.1-3.7 4.9-4.6 7.9\" className=\"st3\"/>\n                <path d=\"M625.3 47L615 40.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M613 45.1c-.5 1.5-.8 3-.9 4.5l-.3 3.6\"\n                    className=\"st3\"\n                />\n                <path d=\"M624.1 50.8L612.1 49.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M611.8 53.2c-.1 1.2-.2 2.4-.2 3.7l-.1 1.9v1.8\"\n                    className=\"st3\"\n                />\n                <path d=\"M623.6 57.5L611.6 56.9\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M611.5 60.6c0 1.9-.3 3.9-.8 5.8\" className=\"st3\"/>\n                <path d=\"M623.2 65.1L611.3 63.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M610.7 66.4c-.2 1-.5 2-.9 3-.2.5-.3 1-.5 1.5l-.3.8\"\n                    className=\"st3\"\n                />\n                <path d=\"M621.3 73.2L609.9 69.4\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M609 71.7c0 .2-.2.3-.3.4l-.9.8-2.7 2.2\"\n                    className=\"st3\"\n                />\n                <path d=\"M615.4 82.2L607.8 72.8\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M605.1 75.1L599.6 79.5\" className=\"st3\"/>\n                <path d=\"M609.9 86.6L602.3 77.3\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M599.6 79.5L594.1 84\" className=\"st3\"/>\n                <path d=\"M604.4 91.1L596.8 81.7\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M594.1 84L588.6 88.4\" className=\"st3\"/>\n                <path d=\"M598.9 95.5L591.4 86.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M588.6 88.4L583.1 92.8\" className=\"st3\"/>\n                <path d=\"M593.4 99.9L585.9 90.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M583.1 92.8L577.6 97.3\" className=\"st3\"/>\n                <path d=\"M587.9 104.4L580.4 95.1\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M577.6 97.3l-2.7 2.2-.1.1-.2.1c-.3.2-.6.4-.8.6l-1.5 1.1\"\n                    className=\"st3\"\n                />\n                <path d=\"M582.5 108.8L574.9 99.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M572.2 101.3L566.5 105.5\" className=\"st3\"/>\n                <path d=\"M576.4 113.1L569.4 103.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M566.5 105.5c-1.9 1.4-3.8 2.7-5.7 4\" className=\"st3\"/>\n                <path d=\"M570.6 117.3L563.7 107.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M560.9 109.5c-1.9 1.3-3.8 2.6-5.7 3.8\"\n                    className=\"st3\"\n                />\n                <path d=\"M564.7 121.5L558 111.5\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M555.1 113.4c-1.9 1.3-3.9 2.4-5.8 3.6\"\n                    className=\"st3\"\n                />\n                <path d=\"M558.5 125.4L552.2 115.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M549.3 117c-1 .5-2 1.2-2.9 1.6-1 .5-1.9 1-2.9 1.4\"\n                    className=\"st3\"\n                />\n                <path d=\"M552.1 129.2L546.4 118.6\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M543.5 120c-1 .4-1.9.9-2.9 1.2l-1.5.6-1.5.5\"\n                    className=\"st3\"\n                />\n                <path d=\"M544.8 132.5L540.6 121.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path\n                    d=\"M537.5 122.3c-1 .4-2.1.6-3.1.8-1 .2-2.1.5-3.2.6\"\n                    className=\"st3\"\n                />\n                <path d=\"M537.2 134.8L534.5 123.1\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M531.3 123.8c-2.1.4-4.3.6-6.5.8\" className=\"st3\"/>\n                <path d=\"M529.5 136.2L528.1 124.2\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M524.8 124.6c-2.2.1-4.4.2-6.6.1\" className=\"st3\"/>\n                <path d=\"M521.8 136.7L521.5 124.7\" className=\"st4\"/>\n            </g>\n            <g>\n                <path d=\"M518.2 124.7c-2.2 0-4.5-.2-6.9-.3\" className=\"st3\"/>\n                <path d=\"M514.2 136.5L514.8 124.6\" className=\"st4\"/>\n            </g>\n        </g>\n        <g>\n            <text className=\"st5 st6\" transform=\"translate(69.166 201.023)\">\n                5&apos;\n            </text>\n            <text className=\"st5 st6\" transform=\"translate(70.365 272.69)\">\n                3&apos;\n            </text>\n            <text className=\"st5 st7\" transform=\"translate(256.166 259.223)\">\n                {dnaComplement(spacer).compSeq}\n            </text>\n            <path d=\"M56.8 252.5L248.8 251.5\" className=\"st8\"/>\n            <path d=\"M55.8 213L247.8 212\" className=\"st8\"/>\n            <path d=\"M72.8 219L72.8 243\" className=\"st8\"/>\n            <path d=\"M237.8 219L237.8 243\" className=\"st8\"/>\n            <path d=\"M211.3 219L211.3 243\" className=\"st8\"/>\n            <path d=\"M89.3 219L89.3 243\" className=\"st8\"/>\n            <path d=\"M105.8 219L105.8 243\" className=\"st8\"/>\n            <path d=\"M124.3 219L124.3 243\" className=\"st8\"/>\n            <path d=\"M184.3 219L184.3 243\" className=\"st8\"/>\n            <path d=\"M140.8 219L140.8 243\" className=\"st8\"/>\n            <path d=\"M167.8 219L167.8 243\" className=\"st8\"/>\n            <path d=\"M80.4 219L80.4 243\" className=\"st8\"/>\n            <path d=\"M158.9 219L158.9 243\" className=\"st8\"/>\n            <path d=\"M245.9 219L245.9 243\" className=\"st8\"/>\n            <path d=\"M229.4 219L229.4 243\" className=\"st8\"/>\n            <path d=\"M219.9 219L219.9 243\" className=\"st8\"/>\n            <path d=\"M96.9 219L96.9 243\" className=\"st8\"/>\n            <path d=\"M115.4 219L115.4 243\" className=\"st8\"/>\n            <path d=\"M202.4 219L202.4 243\" className=\"st8\"/>\n            <path d=\"M131.9 219L131.9 243\" className=\"st8\"/>\n            <path d=\"M193.9 219L193.9 243\" className=\"st8\"/>\n            <path d=\"M149.4 219L149.4 243\" className=\"st8\"/>\n            <path d=\"M176.4 219L176.4 243\" className=\"st8\"/>\n            <text className=\"st5 st6\" transform=\"translate(615.473 200.071)\">\n                3&apos;\n            </text>\n            <text className=\"st5 st6\" transform=\"translate(615.473 271.737)\">\n                5&apos;\n            </text>\n            <g>\n                <path d=\"M478 251.5L670 250.5\" className=\"st8\"/>\n                <path d=\"M477.6 212L669.6 211\" className=\"st8\"/>\n            </g>\n            <g>\n                <path d=\"M537.7 221.7L537.7 234\" className=\"st10\"/>\n                <path d=\"M523.2 221.7L523.2 234\" className=\"st10\"/>\n                <path d=\"M508.7 221.7L508.7 234\" className=\"st10\"/>\n            </g>\n            <text className=\"st11 st12 st7\" transform=\"translate(256.166 301.005)\">\n                {spacer.replace('T', 'U')}\n            </text>\n            <text className=\"st11 st12 st7\" transform=\"rotate(30 48.05 910.285)\">\n                {reverse(first5)}\n            </text>\n            <text className=\"st5 st7\" transform=\"rotate(30 -139.884 921.731)\">\n                {spacer.substring(17, 20)}\n            </text>\n            <g>\n                <path d=\"M483 219L483 243\" className=\"st8\"/>\n                <path d=\"M648 219L648 243\" className=\"st8\"/>\n                <path d=\"M621.5 219L621.5 243\" className=\"st8\"/>\n                <path d=\"M499.5 219L499.5 243\" className=\"st8\"/>\n                <path d=\"M516 219L516 243\" className=\"st8\"/>\n                <path d=\"M534.5 219L534.5 243\" className=\"st8\"/>\n                <path d=\"M594.5 219L594.5 243\" className=\"st8\"/>\n                <path d=\"M551 219L551 243\" className=\"st8\"/>\n                <path d=\"M578 219L578 243\" className=\"st8\"/>\n                <path d=\"M490.7 219L490.7 243\" className=\"st8\"/>\n                <path d=\"M569.2 219L569.2 243\" className=\"st8\"/>\n                <path d=\"M656.2 219L656.2 243\" className=\"st8\"/>\n                <path d=\"M639.7 219L639.7 243\" className=\"st8\"/>\n                <path d=\"M630.2 219L630.2 243\" className=\"st8\"/>\n                <path d=\"M507.2 219L507.2 243\" className=\"st8\"/>\n                <path d=\"M525.7 219L525.7 243\" className=\"st8\"/>\n                <path d=\"M612.7 219L612.7 243\" className=\"st8\"/>\n                <path d=\"M542.2 219L542.2 243\" className=\"st8\"/>\n                <path d=\"M604.2 219L604.2 243\" className=\"st8\"/>\n                <path d=\"M559.7 219L559.7 243\" className=\"st8\"/>\n                <path d=\"M586.7 219L586.7 243\" className=\"st8\"/>\n            </g>\n            <g>\n                <text className=\"st5 st7\" transform=\"rotate(-30 526.818 -360.396)\">\n                    {spacer.substring(0, 17)}\n                </text>\n                <text transform=\"rotate(-30 434.94 -420.564)\">\n                    <tspan x={(13-pbsLength)*10} y=\"0\" className=\"st11 st12 st7\">\n                        {reverse(pbs)}\n                    </tspan>\n                </text>\n                {pbsLength > 0 && <path d=\"M385 97.9L397 118.7\" className=\"st8\"/>}\n                {pbsLength > 1 && <path d=\"M371.6 102.7L383.6 123.4\" className=\"st8\"/>}\n                {pbsLength > 2 && <path d=\"M363 107.6L375 128.4\" className=\"st8\"/>}\n                {pbsLength > 3 && <path d=\"M353.3 113.2L365.3 134\" className=\"st8\"/>}\n                {pbsLength > 4 && <path d=\"M344.6 118.3L356.6 139.1\" className=\"st8\"/>}\n                {pbsLength > 5 && <path d=\"M335.5 123.5L347.5 144.3\" className=\"st8\"/>}\n                {pbsLength > 6 && <path d=\"M326.8 128.5L338.8 149.3\" className=\"st8\"/>}\n                {pbsLength > 7 && <path d=\"M317 134.2L329 155\" className=\"st8\"/>}\n                {pbsLength > 8 && <path d=\"M309 138.8L321 159.6\" className=\"st8\"/>}\n                {pbsLength > 9 && <path d=\"M300.2 143.9L312.2 164.7\" className=\"st8\"/>}\n                {pbsLength > 10 && <path d=\"M291.1 149.1L303.1 169.9\" className=\"st8\"/>}\n                {pbsLength > 11 && <path d=\"M281.4 154.7L293.4 175.5\" className=\"st8\"/>}\n                {pbsLength > 12 && <path d=\"M272.6 159.8L284.6 180.6\" className=\"st8\"/>}\n                {pbsLength > 13 && <path d=\"M263.6 165L275.6 185.8\" className=\"st8\"/>}\n                {pbsLength > 14 && <path d=\"M255.8 169.5L267.8 190.3\" className=\"st8\"/>}\n                {pbsLength > 15 && <path d=\"M246.7 174.8L258.7 195.5\" className=\"st8\"/>}\n                {pbsLength > 16 && <path d=\"M236.9 180.4L248.9 201.2\" className=\"st8\"/>}\n            </g>\n            <text transform=\"translate(386.513 92.29)\">\n                <tspan x=\"5\" y=\"-5\" className=\"st11 st12 st7\">\n                    {reverse(last5)}\n                </tspan>\n            </text>\n            <text transform=\"translate(458.702 35.889)\">\n                <tspan x={(loopfirst.length-5)*3-5*(flip.length-1)} y={(5-loopfirst.length)*11} className=\"st11 st12 st7\">\n                    {flip}\n                </tspan>\n            </text>\n            <text transform=\"rotate(-75.001 277.498 -245.58)\">\n                <tspan x=\"10\" y=\"0\" className=\"st11 st12 st7\">\n                    {reverse(looplast)}\n                </tspan>\n            </text>\n            <text\n               \n                transform=\"scale(-1) rotate(-75.001 -260.38 288.099)\"\n            >\n                <tspan x={(5-loopfirst.length)*11} y=\"0\" className=\"st11 st12 st7\">\n                    {reverse(loopfirst)}\n                </tspan>\n            </text>\n            <g>\n                <path d=\"M262 261.5L262 285.5\" className=\"st8\"/>\n                <path d=\"M272.7 261.5L272.7 285.5\" className=\"st8\"/>\n                <path d=\"M283.4 261.5L283.4 285.5\" className=\"st8\"/>\n                <path d=\"M294.1 261.5L294.1 285.5\" className=\"st8\"/>\n                <path d=\"M304.8 261.5L304.8 285.5\" className=\"st8\"/>\n                <path d=\"M315.5 261.5L315.5 285.5\" className=\"st8\"/>\n                <path d=\"M326.2 261.5L326.2 285.5\" className=\"st8\"/>\n                <path d=\"M336.9 261.5L336.9 285.5\" className=\"st8\"/>\n                <path d=\"M347.6 261.5L347.6 285.5\" className=\"st8\"/>\n                <path d=\"M358.3 261.5L358.3 285.5\" className=\"st8\"/>\n                <path d=\"M370 261.5L370 285.5\" className=\"st8\"/>\n                <path d=\"M380.7 261.5L380.7 285.5\" className=\"st8\"/>\n                <path d=\"M391.4 261.5L391.4 285.5\" className=\"st8\"/>\n                <path d=\"M402.1 261.5L402.1 285.5\" className=\"st8\"/>\n                <path d=\"M412.8 261.5L412.8 285.5\" className=\"st8\"/>\n                <path d=\"M423.5 261.5L423.5 285.5\" className=\"st8\"/>\n                <path d=\"M434.2 261.5L434.2 285.5\" className=\"st8\"/>\n                <path d=\"M444.9 261.5L444.9 285.5\" className=\"st8\"/>\n                <path d=\"M455.6 261.5L455.6 285.5\" className=\"st8\"/>\n                <path d=\"M466.3 261.5L466.3 285.5\" className=\"st8\"/>\n            </g>\n        </g>\n    </svg>\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {Container, Row, Col, Card, Nav, Button, Form, ButtonGroup} from 'react-bootstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport { SeqViz } from 'seqvizcustom/viewer';\nimport { COLORS } from \"seqvizcustom/utils/colors\";\n\nimport OrganismBox from \"view/Shared/OrganismBox\";\nimport SequenceBox from \"view/Shared/SequenceBox\";\nimport EditBox from \"./components/EditBox\";\nimport { NickingOligosBox } from \"./components/OligosBox\";\n\nimport { routePegRNADetail, routeJobDetail, routeNickingDetail } from 'state/routes';\n\nimport { Header, offTargetFormatter, onTargetFormatter, spacerURL } from './components/formatters'\nimport { offTargetColumns, alternateColumns } from './components/columns'\nimport JobStatusBox from \"./components/JobStatusBox\";\nimport { pegRNASpacerPosition, pegRNAExtensionPosition, nickingGRNASpacerPosition } from \"./functions/positionCalculations\";\n\nimport Image from './components/Image'\n\nexport class PegRNADetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'table',\n        }\n    }\n\n    render() {\n\n        const { jobId, organism, sequenceObject, status, sequenceType, pegRNA, warning, edit, options,\n                minPos, chosenEdit, routeJobDetail, routePegRNADetail, pegRNAs, chosenPegRNA,\n                visualSequence, nickingOffset, translations } = this.props;\n        let { nicking=[], spacer='', offtargets=[[],[]], alternateExtensions=[]} = pegRNA;\n        const { selectedTab } = this.state;\n        const chosenPegRNAIndex = pegRNAs.map(p => p.spacer).indexOf(chosenPegRNA);\n\n        const columns = [{\n            dataField: 'spacer',\n            text: 'Spacer',\n            sort: true,\n            formatter: (cell ) => spacerURL(routeNickingDetail(jobId, chosenEdit, pegRNA.spacer, cell), cell),\n            headerFormatter: (column) => Header(column, 'Sequence of the sgRNA spacer'),\n        }, {\n            dataField: 'position',\n            text: 'Position',\n            sort: true,\n            headerFormatter: (column) => Header(column, 'Position of the cut site, relative to pegRNA cut site'),\n        }, {\n            dataField: 'kind',\n            text: 'Kind',\n            sort: true,\n            headerFormatter: (column) => Header(column, 'Whether the cut site unique for the mutation (3b) or not (3a)'),\n        }, {\n            dataField: 'oligos',\n            dummyField: true,\n            text: 'Oligos',\n            formatter: (cell, row) => <NickingOligosBox nicking={row} />,\n            headerFormatter: (column) => Header(column, 'Oligos for cloning nicking sgRNA.'),\n        }, {\n            dataField: 'wtScore',\n            text: 'Wild type score',\n            formatter: onTargetFormatter,\n            headerFormatter: (column) => Header(column, 'Score based on Doench et. al, 2016, lower is better'),\n        }, {\n            dataField: 'score',\n            text: 'On Target Score',\n            formatter: onTargetFormatter,\n            headerFormatter: (column) => Header(column, 'Score based on Doench et. al, 2016, higher is better'),\n        }, {\n            dataField: 'offtargets',\n            text: 'Targets',\n            formatter: offTargetFormatter,\n            headerFormatter: (column) => Header(column, 'Potential (off) targets with [0,1,2,3] mismatches'),\n        },\n        ];\n\n        let primers = [];\n\n        if(pegRNA.hasOwnProperty('visualSpacer')) {\n            primers.push({\n                primerName: `SPACER`,\n                id: `SPACER`,\n                seq: pegRNA.visualSpacer,\n                color: 'red',\n                opacity: .5,\n                direction: pegRNA.strand,\n                ...pegRNASpacerPosition(pegRNA, visualSequence, nickingOffset),\n            });\n            primers.push({\n                primerName: `EXTENSION`,\n                id: `EXTENSION`,\n                seq: pegRNA.visualExtension,\n                color: 'red',\n                opacity: .5,\n                direction: -pegRNA.strand,\n                ...pegRNAExtensionPosition(pegRNA, visualSequence, nickingOffset),\n            });\n            primers = primers.concat(nicking.map((n,i) => ({\n                primerName: `NICKING ${n.position}`,\n                id: `NICKING ${n.position}`,\n                seq: n.visualSpacer,\n                color: COLORS[i%12],\n                direction: -pegRNA.strand,\n                //strict: n.kind === '3a',\n                ...nickingGRNASpacerPosition(pegRNA, n, visualSequence, nickingOffset),\n            })))\n        }\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <Button variant=\"outline-dark\" onClick={() => routeJobDetail(jobId, chosenEdit)}>\n                            <FaArrowLeft />Back to pegRNA list\n                        </Button>\n                    </Col>\n                    <Col md={6}>\n                        <Form.Control\n                            as=\"select\"\n                            custom\n                            onChange={(e) => routePegRNADetail(jobId, chosenEdit, e.target.value)}\n                            value={pegRNA.spacer}\n                        >\n                            {pegRNAs.map(p => <option value={p.spacer} key={p.spacer}>{p.spacer}</option>)}\n                        </Form.Control>\n                    </Col>\n                    <Col md={3}>\n                        <ButtonGroup style={{float: 'right'}}>\n                            <Button variant=\"outline-dark\" onClick={ () => routePegRNADetail(jobId, chosenEdit, pegRNAs[chosenPegRNAIndex - 1].spacer) } disabled={ chosenPegRNAIndex === 0 }>\n                                <FaArrowLeft/>Prev\n                            </Button>\n                            <Button variant=\"outline-dark\" onClick={ () => routePegRNADetail(jobId, chosenEdit, pegRNAs[chosenPegRNAIndex + 1].spacer) } disabled={ chosenPegRNAIndex === pegRNAs.length - 1  }>\n                                <FaArrowRight/>Next\n                            </Button>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                        <Card body>\n                            <Row>\n                                <Col md={4}>\n                                    <OrganismBox organism={organism} />\n                                    <SequenceBox baseURL={organism.sequenceSearch} sequenceType={sequenceType} sequenceObject={sequenceObject} />\n                                    <label style={{display: 'block'}}>Spacer sequence</label>\n                                    <strong className=\"info text-primary mono\">{spacer}</strong>\n                                    <hr/>\n                                    <JobStatusBox jobId={jobId} jobStatus={status} warning={warning}/>\n                                    <hr/>\n                                    <EditBox edit={edit} editOptions={options}/>\n                                </Col>\n                                <Col md={8}>\n                                    <Image spacer={pegRNA.spacer} rtTemplate={pegRNA.rtTemplate} pbs={pegRNA.pbs}/>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n                <br/>\n                    <Row>\n                        <Col>\n                            <Nav variant=\"tabs\" activeKey={selectedTab} onSelect={(k) => this.setState({selectedTab: k})} fill>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='table'>Nicking sgRNAs Table</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='sequence'>Nicking sgRNAs Sequence View</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='offtargets'>Targets</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='extensions'>Alternate extensions</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                            <Card>\n                                {selectedTab === 'table' &&\n                                    <BootstrapTable\n                                        keyField='spacer'\n                                        data={ nicking }\n                                        columns={ columns }\n                                        bootstrap4={true}\n                                        bordered={false}\n                                        defaultSorted={[{dataField: 'kind', order: 'desc'}]}\n                                        striped\n                                        hover\n                                        height='60vh'\n                                    />}\n                                {selectedTab === 'sequence' && <SeqViz\n                                    name=\"jobSequence\"\n                                    seq={visualSequence}\n                                    translations={translations}\n                                    primers={primers}\n                                    showPrimers={true}\n                                    style={{ height: \"90vh\", width: \"100%\" }}\n                                    viewer=\"linear\"\n                                    showComplement={false}\n                                    upstream={-minPos}\n                                    //copyEvent={event => event.key === \"c\" && (event.metaKey || event.ctrlKey)}\n                                    //findBindingSites={true}\n                                />}\n                                {selectedTab === 'offtargets' &&\n                                <BootstrapTable\n                                    keyField='spacer'\n                                    data={ offtargets[1] }\n                                    columns={ offTargetColumns }\n                                    bootstrap4={true}\n                                    bordered={false}\n                                    defaultSorted={[{dataField: 'kind', order: 'desc'}]}\n                                    striped\n                                    hover\n                                    height='60vh'\n                                />}\n                                {selectedTab === 'extensions' &&\n                                <BootstrapTable\n                                    keyField='sequence'\n                                    data={ alternateExtensions }\n                                    columns={ alternateColumns }\n                                    bootstrap4={true}\n                                    bordered={false}\n                                    striped\n                                    hover\n                                    height='60vh'\n                                />}\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n\n\n    let { jobId, organism, status } = state.job.summary;\n    organism = organism ? organism : {name: undefined, assembly: undefined, source: undefined };\n    let { pegRNAs=[], edit, warning, options='', sequenceType, start, visualNicking, nickingOffset, translations=[] } = state.job.detail;\n\n    let {sequenceObject = {id: 'undefined', name: 'undefined', source: 'undefined', sequence: ''}} = state.job.detail;\n\n    let { pegRNA } = state.location.payload;\n    pegRNA = pegRNAs.find(p => p.spacer === pegRNA) || {};\n\n    return {\n        organism,\n        jobId,\n        pegRNA,\n        sequenceObject,\n        status,\n        sequenceType,\n        warning,\n        edit,\n        options,\n        visualSequence: visualNicking,\n        nickingOffset,\n        translations: translations.map(t => ({ ...t, start: t.start + nickingOffset, end: t.end + nickingOffset, direction: 1 })),\n        minPos: start,\n        chosenEdit: state.location.payload.edit,\n        chosenPegRNA: state.location.payload.pegRNA,\n        pegRNAs,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        routeJobDetail: (jobId, edit) => dispatch(routeJobDetail(jobId, edit)),\n        routePegRNADetail: (jobId, edit, pegRNA) => dispatch(routePegRNADetail(jobId, edit, pegRNA)),\n    }\n};\n\nexport const ConnectedPegRNADetail = connect(mapStateToProps, mapDispatchToProps)(PegRNADetail);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {Container, Row, Col, Card, Button, Form, ButtonGroup} from 'react-bootstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport OrganismBox from \"view/Shared/OrganismBox\";\nimport SequenceBox from \"view/Shared/SequenceBox\";\nimport EditBox from \"./components/EditBox\";\nimport JobStatusBox from \"./components/JobStatusBox\";\nimport { routePegRNADetail, routeNickingDetail } from 'state/routes';\n\nimport { offTargetColumns } from './components/columns'\nimport Image from './components/Image'\n\nexport class NickingDetail extends Component {\n\n    render() {\n\n        const { jobId, organism, sequenceObject, status, sequenceType, nicking, edit, editOptions, warning, chosenEdit,\n            pegRNAs, chosenPegRNA, pegRNA, chosenNicking, routePegRNADetail, routeNickingDetail } = this.props;\n        const { spacer='', offtargets=[[],[]] } = nicking;\n\n        const chosenNickingIndex = pegRNA.nicking.map(n => n.spacer).indexOf(chosenNicking);\n        return (\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <Button variant=\"outline-dark\" onClick={() => routePegRNADetail(jobId, chosenEdit, chosenPegRNA)}>\n                            <FaArrowLeft />Back to nicking sgRNA list\n                        </Button>\n                    </Col>\n                    <Col md={6}>\n                        <Form.Control\n                            as=\"select\"\n                            custom\n                            onChange={(e) => routeNickingDetail(jobId, chosenEdit, chosenPegRNA, e.target.value)}\n                            value={chosenNicking}\n                        >\n                            {pegRNA.nicking.map(p => <option value={p.spacer} key={p.spacer}>{p.kind}: {p.spacer} {p.position}</option>)}\n                        </Form.Control>\n                    </Col>\n                    <Col md={3}>\n                        <ButtonGroup style={{float: 'right'}}>\n                            <Button variant=\"outline-dark\" onClick={ () => routeNickingDetail(jobId, chosenEdit, chosenPegRNA, pegRNA.nicking[chosenNickingIndex - 1].spacer) } disabled={ chosenNickingIndex === 0 }>\n                                <FaArrowLeft/>Prev\n                            </Button>\n                            <Button variant=\"outline-dark\" onClick={ () => routeNickingDetail(jobId, chosenEdit, chosenPegRNA, pegRNA.nicking[chosenNickingIndex + 1].spacer) } disabled={ chosenNickingIndex === pegRNAs.length - 1  }>\n                                <FaArrowRight/>Next\n                            </Button>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                        <Card body>\n                            <Row>\n                                <Col md={4}>\n                                    <OrganismBox organism={organism} />\n                                    <SequenceBox baseURL={organism.sequenceSearch} sequenceType={sequenceType} sequenceObject={sequenceObject} />\n                                    <label style={{display: 'block'}}>Spacer sequence</label>\n                                    <strong className=\"info text-primary mono\">{spacer}</strong>\n                                    <hr/>\n                                    <JobStatusBox jobId={jobId} jobStatus={status} warning={warning}/>\n                                    <hr/>\n                                    <EditBox edit={edit} editOptions={editOptions}/>\n                                </Col>\n                                <Col md={8}>\n                                    <Image spacer={spacer} />\n\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n                <br/>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <BootstrapTable\n                                    keyField='idx'\n                                    data={ offtargets[1].map((obj, i) => ({...obj, idx: i})) }\n                                    columns={ offTargetColumns }\n                                    bootstrap4={true}\n                                    bordered={false}\n                                    defaultSorted={[{dataField: 'kind', order: 'desc'}]}\n                                    striped\n                                    hover\n                                    height='60vh'\n                                />\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n\n    let { jobId, organism, status } = state.job.summary;\n    organism = organism ? organism : {name: undefined, assembly: undefined, source: undefined };\n    let { pegRNAs=[], edit, warning, options='', sequenceType } = state.job.detail;\n\n    let {sequenceObject = {id: 'undefined', name: 'undefined', source: 'undefined', sequence: ''}} = state.job.detail;\n\n    let { pegRNA, nicking } = state.location.payload;\n    pegRNA = pegRNAs.find(p => p.spacer === pegRNA) || {nicking: []};\n    nicking = pegRNA.nicking.find(n => n.spacer === nicking) || {};\n\n\n    return {\n        organism,\n        jobId,\n        pegRNA,\n        sequenceObject,\n        status,\n        sequenceType,\n        nicking,\n        warning,\n        edit,\n        editOptions: options,\n        chosenEdit: state.location.payload.edit,\n        chosenPegRNA: state.location.payload.pegRNA,\n        chosenNicking: state.location.payload.nicking,\n        pegRNAs,\n    }\n\n\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        routePegRNADetail: (jobId, edit, pegRNA) => dispatch(routePegRNADetail(jobId, edit, pegRNA)),\n        routeNickingDetail: (jobId, edit, pegRNA, nicking) => dispatch(routeNickingDetail(jobId, edit, pegRNA, nicking)),\n    }\n};\n\nexport const ConnectedNickingDetail = connect(mapStateToProps, mapDispatchToProps)(NickingDetail);","import { connect } from \"react-redux\";\n\nimport { requestAddEdit } from 'state/home';\nimport { Submission } from \"./Submission\";\n\nconst mapStateToProps = (state) => {\n    const { transcript, loading, error: sequenceError } = state.transcript;\n    const { submitting: isSubmitting, error: submitError } = state.home.addEdit;\n    const { selectedOrganism: organism={} } = state.home;\n    const { edits } = state.edits;\n\n    return {\n        loading,\n        sequenceError,\n        isSubmitting,\n        submitError,\n        sequenceType: 'Transcript',\n        sequenceId: transcript.id,\n        organism,\n        canSubmit: !!organism.id && !!transcript.id,\n        sequenceObject: {id: transcript.transcriptId, name: transcript.name, source: transcript.source, sequence: transcript.sequence},\n        edits: transcript.transcriptType === 'protein_coding' ? edits : edits.map(ed => ({ ...ed, disabled: !ed.allowGenomic})),\n        annotations: transcript.exons ? transcript.exons.map((exon, i) => ({\n                name: 'Exon ' + (i+1).toString(),\n                id: 'Exon ' + (i+1).toString(),\n                start: transcript.strand === '+' ? exon.start - transcript.start : transcript.end - exon.end,\n                end: transcript.strand === '+' ? exon.end - transcript.start + 1 : transcript.end - exon.start + 1,\n                direction: 1,\n                color: \"#6B81FF\",\n            })) : [],\n        translations: transcript.codingSequences ? transcript.codingSequences.map((cds, i) => ({\n                start: transcript.strand === '+' ? cds.start - transcript.start : transcript.end - cds.end,\n                end: transcript.strand === '+' ? cds.end - transcript.start + 1 : transcript.end - cds.start + 1,\n                direction: 1,\n                offset: i,\n            })) : [],\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitJob: (jobData) => {\n            dispatch(requestAddEdit(jobData));\n        },\n    }\n};\n\nexport const ConnectedTranscript = connect(mapStateToProps, mapDispatchToProps)(Submission);","import { connect } from \"react-redux\";\n\nimport { requestAddEdit } from 'state/home';\nimport { Submission } from \"./Submission\";\n\nconst mapStateToProps = (state) => {\n    const { submitting: isSubmitting, error: submitError } = state.home.addEdit;\n    const { sequence, name } = state.customsequence;\n    const { selectedOrganism: organism={} } = state.home;\n\n    const { edits } = state.edits;\n\n    return {\n        isSubmitting,\n        submitError,\n        sequenceType: 'DNA sequence',\n        sequenceId: null,\n        organism,\n        sequenceObject: {id: null, name, source: null, sequence},\n        canSubmit: sequence.length,\n        edits: edits.map(ed => ({ ...ed, disabled: !ed.allowGenomic})),\n    }\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { dispatch } = dispatchProps;\n    return {\n        ...stateProps,\n        submitJob: (jobData) => {\n            jobData = { ...jobData, sequenceType: 'custom', sequence: stateProps.sequenceObject.name+','+stateProps.sequenceObject.sequence };\n            dispatch(requestAddEdit(jobData));\n        },\n    }\n};\n\nexport const CustomSequence = connect(mapStateToProps, null, mergeProps)(Submission);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NOT_FOUND } from 'redux-first-router'\n\nimport { routeType, ROUTE_ABOUT, ROUTE_CONTACT, ROUTE_FAQ, ROUTE_GENE, ROUTE_REGION, ROUTE_HOME, ROUTE_INSTRUCTIONS, ROUTE_JOB_SUMMARY, ROUTE_JOB_DETAIL, ROUTE_PEGRNADETAIL, ROUTE_NICKINGDETAIL, ROUTE_TRANSCRIPT, ROUTE_CUSTOMSEQUENCE } from 'state/routes'\nimport { About } from 'view/About'\nimport { Contact } from 'view/Contact'\nimport { FAQ } from 'view/FAQ'\nimport { Instructions } from 'view/Instructions'\nimport { ConnectedGene } from 'view/Submission/Gene'\nimport { ConnectedRegion } from 'view/Submission/Region'\nimport { ConnectedHome } from 'view/Home'\nimport { ConnectedSummary } from 'view/Job/Summary';\nimport { ConnectedJob } from 'view/Job/List'\nimport { ConnectedPegRNADetail } from 'view/Job/Detail'\nimport { ConnectedNickingDetail } from 'view/Job/NickingDetail'\nimport { ConnectedTranscript } from 'view/Submission/Transcript'\nimport { CustomSequence } from 'view/Submission/CustomSequence'\n\nconst routesMap = {\n  [ROUTE_HOME]: ConnectedHome,\n  [ROUTE_ABOUT]: About,\n  [ROUTE_CONTACT]: Contact,\n  [ROUTE_FAQ]: FAQ,\n  [ROUTE_INSTRUCTIONS]: Instructions,\n  [ROUTE_CUSTOMSEQUENCE]: CustomSequence,\n  [ROUTE_GENE]: ConnectedGene,\n  [ROUTE_REGION]: ConnectedRegion,\n  [ROUTE_TRANSCRIPT]: ConnectedTranscript,\n  [ROUTE_JOB_SUMMARY]: ConnectedSummary,\n  [ROUTE_JOB_DETAIL]: ConnectedJob,\n  [ROUTE_PEGRNADETAIL]: ConnectedPegRNADetail,\n  [ROUTE_NICKINGDETAIL]: ConnectedNickingDetail,\n  [NOT_FOUND]: ConnectedHome\n};\n\nconst Container = ({route}) => {\n  const Route = routesMap[route] ? routesMap[route] : routesMap[NOT_FOUND];\n  return (\n    <Route />\n  )\n};\n\nconst mapStateToProps = (state) => ({ route: routeType(state) });\n\nexport const Routes = connect(mapStateToProps)(Container);","import React from 'react'\nimport {Card, Col, Container, Row} from 'react-bootstrap';\n\nexport const About = () => (\n    <Container>\n        <Row>\n            <Col>\n                <h1>About</h1>\n                <Card body>\n                    <p>pegIT facilitates rapid and effective design of pegRNAs for prime editing based on simple inputs. Simply select the desired organism, and gene of interest and input the desired modifications.</p>\n                    <p>For sequences not in the database, pegIT also supports custom DNA sequences that can be pasted directly into the software. Furthermore, variants can be imported directly from ClinVar and pegRNAs can be designed to introduce or repair the variant.</p>\n                    <p>pegIT can be downloaded <a href=\"https://github.com/dkmva/pegit\">here</a>, and be run locally, as a web and command-line tool</p>\n                    <h3>Reference</h3>\n                    <p>Manuscript in preparation</p>\n                </Card>\n            </Col>\n        </Row>\n    </Container>\n)","import React from 'react'\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\n\n\nexport const Contact = () => (\n    <Container>\n        <Row>\n            <Col>\n                <h1>Contact</h1>\n                <Card body>\n                    <p>For any pegIT related inquiries, contact <a href=\"mailto:mvand@biomed.au.dk\">Mads</a></p>\n                </Card>\n            </Col>\n        </Row>\n    </Container>\n)","\nimport React from 'react'\nimport Link from 'redux-first-router-link'\n\nimport { routeContact } from 'state/routes'\nimport {Container, Card, Col, Row} from \"react-bootstrap\";\n\nexport const FAQ = () => (\n    <Container>\n        <Row>\n            <Col>\n                <h1>FAQ</h1>\n                <Card body>\n                    <h3>My desired organism is not available. Can you add it?</h3>\n                    <p>We need a GFF3 annotation file and corresponding genome sequence in fasta format, and if possible a codon usage table.<br/> <Link to={routeContact()}>Contact us about adding the organism</Link></p>\n                    <h3>Is there a command-line tool?</h3>\n                    <p>pegIT can be downloaded <a href=\"https://github.com/dkmva/pegit\">here</a>, and be run locally, as a web and command-line tool</p>\n                    <h3>How do i reference pegIT in my work?</h3>\n                    <p>Manuscript is currently in preparation</p>\n                </Card>\n            </Col>\n        </Row>\n    </Container>\n)","\nimport React from 'react'\n\nimport { FaRegQuestionCircle } from 'react-icons/fa';\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\n\nexport const Instructions = () => (\n    <Container>\n        <Row>\n            <Col>\n                <h1>Instructions</h1>\n                <Card body>\n                    <h3>Selecting a gene of interest.</h3>\n                    <p>The first step is to select an organism. This allows searching for the gene of interest.</p>\n                    <p>Genes can be searched by symbol or gene id. After a gene has been chosen, you can select either the gene, or if available, a transcript in the view below.</p>\n                    <h3>Non-coding regions / custom sequences</h3>\n                    <p>When working with genes not in the database, DNA sequences can be pasted instead. Click the 'Custom sequence / Genomic coordinates' button, to reveal a text input.</p>\n                    <p>The pasted sequence should contain atleast 200 nucleotides flanking the the desired genetic edit, or more if larger PCR products are desired.</p>\n                    <p>For non-coding regions, genomic coordinates can be entered into this box, to retrieve the corresponding DNA sequence.</p>\n                    <h3>Specifying the desired changes.</h3>\n                    <p>The next step is to input the desired genetic change. First you must choose which kind of edit to perform, from a list of available edits.</p>\n                    <p>The input form changes corresponding to the selected edit. For information on how to fill the form, click on the <FaRegQuestionCircle /> above the edit selection</p>\n                    <p>When the desired inputs have been filled, click 'Add to edit list'. Repeat for more edits. When the desired edits have been added. Click submit to start the job.</p>\n                    <h3>ClinVar edits</h3>\n                    <p>When selecing ClinVar under 'organisms', it is possible to search the clinVar database for variants, and design pegRNAs to introduce or repair the given variant.</p>\n                    <h3>Uploading edits</h3>\n                    <p>It is also possible to upload desired edits in a tab-separated file, with no header line.</p>\n                    <p>For regular edits. 4 columns are required, (sequence_type, sequence, edit, options), example for Homo Sapiens - Gencode Release 33 (GRCh38.p13) <a href={process.env.PUBLIC_URL + 'example_edits_gencode_release_33'} download>Download example file</a></p>\n                    <pre>\n                        transcript\tHBB-201\tAminoAcidAlteration\talteration=V2A<br/>\n                        gene\tHBB\tInsertion\tinsert=ATG,position=200<br/>\n                        genomic\tchr3\tDeletion\tdelete=ACAGTCAGTATCAATTCTGGAAGAATTTCCAG,position=46373453<br/>\n                    </pre>\n                    <p>For custom sequences, the sequence_type should be custom, and the sequence field contain the DNA sequence. Custom sequences can be named, by providing the sequene as NAME,SEQUENCE</p>\n                    <pre>\n                        custom GFP,atggtgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgacctacggcgtgcagtgcttcagccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaactacaacagccacaacgtctatatcatggccgacaagcagaagaacggcatcaaggtgaacttcaagatccgccacaacatcgaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagcacccagtccgccctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctcggcatggacgagctgtacaag  Insertion    insert=A,position=250\n                    </pre>\n                    <p>For clinVar edits. 2 columns are required, (clinVar id, repair) <a href={process.env.PUBLIC_URL + 'example_edits_clinvar'} download>Download example file</a></p>\n                    <pre>\n                        VCV000834692\tfalse<br/>\n                        VCV000834692\ttrue\n                    </pre>\n                </Card>\n            </Col>\n        </Row>\n    </Container>\n)","import React from 'react'\nimport { Routes } from 'view/Routes'\nimport 'App.css';\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { NavLink } from \"redux-first-router-link\";\n\nimport { routeAbout, routeContact, routeFAQ, routeHome, routeInstructions } from 'state/routes'\n\n\nconst NavItem = ({to, text, disabled=false}) => (\n    <Nav.Item>\n        <NavLink to={to} className={disabled ? 'nav-link disabled' : 'nav-link'} isActive={() => false}>\n            {text}\n        </NavLink>\n    </Nav.Item>\n);\n\nconst navLinks = [\n    {to: routeHome(), text: 'Home'},\n    {to: routeInstructions(), text: 'Instructions'},\n    {to: routeAbout(), text: 'About'},\n    {to: routeContact(), text: 'Contact'},\n    {to: routeFAQ(), text: 'FAQ'},\n];\n\nconst App = () => {\n    return (\n        <React.Fragment>\n            <Container>\n                <Navbar bg=\"light\" variant=\"light\" style={{display: 'block'}} fixed=\"top\">\n                    <Nav fill>\n                        {navLinks.map((item, i) => <NavItem key={item.text} to={item.to} text={item.text} disabled={item.disabled}/>)}\n                    </Nav>\n                </Navbar>\n            </Container>\n            <div style={{marginTop: \"72px\", paddingTop: \"10px\"}}>\n                <Routes />\n            </div>\n            <br/>\n        </React.Fragment>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { store } from \"./configureStore\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from 'view/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}